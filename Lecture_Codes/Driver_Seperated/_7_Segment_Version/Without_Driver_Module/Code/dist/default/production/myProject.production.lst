

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Wed Sep 20 19:16:38 2023

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18  0000                     
    19                           ; Version 1.41
    20                           ; Generated 25/01/2017 GMT
    21                           ; 
    22                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC18F4620 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     
    54                           	psect	idataCOMRAM
    55  00FCAB                     __pidataCOMRAM:
    56                           	opt stack 0
    57                           
    58                           ;initializer for _segment_array
    59  00FCAB  C0                 	db	192
    60  00FCAC  F9                 	db	249
    61  00FCAD  A4                 	db	164
    62  00FCAE  B0                 	db	176
    63  00FCAF  99                 	db	153
    64  00FCB0  92                 	db	146
    65  00FCB1  82                 	db	130
    66  00FCB2  F8                 	db	248
    67  00FCB3  80                 	db	128
    68  00FCB4  90                 	db	144
    69                           
    70                           ;initializer for _lat_register
    71  00FCB5  89                 	db	137
    72  00FCB6  0F                 	db	15
    73  00FCB7  8A                 	db	138
    74  00FCB8  0F                 	db	15
    75  00FCB9  8B                 	db	139
    76  00FCBA  0F                 	db	15
    77  00FCBB  8C                 	db	140
    78  00FCBC  0F                 	db	15
    79  00FCBD  8D                 	db	141
    80  00FCBE  0F                 	db	15
    81                           
    82                           ;initializer for _port_register
    83  00FCBF  80                 	db	128
    84  00FCC0  0F                 	db	15
    85  00FCC1  81                 	db	129
    86  00FCC2  0F                 	db	15
    87  00FCC3  82                 	db	130
    88  00FCC4  0F                 	db	15
    89  00FCC5  83                 	db	131
    90  00FCC6  0F                 	db	15
    91  00FCC7  84                 	db	132
    92  00FCC8  0F                 	db	15
    93                           
    94                           ;initializer for _tris_register
    95  00FCC9  92                 	db	146
    96  00FCCA  0F                 	db	15
    97  00FCCB  93                 	db	147
    98  00FCCC  0F                 	db	15
    99  00FCCD  94                 	db	148
   100  00FCCE  0F                 	db	15
   101  00FCCF  95                 	db	149
   102  00FCD0  0F                 	db	15
   103  00FCD1  96                 	db	150
   104  00FCD2  0F                 	db	15
   105                           
   106                           ;initializer for _delay_required
   107  00FCD3  05                 	db	5
   108                           
   109                           ;initializer for _hours
   110  00FCD4  13                 	db	19
   111                           
   112                           ;initializer for _minutes
   113  00FCD5  10                 	db	16
   114  0000                     _LATE	set	3981
   115  0000                     _LATD	set	3980
   116  0000                     _LATC	set	3979
   117  0000                     _LATB	set	3978
   118  0000                     _LATA	set	3977
   119  0000                     _PORTE	set	3972
   120  0000                     _PORTD	set	3971
   121  0000                     _PORTC	set	3970
   122  0000                     _PORTB	set	3969
   123  0000                     _PORTA	set	3968
   124  0000                     _TRISE	set	3990
   125  0000                     _TRISD	set	3989
   126  0000                     _TRISC	set	3988
   127  0000                     _TRISB	set	3987
   128  0000                     _TRISA	set	3986
   129                           
   130                           ; #config settings
   131  0000                     
   132                           	psect	cinit
   133  00FCD6                     __pcinit:
   134                           	opt stack 0
   135  00FCD6                     start_initialization:
   136                           	opt stack 0
   137  00FCD6                     __initialization:
   138                           	opt stack 0
   139                           
   140                           ; Initialize objects allocated to COMRAM (43 bytes)
   141                           ; load TBLPTR registers with __pidataCOMRAM
   142  00FCD6  0EAB               	movlw	low __pidataCOMRAM
   143  00FCD8  6EF6               	movwf	tblptrl,c
   144  00FCDA  0EFC               	movlw	high __pidataCOMRAM
   145  00FCDC  6EF7               	movwf	tblptrh,c
   146  00FCDE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   147  00FCE0  6EF8               	movwf	tblptru,c
   148  00FCE2  EE00  F001         	lfsr	0,__pdataCOMRAM
   149  00FCE6  EE10 F02B          	lfsr	1,43
   150  00FCEA                     copy_data0:
   151  00FCEA  0009               	tblrd		*+
   152  00FCEC  CFF5 FFEE          	movff	tablat,postinc0
   153  00FCF0  50E5               	movf	postdec1,w,c
   154  00FCF2  50E1               	movf	fsr1l,w,c
   155  00FCF4  E1FA               	bnz	copy_data0
   156                           
   157                           ; Clear objects allocated to COMRAM (1 bytes)
   158  00FCF6  6A3C               	clrf	__pbssCOMRAM& (0+255),c
   159  00FCF8                     end_of_initialization:
   160                           	opt stack 0
   161  00FCF8                     __end_of__initialization:
   162                           	opt stack 0
   163  00FCF8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   164  00FCFA  6EF8               	movwf	tblptru,c
   165  00FCFC  0100               	movlb	0
   166  00FCFE  EF37  F07F         	goto	_main	;jump to C main() function
   167                           tblptru	equ	0xFF8
   168                           tblptrh	equ	0xFF7
   169                           tblptrl	equ	0xFF6
   170                           tablat	equ	0xFF5
   171                           postinc0	equ	0xFEE
   172                           postdec1	equ	0xFE5
   173                           fsr1l	equ	0xFE1
   174                           
   175                           	psect	bssCOMRAM
   176  00003C                     __pbssCOMRAM:
   177                           	opt stack 0
   178  00003C                     _seconds:
   179                           	opt stack 0
   180  00003C                     	ds	1
   181                           tblptru	equ	0xFF8
   182                           tblptrh	equ	0xFF7
   183                           tblptrl	equ	0xFF6
   184                           tablat	equ	0xFF5
   185                           postinc0	equ	0xFEE
   186                           postdec1	equ	0xFE5
   187                           fsr1l	equ	0xFE1
   188                           
   189                           	psect	dataCOMRAM
   190  000001                     __pdataCOMRAM:
   191                           	opt stack 0
   192  000001                     _segment_array:
   193                           	opt stack 0
   194  000001                     	ds	10
   195  00000B                     _lat_register:
   196                           	opt stack 0
   197  00000B                     	ds	10
   198  000015                     _port_register:
   199                           	opt stack 0
   200  000015                     	ds	10
   201  00001F                     _tris_register:
   202                           	opt stack 0
   203  00001F                     	ds	10
   204  000029                     _delay_required:
   205                           	opt stack 0
   206  000029                     	ds	1
   207  00002A                     _hours:
   208                           	opt stack 0
   209  00002A                     	ds	1
   210  00002B                     _minutes:
   211                           	opt stack 0
   212  00002B                     	ds	1
   213                           tblptru	equ	0xFF8
   214                           tblptrh	equ	0xFF7
   215                           tblptrl	equ	0xFF6
   216                           tablat	equ	0xFF5
   217                           postinc0	equ	0xFEE
   218                           postdec1	equ	0xFE5
   219                           fsr1l	equ	0xFE1
   220                           
   221                           	psect	cstackCOMRAM
   222  00002C                     __pcstackCOMRAM:
   223                           	opt stack 0
   224  00002C                     ?___awdiv:
   225                           	opt stack 0
   226  00002C                     ?___awmod:
   227                           	opt stack 0
   228  00002C                     gpio_port_direction_intialize@direction:
   229                           	opt stack 0
   230  00002C                     ___awdiv@dividend:
   231                           	opt stack 0
   232  00002C                     ___awmod@dividend:
   233                           	opt stack 0
   234                           
   235                           ; 2 bytes @ 0x0
   236  00002C                     	ds	1
   237  00002D                     ??_gpio_port_direction_intialize:
   238                           
   239                           ; 1 bytes @ 0x1
   240  00002D                     	ds	1
   241  00002E                     ___awdiv@divisor:
   242                           	opt stack 0
   243  00002E                     ___awmod@divisor:
   244                           	opt stack 0
   245                           
   246                           ; 2 bytes @ 0x2
   247  00002E                     	ds	1
   248  00002F                     gpio_port_direction_intialize@LocalReturn:
   249                           	opt stack 0
   250                           
   251                           ; 1 bytes @ 0x3
   252  00002F                     	ds	1
   253  000030                     gpio_port_direction_intialize@port:
   254                           	opt stack 0
   255  000030                     ___awdiv@counter:
   256                           	opt stack 0
   257  000030                     ___awmod@counter:
   258                           	opt stack 0
   259                           
   260                           ; 1 bytes @ 0x4
   261  000030                     	ds	1
   262  000031                     ___awdiv@sign:
   263                           	opt stack 0
   264  000031                     ___awmod@sign:
   265                           	opt stack 0
   266                           
   267                           ; 1 bytes @ 0x5
   268  000031                     	ds	1
   269  000032                     ___awdiv@quotient:
   270                           	opt stack 0
   271                           
   272                           ; 2 bytes @ 0x6
   273  000032                     	ds	2
   274  000034                     gpio_port_write_logic@logic:
   275                           	opt stack 0
   276                           
   277                           ; 1 bytes @ 0x8
   278  000034                     	ds	1
   279  000035                     ??_gpio_port_write_logic:
   280                           
   281                           ; 1 bytes @ 0x9
   282  000035                     	ds	2
   283  000037                     gpio_port_write_logic@LocalReturn:
   284                           	opt stack 0
   285                           
   286                           ; 1 bytes @ 0xB
   287  000037                     	ds	1
   288  000038                     gpio_port_write_logic@port:
   289                           	opt stack 0
   290                           
   291                           ; 1 bytes @ 0xC
   292  000038                     	ds	1
   293  000039                     ??_main:
   294                           
   295                           ; 1 bytes @ 0xD
   296  000039                     	ds	1
   297  00003A                     main@count:
   298                           	opt stack 0
   299                           
   300                           ; 2 bytes @ 0xE
   301  00003A                     	ds	2
   302                           tblptru	equ	0xFF8
   303                           tblptrh	equ	0xFF7
   304                           tblptrl	equ	0xFF6
   305                           tablat	equ	0xFF5
   306                           postinc0	equ	0xFEE
   307                           postdec1	equ	0xFE5
   308                           fsr1l	equ	0xFE1
   309                           
   310 ;;
   311 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   312 ;;
   313 ;; *************** function _main *****************
   314 ;; Defined at:
   315 ;;		line 15 in file "application.c"
   316 ;; Parameters:    Size  Location     Type
   317 ;;		None
   318 ;; Auto vars:     Size  Location     Type
   319 ;;  count           2   14[COMRAM] int 
   320 ;; Return value:  Size  Location     Type
   321 ;;                  2  354[None  ] int 
   322 ;; Registers used:
   323 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   324 ;; Tracked objects:
   325 ;;		On entry : 0/0
   326 ;;		On exit  : 0/0
   327 ;;		Unchanged: 0/0
   328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   330 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   331 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   332 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   333 ;;Total ram usage:        3 bytes
   334 ;; Hardware stack levels required when called:    2
   335 ;; This function calls:
   336 ;;		___awdiv
   337 ;;		___awmod
   338 ;;		_functionInitialize
   339 ;;		_gpio_port_write_logic
   340 ;; This function is called by:
   341 ;;		Startup code after reset
   342 ;; This function uses a non-reentrant model
   343 ;;
   344                           
   345                           	psect	text0
   346  00FE6E                     __ptext0:
   347                           	opt stack 0
   348  00FE6E                     _main:
   349                           	opt stack 29
   350                           
   351                           ;application.c: 16: functionInitialize();
   352                           
   353                           ;incstack = 0
   354  00FE6E  EC4A  F07E         	call	_functionInitialize	;wreg free
   355  00FE72                     l1662:
   356                           
   357                           ;application.c: 19: for (int count = 0; count < 10; count++) {
   358  00FE72  0E00               	movlw	0
   359  00FE74  6E3B               	movwf	main@count+1,c
   360  00FE76  0E00               	movlw	0
   361  00FE78  6E3A               	movwf	main@count,c
   362  00FE7A  BE3B               	btfsc	main@count+1,7,c
   363  00FE7C  D008               	goto	l1668
   364  00FE7E  503B               	movf	main@count+1,w,c
   365  00FE80  E105               	bnz	u900
   366  00FE82  0E0A               	movlw	10
   367  00FE84  5C3A               	subwf	main@count,w,c
   368  00FE86  B0D8               	btfsc	status,0,c
   369  00FE88  D0A5               	goto	l1698
   370  00FE8A  D001               	goto	l1668
   371  00FE8C                     u900:
   372  00FE8C  D0A3               	goto	l1698
   373  00FE8E                     l1668:
   374                           
   375                           ;application.c: 21: gpio_port_write_logic(PORTD_INDEX, 0xFE);
   376  00FE8E  0EFE               	movlw	254
   377  00FE90  6E34               	movwf	gpio_port_write_logic@logic,c
   378  00FE92  0E03               	movlw	3
   379  00FE94  EC9F  F07E         	call	_gpio_port_write_logic
   380                           
   381                           ;application.c: 22: gpio_port_write_logic(PORTC_INDEX, ((uint8) (hours / 10)));
   382  00FE98  C02A  F02C         	movff	_hours,___awdiv@dividend
   383  00FE9C  6A2D               	clrf	___awdiv@dividend+1,c
   384  00FE9E  0E00               	movlw	0
   385  00FEA0  6E2F               	movwf	___awdiv@divisor+1,c
   386  00FEA2  0E0A               	movlw	10
   387  00FEA4  6E2E               	movwf	___awdiv@divisor,c
   388  00FEA6  ECF5  F07E         	call	___awdiv	;wreg free
   389  00FEAA  502C               	movf	?___awdiv,w,c
   390  00FEAC  6E34               	movwf	gpio_port_write_logic@logic,c
   391  00FEAE  0E02               	movlw	2
   392  00FEB0  EC9F  F07E         	call	_gpio_port_write_logic
   393                           
   394                           ;application.c: 23: _delay((unsigned long)((3333)*(4000000UL/4000000.0)));
   395  00FEB4  0E05               	movlw	5
   396  00FEB6  6E39               	movwf	??_main& (0+255),c
   397  00FEB8  0E53               	movlw	83
   398  00FEBA                     u957:
   399  00FEBA  2EE8               	decfsz	wreg,f,c
   400  00FEBC  D7FE               	bra	u957
   401  00FEBE  2E39               	decfsz	??_main& (0+255),f,c
   402  00FEC0  D7FC               	bra	u957
   403                           
   404                           ;application.c: 25: gpio_port_write_logic(PORTD_INDEX, 0xFD);
   405  00FEC2  0EFD               	movlw	253
   406  00FEC4  6E34               	movwf	gpio_port_write_logic@logic,c
   407  00FEC6  0E03               	movlw	3
   408  00FEC8  EC9F  F07E         	call	_gpio_port_write_logic
   409                           
   410                           ;application.c: 26: gpio_port_write_logic(PORTC_INDEX, ((uint8) (hours % 10)));
   411  00FECC  C02A  F02C         	movff	_hours,___awmod@dividend
   412  00FED0  6A2D               	clrf	___awmod@dividend+1,c
   413  00FED2  0E00               	movlw	0
   414  00FED4  6E2F               	movwf	___awmod@divisor+1,c
   415  00FED6  0E0A               	movlw	10
   416  00FED8  6E2E               	movwf	___awmod@divisor,c
   417  00FEDA  ECBD  F07E         	call	___awmod	;wreg free
   418  00FEDE  502C               	movf	?___awmod,w,c
   419  00FEE0  6E34               	movwf	gpio_port_write_logic@logic,c
   420  00FEE2  0E02               	movlw	2
   421  00FEE4  EC9F  F07E         	call	_gpio_port_write_logic
   422                           
   423                           ;application.c: 27: _delay((unsigned long)((3333)*(4000000UL/4000000.0)));
   424  00FEE8  0E05               	movlw	5
   425  00FEEA  6E39               	movwf	??_main& (0+255),c
   426  00FEEC  0E53               	movlw	83
   427  00FEEE                     u967:
   428  00FEEE  2EE8               	decfsz	wreg,f,c
   429  00FEF0  D7FE               	bra	u967
   430  00FEF2  2E39               	decfsz	??_main& (0+255),f,c
   431  00FEF4  D7FC               	bra	u967
   432                           
   433                           ;application.c: 29: gpio_port_write_logic(PORTD_INDEX, 0xF7);
   434  00FEF6  0EF7               	movlw	247
   435  00FEF8  6E34               	movwf	gpio_port_write_logic@logic,c
   436  00FEFA  0E03               	movlw	3
   437  00FEFC  EC9F  F07E         	call	_gpio_port_write_logic
   438                           
   439                           ;application.c: 30: gpio_port_write_logic(PORTC_INDEX, ((uint8) (minutes / 10)));
   440  00FF00  C02B  F02C         	movff	_minutes,___awdiv@dividend
   441  00FF04  6A2D               	clrf	___awdiv@dividend+1,c
   442  00FF06  0E00               	movlw	0
   443  00FF08  6E2F               	movwf	___awdiv@divisor+1,c
   444  00FF0A  0E0A               	movlw	10
   445  00FF0C  6E2E               	movwf	___awdiv@divisor,c
   446  00FF0E  ECF5  F07E         	call	___awdiv	;wreg free
   447  00FF12  502C               	movf	?___awdiv,w,c
   448  00FF14  6E34               	movwf	gpio_port_write_logic@logic,c
   449  00FF16  0E02               	movlw	2
   450  00FF18  EC9F  F07E         	call	_gpio_port_write_logic
   451                           
   452                           ;application.c: 31: _delay((unsigned long)((3333)*(4000000UL/4000000.0)));
   453  00FF1C  0E05               	movlw	5
   454  00FF1E  6E39               	movwf	??_main& (0+255),c
   455  00FF20  0E53               	movlw	83
   456  00FF22                     u977:
   457  00FF22  2EE8               	decfsz	wreg,f,c
   458  00FF24  D7FE               	bra	u977
   459  00FF26  2E39               	decfsz	??_main& (0+255),f,c
   460  00FF28  D7FC               	bra	u977
   461                           
   462                           ;application.c: 33: gpio_port_write_logic(PORTD_INDEX, 0xEF);
   463  00FF2A  0EEF               	movlw	239
   464  00FF2C  6E34               	movwf	gpio_port_write_logic@logic,c
   465  00FF2E  0E03               	movlw	3
   466  00FF30  EC9F  F07E         	call	_gpio_port_write_logic
   467                           
   468                           ;application.c: 34: gpio_port_write_logic(PORTC_INDEX, ((uint8) (minutes % 10)));
   469  00FF34  C02B  F02C         	movff	_minutes,___awmod@dividend
   470  00FF38  6A2D               	clrf	___awmod@dividend+1,c
   471  00FF3A  0E00               	movlw	0
   472  00FF3C  6E2F               	movwf	___awmod@divisor+1,c
   473  00FF3E  0E0A               	movlw	10
   474  00FF40  6E2E               	movwf	___awmod@divisor,c
   475  00FF42  ECBD  F07E         	call	___awmod	;wreg free
   476  00FF46  502C               	movf	?___awmod,w,c
   477  00FF48  6E34               	movwf	gpio_port_write_logic@logic,c
   478  00FF4A  0E02               	movlw	2
   479  00FF4C  EC9F  F07E         	call	_gpio_port_write_logic
   480                           
   481                           ;application.c: 35: _delay((unsigned long)((3333)*(4000000UL/4000000.0)));
   482  00FF50  0E05               	movlw	5
   483  00FF52  6E39               	movwf	??_main& (0+255),c
   484  00FF54  0E53               	movlw	83
   485  00FF56                     u987:
   486  00FF56  2EE8               	decfsz	wreg,f,c
   487  00FF58  D7FE               	bra	u987
   488  00FF5A  2E39               	decfsz	??_main& (0+255),f,c
   489  00FF5C  D7FC               	bra	u987
   490                           
   491                           ;application.c: 37: gpio_port_write_logic(PORTD_INDEX, 0xBF);
   492  00FF5E  0EBF               	movlw	191
   493  00FF60  6E34               	movwf	gpio_port_write_logic@logic,c
   494  00FF62  0E03               	movlw	3
   495  00FF64  EC9F  F07E         	call	_gpio_port_write_logic
   496                           
   497                           ;application.c: 38: gpio_port_write_logic(PORTC_INDEX, ((uint8) (seconds / 10)));
   498  00FF68  C03C  F02C         	movff	_seconds,___awdiv@dividend
   499  00FF6C  6A2D               	clrf	___awdiv@dividend+1,c
   500  00FF6E  0E00               	movlw	0
   501  00FF70  6E2F               	movwf	___awdiv@divisor+1,c
   502  00FF72  0E0A               	movlw	10
   503  00FF74  6E2E               	movwf	___awdiv@divisor,c
   504  00FF76  ECF5  F07E         	call	___awdiv	;wreg free
   505  00FF7A  502C               	movf	?___awdiv,w,c
   506  00FF7C  6E34               	movwf	gpio_port_write_logic@logic,c
   507  00FF7E  0E02               	movlw	2
   508  00FF80  EC9F  F07E         	call	_gpio_port_write_logic
   509                           
   510                           ;application.c: 39: _delay((unsigned long)((3333)*(4000000UL/4000000.0)));
   511  00FF84  0E05               	movlw	5
   512  00FF86  6E39               	movwf	??_main& (0+255),c
   513  00FF88  0E53               	movlw	83
   514  00FF8A                     u997:
   515  00FF8A  2EE8               	decfsz	wreg,f,c
   516  00FF8C  D7FE               	bra	u997
   517  00FF8E  2E39               	decfsz	??_main& (0+255),f,c
   518  00FF90  D7FC               	bra	u997
   519                           
   520                           ;application.c: 41: gpio_port_write_logic(PORTD_INDEX, 0x7F);
   521  00FF92  0E7F               	movlw	127
   522  00FF94  6E34               	movwf	gpio_port_write_logic@logic,c
   523  00FF96  0E03               	movlw	3
   524  00FF98  EC9F  F07E         	call	_gpio_port_write_logic
   525                           
   526                           ;application.c: 42: gpio_port_write_logic(PORTC_INDEX, ((uint8) (seconds % 10)));
   527  00FF9C  C03C  F02C         	movff	_seconds,___awmod@dividend
   528  00FFA0  6A2D               	clrf	___awmod@dividend+1,c
   529  00FFA2  0E00               	movlw	0
   530  00FFA4  6E2F               	movwf	___awmod@divisor+1,c
   531  00FFA6  0E0A               	movlw	10
   532  00FFA8  6E2E               	movwf	___awmod@divisor,c
   533  00FFAA  ECBD  F07E         	call	___awmod	;wreg free
   534  00FFAE  502C               	movf	?___awmod,w,c
   535  00FFB0  6E34               	movwf	gpio_port_write_logic@logic,c
   536  00FFB2  0E02               	movlw	2
   537  00FFB4  EC9F  F07E         	call	_gpio_port_write_logic
   538                           
   539                           ;application.c: 43: _delay((unsigned long)((3333)*(4000000UL/4000000.0)));
   540  00FFB8  0E05               	movlw	5
   541  00FFBA  6E39               	movwf	??_main& (0+255),c
   542  00FFBC  0E53               	movlw	83
   543  00FFBE                     u1007:
   544  00FFBE  2EE8               	decfsz	wreg,f,c
   545  00FFC0  D7FE               	bra	u1007
   546  00FFC2  2E39               	decfsz	??_main& (0+255),f,c
   547  00FFC4  D7FC               	bra	u1007
   548  00FFC6  4A3A               	infsnz	main@count,f,c
   549  00FFC8  2A3B               	incf	main@count+1,f,c
   550  00FFCA  BE3B               	btfsc	main@count+1,7,c
   551  00FFCC  D760               	goto	l1668
   552  00FFCE  503B               	movf	main@count+1,w,c
   553  00FFD0  E101               	bnz	l1698
   554  00FFD2  D757               	goto	L1
   555  00FFD4                     l1698:
   556                           
   557                           ;application.c: 44: }
   558                           ;application.c: 45: seconds++;
   559  00FFD4  2A3C               	incf	_seconds,f,c
   560                           
   561                           ;application.c: 46: if(seconds==60){
   562  00FFD6  0E3C               	movlw	60
   563  00FFD8  183C               	xorwf	_seconds,w,c
   564  00FFDA  A4D8               	btfss	status,2,c
   565  00FFDC  D003               	goto	l1706
   566                           
   567                           ;application.c: 47: seconds=0;
   568  00FFDE  0E00               	movlw	0
   569  00FFE0  6E3C               	movwf	_seconds,c
   570                           
   571                           ;application.c: 48: minutes++;
   572  00FFE2  2A2B               	incf	_minutes,f,c
   573  00FFE4                     l1706:
   574                           
   575                           ;application.c: 49: }
   576                           ;application.c: 50: if(minutes==60){
   577  00FFE4  0E3C               	movlw	60
   578  00FFE6  182B               	xorwf	_minutes,w,c
   579  00FFE8  A4D8               	btfss	status,2,c
   580  00FFEA  D003               	goto	l1712
   581                           
   582                           ;application.c: 51: minutes=0;
   583  00FFEC  0E00               	movlw	0
   584  00FFEE  6E2B               	movwf	_minutes,c
   585                           
   586                           ;application.c: 52: hours++;
   587  00FFF0  2A2A               	incf	_hours,f,c
   588  00FFF2                     l1712:
   589                           
   590                           ;application.c: 53: }
   591                           ;application.c: 54: if(hours==24){
   592  00FFF2  0E18               	movlw	24
   593  00FFF4  182A               	xorwf	_hours,w,c
   594  00FFF6  A4D8               	btfss	status,2,c
   595  00FFF8  D73C               	goto	l1662
   596                           
   597                           ;application.c: 55: hours=0;
   598  00FFFA  0E00               	movlw	0
   599  00FFFC  6E2A               	movwf	_hours,c
   600  00FFFE  D739               	goto	l1662
   601  010000                     __end_of_main:
   602                           	opt stack 0
   603                           tblptru	equ	0xFF8
   604                           tblptrh	equ	0xFF7
   605                           tblptrl	equ	0xFF6
   606                           tablat	equ	0xFF5
   607                           postinc0	equ	0xFEE
   608                           wreg	equ	0xFE8
   609                           postdec1	equ	0xFE5
   610                           fsr1l	equ	0xFE1
   611                           status	equ	0xFD8
   612                           
   613 ;; *************** function _gpio_port_write_logic *****************
   614 ;; Defined at:
   615 ;;		line 177 in file "MCAL_Layer/GPIO/hal_gpio.c"
   616 ;; Parameters:    Size  Location     Type
   617 ;;  port            1    wreg     enum E3096
   618 ;;  logic           1    8[COMRAM] unsigned char 
   619 ;; Auto vars:     Size  Location     Type
   620 ;;  port            1   12[COMRAM] enum E3096
   621 ;;  LocalReturn     1   11[COMRAM] unsigned char 
   622 ;; Return value:  Size  Location     Type
   623 ;;                  1    wreg      unsigned char 
   624 ;; Registers used:
   625 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   626 ;; Tracked objects:
   627 ;;		On entry : 0/0
   628 ;;		On exit  : 0/0
   629 ;;		Unchanged: 0/0
   630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   631 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   632 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   633 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   634 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   635 ;;Total ram usage:        5 bytes
   636 ;; Hardware stack levels used:    1
   637 ;; This function calls:
   638 ;;		Nothing
   639 ;; This function is called by:
   640 ;;		_main
   641 ;; This function uses a non-reentrant model
   642 ;;
   643                           
   644                           	psect	text1
   645  00FD3E                     __ptext1:
   646                           	opt stack 0
   647  00FD3E                     _gpio_port_write_logic:
   648                           	opt stack 30
   649                           
   650                           ;incstack = 0
   651                           ;gpio_port_write_logic@port stored from wreg
   652  00FD3E  6E38               	movwf	gpio_port_write_logic@port,c
   653                           
   654                           ;hal_gpio.c: 178: Std_ReturnType LocalReturn=(Std_ReturnType)0x00;
   655  00FD40  0E00               	movlw	0
   656  00FD42  6E37               	movwf	gpio_port_write_logic@LocalReturn,c
   657                           
   658                           ;hal_gpio.c: 179: if(port>5){
   659  00FD44  0E05               	movlw	5
   660  00FD46  6438               	cpfsgt	gpio_port_write_logic@port,c
   661  00FD48  D003               	goto	l1572
   662                           
   663                           ;hal_gpio.c: 180: LocalReturn=(Std_ReturnType)0x00;
   664  00FD4A  0E00               	movlw	0
   665  00FD4C  6E37               	movwf	gpio_port_write_logic@LocalReturn,c
   666                           
   667                           ;hal_gpio.c: 181: }else{
   668  00FD4E  0012               	return	
   669  00FD50                     l1572:
   670                           
   671                           ;hal_gpio.c: 182: *lat_register[port]=logic;
   672  00FD50  5038               	movf	gpio_port_write_logic@port,w,c
   673  00FD52  0D02               	mullw	2
   674  00FD54  0E0B               	movlw	low _lat_register
   675  00FD56  24F3               	addwf	prodl,w,c
   676  00FD58  6ED9               	movwf	fsr2l,c
   677  00FD5A  0E00               	movlw	high _lat_register
   678  00FD5C  20F4               	addwfc	prodh,w,c
   679  00FD5E  6EDA               	movwf	fsr2h,c
   680  00FD60  CFDE F035          	movff	postinc2,??_gpio_port_write_logic
   681  00FD64  CFDD F036          	movff	postdec2,??_gpio_port_write_logic+1
   682  00FD68  C035  FFD9         	movff	??_gpio_port_write_logic,fsr2l
   683  00FD6C  C036  FFDA         	movff	??_gpio_port_write_logic+1,fsr2h
   684  00FD70  C034  FFDF         	movff	gpio_port_write_logic@logic,indf2
   685                           
   686                           ;hal_gpio.c: 183: LocalReturn=(Std_ReturnType)0x01;
   687  00FD74  0E01               	movlw	1
   688  00FD76  6E37               	movwf	gpio_port_write_logic@LocalReturn,c
   689  00FD78  0012               	return	
   690  00FD7A                     __end_of_gpio_port_write_logic:
   691                           	opt stack 0
   692                           tblptru	equ	0xFF8
   693                           tblptrh	equ	0xFF7
   694                           tblptrl	equ	0xFF6
   695                           tablat	equ	0xFF5
   696                           prodh	equ	0xFF4
   697                           prodl	equ	0xFF3
   698                           postinc0	equ	0xFEE
   699                           wreg	equ	0xFE8
   700                           postdec1	equ	0xFE5
   701                           fsr1l	equ	0xFE1
   702                           indf2	equ	0xFDF
   703                           postinc2	equ	0xFDE
   704                           postdec2	equ	0xFDD
   705                           fsr2h	equ	0xFDA
   706                           fsr2l	equ	0xFD9
   707                           status	equ	0xFD8
   708                           
   709 ;; *************** function _functionInitialize *****************
   710 ;; Defined at:
   711 ;;		line 104 in file "application.c"
   712 ;; Parameters:    Size  Location     Type
   713 ;;		None
   714 ;; Auto vars:     Size  Location     Type
   715 ;;		None
   716 ;; Return value:  Size  Location     Type
   717 ;;                  1    wreg      void 
   718 ;; Registers used:
   719 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   720 ;; Tracked objects:
   721 ;;		On entry : 0/0
   722 ;;		On exit  : 0/0
   723 ;;		Unchanged: 0/0
   724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   729 ;;Total ram usage:        0 bytes
   730 ;; Hardware stack levels used:    1
   731 ;; Hardware stack levels required when called:    1
   732 ;; This function calls:
   733 ;;		_gpio_port_direction_intialize
   734 ;; This function is called by:
   735 ;;		_main
   736 ;; This function uses a non-reentrant model
   737 ;;
   738                           
   739                           	psect	text2
   740  00FC94                     __ptext2:
   741                           	opt stack 0
   742  00FC94                     _functionInitialize:
   743                           	opt stack 29
   744                           
   745                           ;application.c: 105: gpio_port_direction_intialize(PORTC_INDEX, 0x00);
   746                           
   747                           ;incstack = 0
   748  00FC94  0E00               	movlw	0
   749  00FC96  6E2C               	movwf	gpio_port_direction_intialize@direction,c
   750  00FC98  0E02               	movlw	2
   751  00FC9A  EC81  F07E         	call	_gpio_port_direction_intialize
   752                           
   753                           ;application.c: 106: gpio_port_direction_intialize(PORTD_INDEX, 0x00);
   754  00FC9E  0E00               	movlw	0
   755  00FCA0  6E2C               	movwf	gpio_port_direction_intialize@direction,c
   756  00FCA2  0E03               	movlw	3
   757  00FCA4  EC81  F07E         	call	_gpio_port_direction_intialize
   758  00FCA8  0012               	return		;funcret
   759  00FCAA                     __end_of_functionInitialize:
   760                           	opt stack 0
   761                           tblptru	equ	0xFF8
   762                           tblptrh	equ	0xFF7
   763                           tblptrl	equ	0xFF6
   764                           tablat	equ	0xFF5
   765                           prodh	equ	0xFF4
   766                           prodl	equ	0xFF3
   767                           postinc0	equ	0xFEE
   768                           wreg	equ	0xFE8
   769                           postdec1	equ	0xFE5
   770                           fsr1l	equ	0xFE1
   771                           indf2	equ	0xFDF
   772                           postinc2	equ	0xFDE
   773                           postdec2	equ	0xFDD
   774                           fsr2h	equ	0xFDA
   775                           fsr2l	equ	0xFD9
   776                           status	equ	0xFD8
   777                           
   778 ;; *************** function _gpio_port_direction_intialize *****************
   779 ;; Defined at:
   780 ;;		line 141 in file "MCAL_Layer/GPIO/hal_gpio.c"
   781 ;; Parameters:    Size  Location     Type
   782 ;;  port            1    wreg     enum E3096
   783 ;;  direction       1    0[COMRAM] unsigned char 
   784 ;; Auto vars:     Size  Location     Type
   785 ;;  port            1    4[COMRAM] enum E3096
   786 ;;  LocalReturn     1    3[COMRAM] unsigned char 
   787 ;; Return value:  Size  Location     Type
   788 ;;                  1    wreg      unsigned char 
   789 ;; Registers used:
   790 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   791 ;; Tracked objects:
   792 ;;		On entry : 0/0
   793 ;;		On exit  : 0/0
   794 ;;		Unchanged: 0/0
   795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   796 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   797 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   798 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   799 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   800 ;;Total ram usage:        5 bytes
   801 ;; Hardware stack levels used:    1
   802 ;; This function calls:
   803 ;;		Nothing
   804 ;; This function is called by:
   805 ;;		_functionInitialize
   806 ;; This function uses a non-reentrant model
   807 ;;
   808                           
   809                           	psect	text3
   810  00FD02                     __ptext3:
   811                           	opt stack 0
   812  00FD02                     _gpio_port_direction_intialize:
   813                           	opt stack 29
   814                           
   815                           ;incstack = 0
   816                           ;gpio_port_direction_intialize@port stored from wreg
   817  00FD02  6E30               	movwf	gpio_port_direction_intialize@port,c
   818                           
   819                           ;hal_gpio.c: 142: Std_ReturnType LocalReturn=(Std_ReturnType)0x00;
   820  00FD04  0E00               	movlw	0
   821  00FD06  6E2F               	movwf	gpio_port_direction_intialize@LocalReturn,c
   822                           
   823                           ;hal_gpio.c: 143: if(port>5){
   824  00FD08  0E05               	movlw	5
   825  00FD0A  6430               	cpfsgt	gpio_port_direction_intialize@port,c
   826  00FD0C  D003               	goto	l1560
   827                           
   828                           ;hal_gpio.c: 144: LocalReturn=(Std_ReturnType)0x00;
   829  00FD0E  0E00               	movlw	0
   830  00FD10  6E2F               	movwf	gpio_port_direction_intialize@LocalReturn,c
   831                           
   832                           ;hal_gpio.c: 145: }else{
   833  00FD12  0012               	return	
   834  00FD14                     l1560:
   835                           
   836                           ;hal_gpio.c: 146: *tris_register[port]=direction;
   837  00FD14  5030               	movf	gpio_port_direction_intialize@port,w,c
   838  00FD16  0D02               	mullw	2
   839  00FD18  0E1F               	movlw	low _tris_register
   840  00FD1A  24F3               	addwf	prodl,w,c
   841  00FD1C  6ED9               	movwf	fsr2l,c
   842  00FD1E  0E00               	movlw	high _tris_register
   843  00FD20  20F4               	addwfc	prodh,w,c
   844  00FD22  6EDA               	movwf	fsr2h,c
   845  00FD24  CFDE F02D          	movff	postinc2,??_gpio_port_direction_intialize
   846  00FD28  CFDD F02E          	movff	postdec2,??_gpio_port_direction_intialize+1
   847  00FD2C  C02D  FFD9         	movff	??_gpio_port_direction_intialize,fsr2l
   848  00FD30  C02E  FFDA         	movff	??_gpio_port_direction_intialize+1,fsr2h
   849  00FD34  C02C  FFDF         	movff	gpio_port_direction_intialize@direction,indf2
   850                           
   851                           ;hal_gpio.c: 147: LocalReturn=(Std_ReturnType)0x01;
   852  00FD38  0E01               	movlw	1
   853  00FD3A  6E2F               	movwf	gpio_port_direction_intialize@LocalReturn,c
   854  00FD3C  0012               	return	
   855  00FD3E                     __end_of_gpio_port_direction_intialize:
   856                           	opt stack 0
   857                           tblptru	equ	0xFF8
   858                           tblptrh	equ	0xFF7
   859                           tblptrl	equ	0xFF6
   860                           tablat	equ	0xFF5
   861                           prodh	equ	0xFF4
   862                           prodl	equ	0xFF3
   863                           postinc0	equ	0xFEE
   864                           wreg	equ	0xFE8
   865                           postdec1	equ	0xFE5
   866                           fsr1l	equ	0xFE1
   867                           indf2	equ	0xFDF
   868                           postinc2	equ	0xFDE
   869                           postdec2	equ	0xFDD
   870                           fsr2h	equ	0xFDA
   871                           fsr2l	equ	0xFD9
   872                           status	equ	0xFD8
   873                           
   874 ;; *************** function ___awmod *****************
   875 ;; Defined at:
   876 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\awmod.c"
   877 ;; Parameters:    Size  Location     Type
   878 ;;  dividend        2    0[COMRAM] int 
   879 ;;  divisor         2    2[COMRAM] int 
   880 ;; Auto vars:     Size  Location     Type
   881 ;;  sign            1    5[COMRAM] unsigned char 
   882 ;;  counter         1    4[COMRAM] unsigned char 
   883 ;; Return value:  Size  Location     Type
   884 ;;                  2    0[COMRAM] int 
   885 ;; Registers used:
   886 ;;		wreg, status,2, status,0
   887 ;; Tracked objects:
   888 ;;		On entry : 0/0
   889 ;;		On exit  : 0/0
   890 ;;		Unchanged: 0/0
   891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   892 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   893 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   895 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   896 ;;Total ram usage:        6 bytes
   897 ;; Hardware stack levels used:    1
   898 ;; This function calls:
   899 ;;		Nothing
   900 ;; This function is called by:
   901 ;;		_main
   902 ;; This function uses a non-reentrant model
   903 ;;
   904                           
   905                           	psect	text4
   906  00FD7A                     __ptext4:
   907                           	opt stack 0
   908  00FD7A                     ___awmod:
   909                           	opt stack 30
   910                           
   911                           ;incstack = 0
   912  00FD7A  0E00               	movlw	0
   913  00FD7C  6E31               	movwf	___awmod@sign,c
   914  00FD7E  AE2D               	btfss	___awmod@dividend+1,7,c
   915  00FD80  D006               	goto	l1632
   916  00FD82  6C2C               	negf	___awmod@dividend,c
   917  00FD84  1E2D               	comf	___awmod@dividend+1,f,c
   918  00FD86  B0D8               	btfsc	status,0,c
   919  00FD88  2A2D               	incf	___awmod@dividend+1,f,c
   920  00FD8A  0E01               	movlw	1
   921  00FD8C  6E31               	movwf	___awmod@sign,c
   922  00FD8E                     l1632:
   923  00FD8E  AE2F               	btfss	___awmod@divisor+1,7,c
   924  00FD90  D004               	goto	l1636
   925  00FD92  6C2E               	negf	___awmod@divisor,c
   926  00FD94  1E2F               	comf	___awmod@divisor+1,f,c
   927  00FD96  B0D8               	btfsc	status,0,c
   928  00FD98  2A2F               	incf	___awmod@divisor+1,f,c
   929  00FD9A                     l1636:
   930  00FD9A  502E               	movf	___awmod@divisor,w,c
   931  00FD9C  102F               	iorwf	___awmod@divisor+1,w,c
   932  00FD9E  B4D8               	btfsc	status,2,c
   933  00FDA0  D018               	goto	l1652
   934  00FDA2  0E01               	movlw	1
   935  00FDA4  6E30               	movwf	___awmod@counter,c
   936  00FDA6  D004               	goto	l1642
   937  00FDA8                     l1640:
   938  00FDA8  90D8               	bcf	status,0,c
   939  00FDAA  362E               	rlcf	___awmod@divisor,f,c
   940  00FDAC  362F               	rlcf	___awmod@divisor+1,f,c
   941  00FDAE  2A30               	incf	___awmod@counter,f,c
   942  00FDB0                     l1642:
   943  00FDB0  AE2F               	btfss	___awmod@divisor+1,7,c
   944  00FDB2  D7FA               	goto	l1640
   945  00FDB4                     l1644:
   946  00FDB4  502E               	movf	___awmod@divisor,w,c
   947  00FDB6  5C2C               	subwf	___awmod@dividend,w,c
   948  00FDB8  502F               	movf	___awmod@divisor+1,w,c
   949  00FDBA  582D               	subwfb	___awmod@dividend+1,w,c
   950  00FDBC  A0D8               	btfss	status,0,c
   951  00FDBE  D004               	goto	l1648
   952  00FDC0  502E               	movf	___awmod@divisor,w,c
   953  00FDC2  5E2C               	subwf	___awmod@dividend,f,c
   954  00FDC4  502F               	movf	___awmod@divisor+1,w,c
   955  00FDC6  5A2D               	subwfb	___awmod@dividend+1,f,c
   956  00FDC8                     l1648:
   957  00FDC8  90D8               	bcf	status,0,c
   958  00FDCA  322F               	rrcf	___awmod@divisor+1,f,c
   959  00FDCC  322E               	rrcf	___awmod@divisor,f,c
   960  00FDCE  2E30               	decfsz	___awmod@counter,f,c
   961  00FDD0  D7F1               	goto	l1644
   962  00FDD2                     l1652:
   963  00FDD2  5031               	movf	___awmod@sign,w,c
   964  00FDD4  B4D8               	btfsc	status,2,c
   965  00FDD6  D004               	goto	l1656
   966  00FDD8  6C2C               	negf	___awmod@dividend,c
   967  00FDDA  1E2D               	comf	___awmod@dividend+1,f,c
   968  00FDDC  B0D8               	btfsc	status,0,c
   969  00FDDE  2A2D               	incf	___awmod@dividend+1,f,c
   970  00FDE0                     l1656:
   971  00FDE0  C02C  F02C         	movff	___awmod@dividend,?___awmod
   972  00FDE4  C02D  F02D         	movff	___awmod@dividend+1,?___awmod+1
   973  00FDE8  0012               	return	
   974  00FDEA                     __end_of___awmod:
   975                           	opt stack 0
   976                           tblptru	equ	0xFF8
   977                           tblptrh	equ	0xFF7
   978                           tblptrl	equ	0xFF6
   979                           tablat	equ	0xFF5
   980                           prodh	equ	0xFF4
   981                           prodl	equ	0xFF3
   982                           postinc0	equ	0xFEE
   983                           wreg	equ	0xFE8
   984                           postdec1	equ	0xFE5
   985                           fsr1l	equ	0xFE1
   986                           indf2	equ	0xFDF
   987                           postinc2	equ	0xFDE
   988                           postdec2	equ	0xFDD
   989                           fsr2h	equ	0xFDA
   990                           fsr2l	equ	0xFD9
   991                           status	equ	0xFD8
   992                           
   993 ;; *************** function ___awdiv *****************
   994 ;; Defined at:
   995 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\awdiv.c"
   996 ;; Parameters:    Size  Location     Type
   997 ;;  dividend        2    0[COMRAM] int 
   998 ;;  divisor         2    2[COMRAM] int 
   999 ;; Auto vars:     Size  Location     Type
  1000 ;;  quotient        2    6[COMRAM] int 
  1001 ;;  sign            1    5[COMRAM] unsigned char 
  1002 ;;  counter         1    4[COMRAM] unsigned char 
  1003 ;; Return value:  Size  Location     Type
  1004 ;;                  2    0[COMRAM] int 
  1005 ;; Registers used:
  1006 ;;		wreg, status,2, status,0
  1007 ;; Tracked objects:
  1008 ;;		On entry : 0/0
  1009 ;;		On exit  : 0/0
  1010 ;;		Unchanged: 0/0
  1011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1012 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1013 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1015 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1016 ;;Total ram usage:        8 bytes
  1017 ;; Hardware stack levels used:    1
  1018 ;; This function calls:
  1019 ;;		Nothing
  1020 ;; This function is called by:
  1021 ;;		_main
  1022 ;; This function uses a non-reentrant model
  1023 ;;
  1024                           
  1025                           	psect	text5
  1026  00FDEA                     __ptext5:
  1027                           	opt stack 0
  1028  00FDEA                     ___awdiv:
  1029                           	opt stack 30
  1030                           
  1031                           ;incstack = 0
  1032  00FDEA  0E00               	movlw	0
  1033  00FDEC  6E31               	movwf	___awdiv@sign,c
  1034  00FDEE  AE2F               	btfss	___awdiv@divisor+1,7,c
  1035  00FDF0  D006               	goto	l1588
  1036  00FDF2  6C2E               	negf	___awdiv@divisor,c
  1037  00FDF4  1E2F               	comf	___awdiv@divisor+1,f,c
  1038  00FDF6  B0D8               	btfsc	status,0,c
  1039  00FDF8  2A2F               	incf	___awdiv@divisor+1,f,c
  1040  00FDFA  0E01               	movlw	1
  1041  00FDFC  6E31               	movwf	___awdiv@sign,c
  1042  00FDFE                     l1588:
  1043  00FDFE  AE2D               	btfss	___awdiv@dividend+1,7,c
  1044  00FE00  D006               	goto	l1594
  1045  00FE02  6C2C               	negf	___awdiv@dividend,c
  1046  00FE04  1E2D               	comf	___awdiv@dividend+1,f,c
  1047  00FE06  B0D8               	btfsc	status,0,c
  1048  00FE08  2A2D               	incf	___awdiv@dividend+1,f,c
  1049  00FE0A  0E01               	movlw	1
  1050  00FE0C  1A31               	xorwf	___awdiv@sign,f,c
  1051  00FE0E                     l1594:
  1052  00FE0E  0E00               	movlw	0
  1053  00FE10  6E33               	movwf	___awdiv@quotient+1,c
  1054  00FE12  0E00               	movlw	0
  1055  00FE14  6E32               	movwf	___awdiv@quotient,c
  1056  00FE16  502E               	movf	___awdiv@divisor,w,c
  1057  00FE18  102F               	iorwf	___awdiv@divisor+1,w,c
  1058  00FE1A  B4D8               	btfsc	status,2,c
  1059  00FE1C  D01C               	goto	l1616
  1060  00FE1E  0E01               	movlw	1
  1061  00FE20  6E30               	movwf	___awdiv@counter,c
  1062  00FE22  D004               	goto	l1602
  1063  00FE24                     l1600:
  1064  00FE24  90D8               	bcf	status,0,c
  1065  00FE26  362E               	rlcf	___awdiv@divisor,f,c
  1066  00FE28  362F               	rlcf	___awdiv@divisor+1,f,c
  1067  00FE2A  2A30               	incf	___awdiv@counter,f,c
  1068  00FE2C                     l1602:
  1069  00FE2C  AE2F               	btfss	___awdiv@divisor+1,7,c
  1070  00FE2E  D7FA               	goto	l1600
  1071  00FE30                     l1604:
  1072  00FE30  90D8               	bcf	status,0,c
  1073  00FE32  3632               	rlcf	___awdiv@quotient,f,c
  1074  00FE34  3633               	rlcf	___awdiv@quotient+1,f,c
  1075  00FE36  502E               	movf	___awdiv@divisor,w,c
  1076  00FE38  5C2C               	subwf	___awdiv@dividend,w,c
  1077  00FE3A  502F               	movf	___awdiv@divisor+1,w,c
  1078  00FE3C  582D               	subwfb	___awdiv@dividend+1,w,c
  1079  00FE3E  A0D8               	btfss	status,0,c
  1080  00FE40  D005               	goto	l1612
  1081  00FE42  502E               	movf	___awdiv@divisor,w,c
  1082  00FE44  5E2C               	subwf	___awdiv@dividend,f,c
  1083  00FE46  502F               	movf	___awdiv@divisor+1,w,c
  1084  00FE48  5A2D               	subwfb	___awdiv@dividend+1,f,c
  1085  00FE4A  8032               	bsf	___awdiv@quotient,0,c
  1086  00FE4C                     l1612:
  1087  00FE4C  90D8               	bcf	status,0,c
  1088  00FE4E  322F               	rrcf	___awdiv@divisor+1,f,c
  1089  00FE50  322E               	rrcf	___awdiv@divisor,f,c
  1090  00FE52  2E30               	decfsz	___awdiv@counter,f,c
  1091  00FE54  D7ED               	goto	l1604
  1092  00FE56                     l1616:
  1093  00FE56  5031               	movf	___awdiv@sign,w,c
  1094  00FE58  B4D8               	btfsc	status,2,c
  1095  00FE5A  D004               	goto	l1620
  1096  00FE5C  6C32               	negf	___awdiv@quotient,c
  1097  00FE5E  1E33               	comf	___awdiv@quotient+1,f,c
  1098  00FE60  B0D8               	btfsc	status,0,c
  1099  00FE62  2A33               	incf	___awdiv@quotient+1,f,c
  1100  00FE64                     l1620:
  1101  00FE64  C032  F02C         	movff	___awdiv@quotient,?___awdiv
  1102  00FE68  C033  F02D         	movff	___awdiv@quotient+1,?___awdiv+1
  1103  00FE6C  0012               	return	
  1104  00FE6E                     __end_of___awdiv:
  1105                           	opt stack 0
  1106  0000                     tblptru	equ	0xFF8
  1107                           tblptrh	equ	0xFF7
  1108                           tblptrl	equ	0xFF6
  1109                           tablat	equ	0xFF5
  1110                           prodh	equ	0xFF4
  1111                           prodl	equ	0xFF3
  1112                           postinc0	equ	0xFEE
  1113                           wreg	equ	0xFE8
  1114                           postdec1	equ	0xFE5
  1115                           fsr1l	equ	0xFE1
  1116                           indf2	equ	0xFDF
  1117                           postinc2	equ	0xFDE
  1118                           postdec2	equ	0xFDD
  1119                           fsr2h	equ	0xFDA
  1120                           fsr2l	equ	0xFD9
  1121                           status	equ	0xFD8
  1122                           tblptru	equ	0xFF8
  1123                           tblptrh	equ	0xFF7
  1124                           tblptrl	equ	0xFF6
  1125                           tablat	equ	0xFF5
  1126                           prodh	equ	0xFF4
  1127                           prodl	equ	0xFF3
  1128                           postinc0	equ	0xFEE
  1129                           wreg	equ	0xFE8
  1130                           postdec1	equ	0xFE5
  1131                           fsr1l	equ	0xFE1
  1132                           indf2	equ	0xFDF
  1133                           postinc2	equ	0xFDE
  1134                           postdec2	equ	0xFDD
  1135                           fsr2h	equ	0xFDA
  1136                           fsr2l	equ	0xFD9
  1137                           status	equ	0xFD8
  1138                           
  1139                           	psect	rparam
  1140  0000                     tblptru	equ	0xFF8
  1141                           tblptrh	equ	0xFF7
  1142                           tblptrl	equ	0xFF6
  1143                           tablat	equ	0xFF5
  1144                           prodh	equ	0xFF4
  1145                           prodl	equ	0xFF3
  1146                           postinc0	equ	0xFEE
  1147                           wreg	equ	0xFE8
  1148                           postdec1	equ	0xFE5
  1149                           fsr1l	equ	0xFE1
  1150                           indf2	equ	0xFDF
  1151                           postinc2	equ	0xFDE
  1152                           postdec2	equ	0xFDD
  1153                           fsr2h	equ	0xFDA
  1154                           fsr2l	equ	0xFD9
  1155                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        43
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     16      60
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    lat_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(SFR[1]), LATD(SFR[1]), LATC(SFR[1]), LATB(SFR[1]), 
		 -> LATA(SFR[1]), 

    port_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(SFR[1]), PORTD(SFR[1]), PORTC(SFR[1]), PORTB(SFR[1]), 
		 -> PORTA(SFR[1]), 

    tris_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(SFR[1]), TRISD(SFR[1]), TRISC(SFR[1]), TRISB(SFR[1]), 
		 -> TRISA(SFR[1]), 


Critical Paths under _main in COMRAM

    _main->_gpio_port_write_logic
    _gpio_port_write_logic->___awdiv
    _functionInitialize->_gpio_port_direction_intialize

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    2456
                                             13 COMRAM     3     3      0
                            ___awdiv
                            ___awmod
                 _functionInitialize
              _gpio_port_write_logic
 ---------------------------------------------------------------------------------
 (1) _gpio_port_write_logic                                5     4      1     843
                                              8 COMRAM     5     4      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _functionInitialize                                   0     0      0     203
      _gpio_port_direction_intialize
 ---------------------------------------------------------------------------------
 (2) _gpio_port_direction_intialize                        5     4      1     203
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     680
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     684
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod
   _functionInitialize
     _gpio_port_direction_intialize
   _gpio_port_write_logic
     ___awdiv (ARG)
     ___awmod (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     10      3C       1       47.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3C      34        0.0%
DATA                 0      0      3C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Wed Sep 20 19:16:38 2023

                            ___awdiv@sign 0031                               __CFG_BORV$1 000000  
                            __CFG_CP0$OFF 000000                              __CFG_CP1$OFF 000000  
                            __CFG_CP2$OFF 000000                              __CFG_CP3$OFF 000000  
                             __CFG_OSC$HS 000000                              __CFG_CPB$OFF 000000  
                            __CFG_CPD$OFF 000000                                       u900 FE8C  
                                     u957 FEBA                                       u967 FEEE  
                                     u977 FF22                                       u987 FF56  
                                     u997 FF8A                              ___awmod@sign 0031  
                                     prod 000FF3                                       wreg 000FE8  
                            __CFG_LVP$OFF 000000                              __CFG_WDT$OFF 000000  
                                    l1600 FE24                                      l1602 FE2C  
                                    l1620 FE64                                      l1612 FE4C  
                                    l1604 FE30                                      l1616 FE56  
                                    l1640 FDA8                                      l1632 FD8E  
                                    l1560 FD14                                      l1712 FFF2  
                                    l1642 FDB0                                      l1706 FFE4  
                                    l1644 FDB4                                      l1652 FDD2  
                                    l1636 FD9A                                      l1572 FD50  
                                    l1662 FE72                                      l1656 FDE0  
                                    l1648 FDC8                                      l1594 FE0E  
                                    l1588 FDFE                                      l1668 FE8E  
                                    l1698 FFD4                                      u1007 FFBE  
                                    _LATA 000F89                                      _LATB 000F8A  
                                    _LATC 000F8B                                      _LATD 000F8C  
                                    _LATE 000F8D                                      _main FE6E  
                                    fsr2h 000FDA                                      indf2 000FDF  
                                    fsr1l 000FE1                                      fsr2l 000FD9  
                                    prodl 000FF3                                      start 0000  
                           __CFG_IESO$OFF 000000                             __CFG_MCLRE$ON 000000  
                            ___param_bank 000000                     _gpio_port_write_logic FD3E  
                                   ?_main 002C                           __end_of___awdiv FE6E  
                         __end_of___awmod FDEA                           ___awdiv@divisor 002E  
                         ___awdiv@counter 0030                                     _PORTA 000F80  
                                   _PORTB 000F81                                     _PORTC 000F82  
                                   _PORTD 000F83                                     _PORTE 000F84  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94                                     _TRISD 000F95  
                                   _TRISE 000F96                             __CFG_PWRT$OFF 000000  
                           __CFG_WRT0$OFF 000000                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                             __CFG_WRT3$OFF 000000  
                          __CFG_EBTR0$OFF 000000                            __CFG_FCMEN$OFF 000000  
                          __CFG_EBTR1$OFF 000000                            __CFG_EBTR2$OFF 000000  
                          __CFG_EBTR3$OFF 000000                             __CFG_WRTB$OFF 000000  
                           __CFG_WRTC$OFF 000000                             __CFG_WRTD$OFF 000000  
                          __CFG_EBTRB$OFF 000000                                     _hours 002A  
                          __CFG_BOREN$OFF 000000                                     tablat 000FF5  
                                   status 000FD8    gpio_port_direction_intialize@direction 002C  
                         __initialization FCD6                              __end_of_main 0000  
                                  ??_main 0039                             __activetblptr 000002  
          ?_gpio_port_direction_intialize 002C                          ___awdiv@dividend 002C  
                           _tris_register 001F                 gpio_port_write_logic@port 0038  
             __size_of_functionInitialize 0016                            __CFG_XINST$OFF 000000  
                  ?_gpio_port_write_logic 0034                                 ??___awdiv 0030  
                          __CFG_STVREN$ON 000000                                 ??___awmod 0030  
                        ___awdiv@quotient 0032                           ___awmod@divisor 002E  
                         ___awmod@counter 0030                              __pdataCOMRAM 0001  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                                __accesstop 0080  
                 __end_of__initialization FCF8                           __CFG_PBADEN$OFF 000000  
                           ___rparam_used 000001                            __pcstackCOMRAM 002C  
                          _delay_required 0029                                   __Hparam 0000  
                                 __Lparam 0000                                   ___awdiv FDEA  
                                 ___awmod FD7A                                   __pcinit FCD6  
                                 __ramtop 1000                                   __ptext0 FE6E  
                                 __ptext1 FD3E                                   __ptext2 FC94  
                                 __ptext3 FD02                                   __ptext4 FD7A  
                                 __ptext5 FDEA                          ___awmod@dividend 002C  
                                 _minutes 002B                                   _seconds 003C  
                    end_of_initialization FCF8          gpio_port_write_logic@LocalReturn 0037  
                           __Lmediumconst 0000           ??_gpio_port_direction_intialize 002D  
                 ??_gpio_port_write_logic 0035                                   postdec1 000FE5  
                                 postdec2 000FDD                                   postinc0 000FEE  
                                 postinc2 000FDE                __end_of_functionInitialize FCAA  
                           __pidataCOMRAM FCAB                       start_initialization FCD6  
                            _lat_register 000B     __end_of_gpio_port_direction_intialize FD3E  
  __size_of_gpio_port_direction_intialize 003C             _gpio_port_direction_intialize FD02  
                        __CFG_LPT1OSC$OFF 000000         gpio_port_direction_intialize@port 0030  
                           _segment_array 0001                               __pbssCOMRAM 003C  
                       __CFG_CCP2MX$PORTC 000000                                  ?___awdiv 002C  
                                ?___awmod 002C            __size_of_gpio_port_write_logic 003C  
           __end_of_gpio_port_write_logic FD7A                          __CFG_WDTPS$32768 000000  
                               main@count 003A                                 copy_data0 FCEA  
                                __Hrparam 0000                                  __Lrparam 0000  
                        __size_of___awdiv 0084                          __size_of___awmod 0070  
                      _functionInitialize FC94                       ?_functionInitialize 002C  
gpio_port_direction_intialize@LocalReturn 002F                             __size_of_main 0192  
                    ??_functionInitialize 0031                gpio_port_write_logic@logic 0034  
                           _port_register 0015  
