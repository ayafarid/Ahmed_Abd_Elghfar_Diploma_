

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Wed Sep 20 21:33:45 2023

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22  0000                     
    23                           ; Version 1.41
    24                           ; Generated 25/01/2017 GMT
    25                           ; 
    26                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F4620 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     
    58                           	psect	idataCOMRAM
    59  00FA03                     __pidataCOMRAM:
    60                           	opt stack 0
    61                           
    62                           ;initializer for _lat_register
    63  00FA03  89                 	db	137
    64  00FA04  0F                 	db	15
    65  00FA05  8A                 	db	138
    66  00FA06  0F                 	db	15
    67  00FA07  8B                 	db	139
    68  00FA08  0F                 	db	15
    69  00FA09  8C                 	db	140
    70  00FA0A  0F                 	db	15
    71  00FA0B  8D                 	db	141
    72  00FA0C  0F                 	db	15
    73                           
    74                           ;initializer for _port_register
    75  00FA0D  80                 	db	128
    76  00FA0E  0F                 	db	15
    77  00FA0F  81                 	db	129
    78  00FA10  0F                 	db	15
    79  00FA11  82                 	db	130
    80  00FA12  0F                 	db	15
    81  00FA13  83                 	db	131
    82  00FA14  0F                 	db	15
    83  00FA15  84                 	db	132
    84  00FA16  0F                 	db	15
    85                           
    86                           ;initializer for _tris_register
    87  00FA17  92                 	db	146
    88  00FA18  0F                 	db	15
    89  00FA19  93                 	db	147
    90  00FA1A  0F                 	db	15
    91  00FA1B  94                 	db	148
    92  00FA1C  0F                 	db	15
    93  00FA1D  95                 	db	149
    94  00FA1E  0F                 	db	15
    95  00FA1F  96                 	db	150
    96  00FA20  0F                 	db	15
    97                           
    98                           ;initializer for _hours
    99  00FA21  13                 	db	19
   100                           
   101                           ;initializer for _minutes
   102  00FA22  10                 	db	16
   103                           
   104                           ;initializer for _seven_seg_1
   105  00FA23  02                 	db	2
   106  00FA24  00                 	db	0
   107  00FA25  12                 	db	18
   108  00FA26  00                 	db	0
   109  00FA27  22                 	db	34
   110  00FA28  00                 	db	0
   111  00FA29  32                 	db	50
   112  00FA2A  00                 	db	0
   113  00FA2B  03                 	db	3
   114  00FA2C  00                 	db	0
   115  00FA2D  13                 	db	19
   116  00FA2E  00                 	db	0
   117  00FA2F  00                 	db	0
   118  00FA30  33                 	db	51
   119  00FA31  00                 	db	0
   120  0000                     _LATE	set	3981
   121  0000                     _LATD	set	3980
   122  0000                     _LATC	set	3979
   123  0000                     _LATB	set	3978
   124  0000                     _LATA	set	3977
   125  0000                     _PORTE	set	3972
   126  0000                     _PORTD	set	3971
   127  0000                     _PORTC	set	3970
   128  0000                     _PORTB	set	3969
   129  0000                     _PORTA	set	3968
   130  0000                     _TRISE	set	3990
   131  0000                     _TRISD	set	3989
   132  0000                     _TRISC	set	3988
   133  0000                     _TRISB	set	3987
   134  0000                     _TRISA	set	3986
   135                           
   136                           ; #config settings
   137  0000                     
   138                           	psect	cinit
   139  00F9D6                     __pcinit:
   140                           	opt stack 0
   141  00F9D6                     start_initialization:
   142                           	opt stack 0
   143  00F9D6                     __initialization:
   144                           	opt stack 0
   145                           
   146                           ; Initialize objects allocated to COMRAM (47 bytes)
   147                           ; load TBLPTR registers with __pidataCOMRAM
   148  00F9D6  0E03               	movlw	low __pidataCOMRAM
   149  00F9D8  6EF6               	movwf	tblptrl,c
   150  00F9DA  0EFA               	movlw	high __pidataCOMRAM
   151  00F9DC  6EF7               	movwf	tblptrh,c
   152  00F9DE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   153  00F9E0  6EF8               	movwf	tblptru,c
   154  00F9E2  EE00  F001         	lfsr	0,__pdataCOMRAM
   155  00F9E6  EE10 F02F          	lfsr	1,47
   156  00F9EA                     copy_data0:
   157  00F9EA  0009               	tblrd		*+
   158  00F9EC  CFF5 FFEE          	movff	tablat,postinc0
   159  00F9F0  50E5               	movf	postdec1,w,c
   160  00F9F2  50E1               	movf	fsr1l,w,c
   161  00F9F4  E1FA               	bnz	copy_data0
   162                           
   163                           ; Clear objects allocated to COMRAM (1 bytes)
   164  00F9F6  6A47               	clrf	__pbssCOMRAM& (0+255),c
   165  00F9F8                     end_of_initialization:
   166                           	opt stack 0
   167  00F9F8                     __end_of__initialization:
   168                           	opt stack 0
   169  00F9F8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   170  00F9FA  6EF8               	movwf	tblptru,c
   171  00F9FC  0100               	movlb	0
   172  00F9FE  EF0A  F07F         	goto	_main	;jump to C main() function
   173                           tblptru	equ	0xFF8
   174                           tblptrh	equ	0xFF7
   175                           tblptrl	equ	0xFF6
   176                           tablat	equ	0xFF5
   177                           postinc0	equ	0xFEE
   178                           postdec1	equ	0xFE5
   179                           fsr1l	equ	0xFE1
   180                           
   181                           	psect	bssCOMRAM
   182  000047                     __pbssCOMRAM:
   183                           	opt stack 0
   184  000047                     _seconds:
   185                           	opt stack 0
   186  000047                     	ds	1
   187                           tblptru	equ	0xFF8
   188                           tblptrh	equ	0xFF7
   189                           tblptrl	equ	0xFF6
   190                           tablat	equ	0xFF5
   191                           postinc0	equ	0xFEE
   192                           postdec1	equ	0xFE5
   193                           fsr1l	equ	0xFE1
   194                           
   195                           	psect	dataCOMRAM
   196  000001                     __pdataCOMRAM:
   197                           	opt stack 0
   198  000001                     _lat_register:
   199                           	opt stack 0
   200  000001                     	ds	10
   201  00000B                     _port_register:
   202                           	opt stack 0
   203  00000B                     	ds	10
   204  000015                     _tris_register:
   205                           	opt stack 0
   206  000015                     	ds	10
   207  00001F                     _hours:
   208                           	opt stack 0
   209  00001F                     	ds	1
   210  000020                     _minutes:
   211                           	opt stack 0
   212  000020                     	ds	1
   213  000021                     _seven_seg_1:
   214                           	opt stack 0
   215  000021                     	ds	15
   216                           tblptru	equ	0xFF8
   217                           tblptrh	equ	0xFF7
   218                           tblptrl	equ	0xFF6
   219                           tablat	equ	0xFF5
   220                           postinc0	equ	0xFEE
   221                           postdec1	equ	0xFE5
   222                           fsr1l	equ	0xFE1
   223                           
   224                           	psect	cstackCOMRAM
   225  000030                     __pcstackCOMRAM:
   226                           	opt stack 0
   227  000030                     ?___awdiv:
   228                           	opt stack 0
   229  000030                     ?___awmod:
   230                           	opt stack 0
   231  000030                     gpio_pin_direction_intialize@_pin_config:
   232                           	opt stack 0
   233  000030                     gpio_pin_write_logic@_pin_config:
   234                           	opt stack 0
   235  000030                     ___awdiv@dividend:
   236                           	opt stack 0
   237  000030                     ___awmod@dividend:
   238                           	opt stack 0
   239                           
   240                           ; 2 bytes @ 0x0
   241  000030                     	ds	2
   242  000032                     ??_gpio_pin_direction_intialize:
   243  000032                     gpio_pin_write_logic@logic:
   244                           	opt stack 0
   245  000032                     ___awdiv@divisor:
   246                           	opt stack 0
   247  000032                     ___awmod@divisor:
   248                           	opt stack 0
   249                           
   250                           ; 2 bytes @ 0x2
   251  000032                     	ds	1
   252  000033                     ??_gpio_pin_write_logic:
   253                           
   254                           ; 1 bytes @ 0x3
   255  000033                     	ds	1
   256  000034                     ___awdiv@counter:
   257                           	opt stack 0
   258  000034                     ___awmod@counter:
   259                           	opt stack 0
   260                           
   261                           ; 1 bytes @ 0x4
   262  000034                     	ds	1
   263  000035                     ___awdiv@sign:
   264                           	opt stack 0
   265  000035                     ___awmod@sign:
   266                           	opt stack 0
   267                           
   268                           ; 1 bytes @ 0x5
   269  000035                     	ds	1
   270  000036                     ___awdiv@quotient:
   271                           	opt stack 0
   272                           
   273                           ; 2 bytes @ 0x6
   274  000036                     	ds	2
   275  000038                     gpio_pin_direction_intialize@LocalReturn:
   276                           	opt stack 0
   277                           
   278                           ; 1 bytes @ 0x8
   279  000038                     	ds	1
   280  000039                     gpio_pin_write_logic@LocalReturn:
   281                           	opt stack 0
   282  000039                     seven_segment_initialize@seven_segment_obj:
   283                           	opt stack 0
   284                           
   285                           ; 2 bytes @ 0x9
   286  000039                     	ds	1
   287  00003A                     seven_segment_write_number@seven_segment_obj:
   288                           	opt stack 0
   289  00003A                     seven_segment_enable@seven_segment_obj:
   290                           	opt stack 0
   291  00003A                     seven_segment_disable@seven_segment_obj:
   292                           	opt stack 0
   293                           
   294                           ; 2 bytes @ 0xA
   295  00003A                     	ds	1
   296  00003B                     ??_seven_segment_initialize:
   297                           
   298                           ; 1 bytes @ 0xB
   299  00003B                     	ds	1
   300  00003C                     seven_segment_write_number@number:
   301                           	opt stack 0
   302  00003C                     seven_segment_enable@segment_Index:
   303                           	opt stack 0
   304  00003C                     seven_segment_disable@segment_Index:
   305                           	opt stack 0
   306                           
   307                           ; 1 bytes @ 0xC
   308  00003C                     	ds	1
   309  00003D                     seven_segment_initialize@Local_Status:
   310                           	opt stack 0
   311  00003D                     seven_segment_write_number@Local_Status:
   312                           	opt stack 0
   313  00003D                     seven_segment_enable@Local_Status:
   314                           	opt stack 0
   315  00003D                     seven_segment_disable@Local_Status:
   316                           	opt stack 0
   317                           
   318                           ; 1 bytes @ 0xD
   319  00003D                     	ds	1
   320  00003E                     seven_segment_initialize@i:
   321                           	opt stack 0
   322                           
   323                           ; 2 bytes @ 0xE
   324  00003E                     	ds	2
   325  000040                     seven_segment_initialize@i_559:
   326                           	opt stack 0
   327                           
   328                           ; 2 bytes @ 0x10
   329  000040                     	ds	2
   330  000042                     ??_main:
   331                           
   332                           ; 1 bytes @ 0x12
   333  000042                     	ds	1
   334  000043                     main@j:
   335                           	opt stack 0
   336                           
   337                           ; 2 bytes @ 0x13
   338  000043                     	ds	2
   339  000045                     main@i:
   340                           	opt stack 0
   341                           
   342                           ; 2 bytes @ 0x15
   343  000045                     	ds	2
   344                           tblptru	equ	0xFF8
   345                           tblptrh	equ	0xFF7
   346                           tblptrl	equ	0xFF6
   347                           tablat	equ	0xFF5
   348                           postinc0	equ	0xFEE
   349                           postdec1	equ	0xFE5
   350                           fsr1l	equ	0xFE1
   351                           
   352 ;;
   353 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   354 ;;
   355 ;; *************** function _main *****************
   356 ;; Defined at:
   357 ;;		line 51 in file "application.c"
   358 ;; Parameters:    Size  Location     Type
   359 ;;		None
   360 ;; Auto vars:     Size  Location     Type
   361 ;;  j               2   19[COMRAM] int 
   362 ;;  i               2   21[COMRAM] int 
   363 ;; Return value:  Size  Location     Type
   364 ;;                  2  416[None  ] int 
   365 ;; Registers used:
   366 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   367 ;; Tracked objects:
   368 ;;		On entry : 0/0
   369 ;;		On exit  : 0/0
   370 ;;		Unchanged: 0/0
   371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   373 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   374 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   375 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   376 ;;Total ram usage:        5 bytes
   377 ;; Hardware stack levels required when called:    3
   378 ;; This function calls:
   379 ;;		___awdiv
   380 ;;		___awmod
   381 ;;		_functionInitialize
   382 ;;		_seven_segment_disable
   383 ;;		_seven_segment_enable
   384 ;;		_seven_segment_write_number
   385 ;; This function is called by:
   386 ;;		Startup code after reset
   387 ;; This function uses a non-reentrant model
   388 ;;
   389                           
   390                           	psect	text0
   391  00FE14                     __ptext0:
   392                           	opt stack 0
   393  00FE14                     _main:
   394                           	opt stack 28
   395                           
   396                           ;application.c: 52: functionInitialize();
   397                           
   398                           ;incstack = 0
   399  00FE14  ECE4  F07C         	call	_functionInitialize	;wreg free
   400  00FE18                     l2076:
   401                           
   402                           ;application.c: 54: for (int i = 0; i < 100; i++) {
   403  00FE18  0E00               	movlw	0
   404  00FE1A  6E46               	movwf	main@i+1,c
   405  00FE1C  0E00               	movlw	0
   406  00FE1E  6E45               	movwf	main@i,c
   407  00FE20                     l2078:
   408  00FE20  BE46               	btfsc	main@i+1,7,c
   409  00FE22  D006               	goto	l2082
   410  00FE24  5046               	movf	main@i+1,w,c
   411  00FE26  E1F8               	bnz	l2076
   412  00FE28  0E64               	movlw	100
   413  00FE2A  5C45               	subwf	main@i,w,c
   414  00FE2C  B0D8               	btfsc	status,0,c
   415  00FE2E  D7F4               	goto	l2076
   416  00FE30                     l2082:
   417                           
   418                           ;application.c: 55: for (int j = 0; j < 33; j++) {
   419  00FE30  0E00               	movlw	0
   420  00FE32  6E44               	movwf	main@j+1,c
   421  00FE34  0E00               	movlw	0
   422  00FE36  6E43               	movwf	main@j,c
   423  00FE38                     l2084:
   424  00FE38  BE44               	btfsc	main@j+1,7,c
   425  00FE3A  D006               	goto	l2088
   426  00FE3C  5044               	movf	main@j+1,w,c
   427  00FE3E  E159               	bnz	l2100
   428  00FE40  0E21               	movlw	33
   429  00FE42  5C43               	subwf	main@j,w,c
   430  00FE44  B0D8               	btfsc	status,0,c
   431  00FE46  D055               	goto	l2100
   432  00FE48                     l2088:
   433                           
   434                           ;application.c: 56: seven_segment_enable(&seven_seg_1, 0);
   435  00FE48  0E21               	movlw	low _seven_seg_1
   436  00FE4A  6E3A               	movwf	seven_segment_enable@seven_segment_obj,c
   437  00FE4C  0E00               	movlw	high _seven_seg_1
   438  00FE4E  6E3B               	movwf	seven_segment_enable@seven_segment_obj+1,c
   439  00FE50  0E00               	movlw	0
   440  00FE52  6E3C               	movwf	seven_segment_enable@segment_Index,c
   441  00FE54  EC8B  F07D         	call	_seven_segment_enable	;wreg free
   442                           
   443                           ;application.c: 57: seven_segment_disable(&seven_seg_1, 1);
   444  00FE58  0E21               	movlw	low _seven_seg_1
   445  00FE5A  6E3A               	movwf	seven_segment_disable@seven_segment_obj,c
   446  00FE5C  0E00               	movlw	high _seven_seg_1
   447  00FE5E  6E3B               	movwf	seven_segment_disable@seven_segment_obj+1,c
   448  00FE60  0E01               	movlw	1
   449  00FE62  6E3C               	movwf	seven_segment_disable@segment_Index,c
   450  00FE64  EC51  F07D         	call	_seven_segment_disable	;wreg free
   451                           
   452                           ;application.c: 58: seven_segment_write_number(&seven_seg_1, i / 10);
   453  00FE68  0E21               	movlw	low _seven_seg_1
   454  00FE6A  6E3A               	movwf	seven_segment_write_number@seven_segment_obj,c
   455  00FE6C  0E00               	movlw	high _seven_seg_1
   456  00FE6E  6E3B               	movwf	seven_segment_write_number@seven_segment_obj+1,c
   457  00FE70  C045  F030         	movff	main@i,___awdiv@dividend
   458  00FE74  C046  F031         	movff	main@i+1,___awdiv@dividend+1
   459  00FE78  0E00               	movlw	0
   460  00FE7A  6E33               	movwf	___awdiv@divisor+1,c
   461  00FE7C  0E0A               	movlw	10
   462  00FE7E  6E32               	movwf	___awdiv@divisor,c
   463  00FE80  EC03  F07E         	call	___awdiv	;wreg free
   464  00FE84  5030               	movf	?___awdiv,w,c
   465  00FE86  6E3C               	movwf	seven_segment_write_number@number,c
   466  00FE88  ECC5  F07D         	call	_seven_segment_write_number	;wreg free
   467                           
   468                           ;application.c: 59: _delay((unsigned long)((10)*(4000000UL/4000.0)));
   469  00FE8C  0E0D               	movlw	13
   470  00FE8E  6E42               	movwf	??_main& (0+255),c
   471  00FE90  0EFC               	movlw	252
   472  00FE92                     u1447:
   473  00FE92  2EE8               	decfsz	wreg,f,c
   474  00FE94  D7FE               	bra	u1447
   475  00FE96  2E42               	decfsz	??_main& (0+255),f,c
   476  00FE98  D7FC               	bra	u1447
   477                           
   478                           ;application.c: 60: seven_segment_enable(&seven_seg_1, 1);
   479  00FE9A  0E21               	movlw	low _seven_seg_1
   480  00FE9C  6E3A               	movwf	seven_segment_enable@seven_segment_obj,c
   481  00FE9E  0E00               	movlw	high _seven_seg_1
   482  00FEA0  6E3B               	movwf	seven_segment_enable@seven_segment_obj+1,c
   483  00FEA2  0E01               	movlw	1
   484  00FEA4  6E3C               	movwf	seven_segment_enable@segment_Index,c
   485  00FEA6  EC8B  F07D         	call	_seven_segment_enable	;wreg free
   486                           
   487                           ;application.c: 61: seven_segment_disable(&seven_seg_1, 0);
   488  00FEAA  0E21               	movlw	low _seven_seg_1
   489  00FEAC  6E3A               	movwf	seven_segment_disable@seven_segment_obj,c
   490  00FEAE  0E00               	movlw	high _seven_seg_1
   491  00FEB0  6E3B               	movwf	seven_segment_disable@seven_segment_obj+1,c
   492  00FEB2  0E00               	movlw	0
   493  00FEB4  6E3C               	movwf	seven_segment_disable@segment_Index,c
   494  00FEB6  EC51  F07D         	call	_seven_segment_disable	;wreg free
   495                           
   496                           ;application.c: 62: seven_segment_write_number(&seven_seg_1, i % 10);
   497  00FEBA  0E21               	movlw	low _seven_seg_1
   498  00FEBC  6E3A               	movwf	seven_segment_write_number@seven_segment_obj,c
   499  00FEBE  0E00               	movlw	high _seven_seg_1
   500  00FEC0  6E3B               	movwf	seven_segment_write_number@seven_segment_obj+1,c
   501  00FEC2  C045  F030         	movff	main@i,___awmod@dividend
   502  00FEC6  C046  F031         	movff	main@i+1,___awmod@dividend+1
   503  00FECA  0E00               	movlw	0
   504  00FECC  6E33               	movwf	___awmod@divisor+1,c
   505  00FECE  0E0A               	movlw	10
   506  00FED0  6E32               	movwf	___awmod@divisor,c
   507  00FED2  EC19  F07D         	call	___awmod	;wreg free
   508  00FED6  5030               	movf	?___awmod,w,c
   509  00FED8  6E3C               	movwf	seven_segment_write_number@number,c
   510  00FEDA  ECC5  F07D         	call	_seven_segment_write_number	;wreg free
   511                           
   512                           ;application.c: 63: _delay((unsigned long)((10)*(4000000UL/4000.0)));
   513  00FEDE  0E0D               	movlw	13
   514  00FEE0  6E42               	movwf	??_main& (0+255),c
   515  00FEE2  0EFC               	movlw	252
   516  00FEE4                     u1457:
   517  00FEE4  2EE8               	decfsz	wreg,f,c
   518  00FEE6  D7FE               	bra	u1457
   519  00FEE8  2E42               	decfsz	??_main& (0+255),f,c
   520  00FEEA  D7FC               	bra	u1457
   521  00FEEC  4A43               	infsnz	main@j,f,c
   522  00FEEE  2A44               	incf	main@j+1,f,c
   523  00FEF0  D7A3               	goto	l2084
   524  00FEF2                     l2100:
   525  00FEF2  4A45               	infsnz	main@i,f,c
   526  00FEF4  2A46               	incf	main@i+1,f,c
   527  00FEF6  D794               	goto	l2078
   528  00FEF8                     __end_of_main:
   529                           	opt stack 0
   530                           tblptru	equ	0xFF8
   531                           tblptrh	equ	0xFF7
   532                           tblptrl	equ	0xFF6
   533                           tablat	equ	0xFF5
   534                           postinc0	equ	0xFEE
   535                           wreg	equ	0xFE8
   536                           postdec1	equ	0xFE5
   537                           fsr1l	equ	0xFE1
   538                           status	equ	0xFD8
   539                           
   540 ;; *************** function _seven_segment_write_number *****************
   541 ;; Defined at:
   542 ;;		line 44 in file "ECU_Layer/_7_Segment_Driver/ecu_7_seg_prog.c"
   543 ;; Parameters:    Size  Location     Type
   544 ;;  seven_segmen    2   10[COMRAM] PTR struct .
   545 ;;		 -> seven_seg_1(15), 
   546 ;;  number          1   12[COMRAM] unsigned char 
   547 ;; Auto vars:     Size  Location     Type
   548 ;;  Local_Status    1   13[COMRAM] unsigned char 
   549 ;; Return value:  Size  Location     Type
   550 ;;                  1    wreg      unsigned char 
   551 ;; Registers used:
   552 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   553 ;; Tracked objects:
   554 ;;		On entry : 0/0
   555 ;;		On exit  : 0/0
   556 ;;		Unchanged: 0/0
   557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   558 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   559 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   561 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   562 ;;Total ram usage:        4 bytes
   563 ;; Hardware stack levels used:    1
   564 ;; Hardware stack levels required when called:    1
   565 ;; This function calls:
   566 ;;		_gpio_pin_write_logic
   567 ;; This function is called by:
   568 ;;		_main
   569 ;; This function uses a non-reentrant model
   570 ;;
   571                           
   572                           	psect	text1
   573  00FB8A                     __ptext1:
   574                           	opt stack 0
   575  00FB8A                     _seven_segment_write_number:
   576                           	opt stack 29
   577                           
   578                           ;ecu_7_seg_prog.c: 45: Std_ReturnType Local_Status = (Std_ReturnType)0x00;
   579                           
   580                           ;incstack = 0
   581  00FB8A  0E00               	movlw	0
   582  00FB8C  6E3D               	movwf	seven_segment_write_number@Local_Status,c
   583                           
   584                           ;ecu_7_seg_prog.c: 46: if (seven_segment_obj == (0) || number > 9) {
   585  00FB8E  503A               	movf	seven_segment_write_number@seven_segment_obj,w,c
   586  00FB90  103B               	iorwf	seven_segment_write_number@seven_segment_obj+1,w,c
   587  00FB92  B4D8               	btfsc	status,2,c
   588  00FB94  D003               	goto	l1876
   589  00FB96  0E09               	movlw	9
   590  00FB98  643C               	cpfsgt	seven_segment_write_number@number,c
   591  00FB9A  D003               	goto	l1878
   592  00FB9C                     l1876:
   593                           
   594                           ;ecu_7_seg_prog.c: 47: Local_Status = (Std_ReturnType)0x00;
   595  00FB9C  0E00               	movlw	0
   596  00FB9E  6E3D               	movwf	seven_segment_write_number@Local_Status,c
   597                           
   598                           ;ecu_7_seg_prog.c: 48: } else {
   599  00FBA0  0012               	return	
   600  00FBA2                     l1878:
   601                           
   602                           ;ecu_7_seg_prog.c: 49: gpio_pin_write_logic(&seven_segment_obj->seven_segment_pins[0], n
      +                          umber & 0x01);
   603  00FBA2  C03A  F030         	movff	seven_segment_write_number@seven_segment_obj,gpio_pin_write_logic@_pin_config
   604  00FBA6  C03B  F031         	movff	seven_segment_write_number@seven_segment_obj+1,gpio_pin_write_logic@_pin_config+1
   605  00FBAA  503C               	movf	seven_segment_write_number@number,w,c
   606  00FBAC  0B01               	andlw	1
   607  00FBAE  6E32               	movwf	gpio_pin_write_logic@logic,c
   608  00FBB0  EC7C  F07F         	call	_gpio_pin_write_logic	;wreg free
   609                           
   610                           ;ecu_7_seg_prog.c: 50: gpio_pin_write_logic(&seven_segment_obj->seven_segment_pins[1], n
      +                          umber >> 1 & 0x01);
   611  00FBB4  0E02               	movlw	2
   612  00FBB6  243A               	addwf	seven_segment_write_number@seven_segment_obj,w,c
   613  00FBB8  6E30               	movwf	gpio_pin_write_logic@_pin_config,c
   614  00FBBA  0E00               	movlw	0
   615  00FBBC  203B               	addwfc	seven_segment_write_number@seven_segment_obj+1,w,c
   616  00FBBE  6E31               	movwf	gpio_pin_write_logic@_pin_config+1,c
   617  00FBC0  90D8               	bcf	status,0,c
   618  00FBC2  303C               	rrcf	seven_segment_write_number@number,w,c
   619  00FBC4  0B01               	andlw	1
   620  00FBC6  6E32               	movwf	gpio_pin_write_logic@logic,c
   621  00FBC8  EC7C  F07F         	call	_gpio_pin_write_logic	;wreg free
   622                           
   623                           ;ecu_7_seg_prog.c: 51: gpio_pin_write_logic(&seven_segment_obj->seven_segment_pins[2], n
      +                          umber >> 2 & 0x01);
   624  00FBCC  0E04               	movlw	4
   625  00FBCE  243A               	addwf	seven_segment_write_number@seven_segment_obj,w,c
   626  00FBD0  6E30               	movwf	gpio_pin_write_logic@_pin_config,c
   627  00FBD2  0E00               	movlw	0
   628  00FBD4  203B               	addwfc	seven_segment_write_number@seven_segment_obj+1,w,c
   629  00FBD6  6E31               	movwf	gpio_pin_write_logic@_pin_config+1,c
   630  00FBD8  403C               	rrncf	seven_segment_write_number@number,w,c
   631  00FBDA  42E8               	rrncf	wreg,f,c
   632  00FBDC  0B3F               	andlw	63
   633  00FBDE  0B01               	andlw	1
   634  00FBE0  6E32               	movwf	gpio_pin_write_logic@logic,c
   635  00FBE2  EC7C  F07F         	call	_gpio_pin_write_logic	;wreg free
   636                           
   637                           ;ecu_7_seg_prog.c: 52: gpio_pin_write_logic(&seven_segment_obj->seven_segment_pins[3], n
      +                          umber >> 3 & 0x01);
   638  00FBE6  0E06               	movlw	6
   639  00FBE8  243A               	addwf	seven_segment_write_number@seven_segment_obj,w,c
   640  00FBEA  6E30               	movwf	gpio_pin_write_logic@_pin_config,c
   641  00FBEC  0E00               	movlw	0
   642  00FBEE  203B               	addwfc	seven_segment_write_number@seven_segment_obj+1,w,c
   643  00FBF0  6E31               	movwf	gpio_pin_write_logic@_pin_config+1,c
   644  00FBF2  383C               	swapf	seven_segment_write_number@number,w,c
   645  00FBF4  46E8               	rlncf	wreg,f,c
   646  00FBF6  0B1F               	andlw	31
   647  00FBF8  0B01               	andlw	1
   648  00FBFA  6E32               	movwf	gpio_pin_write_logic@logic,c
   649  00FBFC  EC7C  F07F         	call	_gpio_pin_write_logic	;wreg free
   650                           
   651                           ;ecu_7_seg_prog.c: 53: Local_Status = (Std_ReturnType)0x01;
   652  00FC00  0E01               	movlw	1
   653  00FC02  6E3D               	movwf	seven_segment_write_number@Local_Status,c
   654  00FC04  0012               	return	
   655  00FC06                     __end_of_seven_segment_write_number:
   656                           	opt stack 0
   657                           tblptru	equ	0xFF8
   658                           tblptrh	equ	0xFF7
   659                           tblptrl	equ	0xFF6
   660                           tablat	equ	0xFF5
   661                           postinc0	equ	0xFEE
   662                           wreg	equ	0xFE8
   663                           postdec1	equ	0xFE5
   664                           fsr1l	equ	0xFE1
   665                           status	equ	0xFD8
   666                           
   667 ;; *************** function _seven_segment_enable *****************
   668 ;; Defined at:
   669 ;;		line 141 in file "ECU_Layer/_7_Segment_Driver/ecu_7_seg_prog.c"
   670 ;; Parameters:    Size  Location     Type
   671 ;;  seven_segmen    2   10[COMRAM] PTR struct .
   672 ;;		 -> seven_seg_1(15), 
   673 ;;  segment_Inde    1   12[COMRAM] unsigned char 
   674 ;; Auto vars:     Size  Location     Type
   675 ;;  Local_Status    1   13[COMRAM] unsigned char 
   676 ;; Return value:  Size  Location     Type
   677 ;;                  1    wreg      unsigned char 
   678 ;; Registers used:
   679 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   680 ;; Tracked objects:
   681 ;;		On entry : 0/0
   682 ;;		On exit  : 0/0
   683 ;;		Unchanged: 0/0
   684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   685 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   686 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   688 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   689 ;;Total ram usage:        4 bytes
   690 ;; Hardware stack levels used:    1
   691 ;; Hardware stack levels required when called:    1
   692 ;; This function calls:
   693 ;;		_gpio_pin_write_logic
   694 ;; This function is called by:
   695 ;;		_main
   696 ;; This function uses a non-reentrant model
   697 ;;
   698                           
   699                           	psect	text2
   700  00FB16                     __ptext2:
   701                           	opt stack 0
   702  00FB16                     _seven_segment_enable:
   703                           	opt stack 29
   704                           
   705                           ;ecu_7_seg_prog.c: 142: Std_ReturnType Local_Status = (Std_ReturnType)0x00;
   706                           
   707                           ;incstack = 0
   708  00FB16  0E00               	movlw	0
   709  00FB18  6E3D               	movwf	seven_segment_enable@Local_Status,c
   710                           
   711                           ;ecu_7_seg_prog.c: 143: if (seven_segment_obj == (0) || segment_Index > 2) {
   712  00FB1A  503A               	movf	seven_segment_enable@seven_segment_obj,w,c
   713  00FB1C  103B               	iorwf	seven_segment_enable@seven_segment_obj+1,w,c
   714  00FB1E  B4D8               	btfsc	status,2,c
   715  00FB20  D003               	goto	l1836
   716  00FB22  0E02               	movlw	2
   717  00FB24  643C               	cpfsgt	seven_segment_enable@segment_Index,c
   718  00FB26  D003               	goto	l1838
   719  00FB28                     l1836:
   720                           
   721                           ;ecu_7_seg_prog.c: 144: Local_Status = (Std_ReturnType)0x00;
   722  00FB28  0E00               	movlw	0
   723  00FB2A  6E3D               	movwf	seven_segment_enable@Local_Status,c
   724                           
   725                           ;ecu_7_seg_prog.c: 145: } else {
   726  00FB2C  0012               	return	
   727  00FB2E                     l1838:
   728                           
   729                           ;ecu_7_seg_prog.c: 146: if (seven_segment_obj->seven_segment_common_state == 0) {
   730  00FB2E  EE20 F00C          	lfsr	2,12
   731  00FB32  503A               	movf	seven_segment_enable@seven_segment_obj,w,c
   732  00FB34  26D9               	addwf	fsr2l,f,c
   733  00FB36  503B               	movf	seven_segment_enable@seven_segment_obj+1,w,c
   734  00FB38  22DA               	addwfc	fsr2h,f,c
   735  00FB3A  B0DF               	btfsc	indf2,0,c
   736  00FB3C  D013               	goto	l1844
   737                           
   738                           ;ecu_7_seg_prog.c: 147: gpio_pin_write_logic(&seven_segment_obj->seven_segment_enable_bi
      +                          n[segment_Index], HIGH);
   739  00FB3E  503C               	movf	seven_segment_enable@segment_Index,w,c
   740  00FB40  0D02               	mullw	2
   741  00FB42  0E08               	movlw	8
   742  00FB44  26F3               	addwf	prodl,f,c
   743  00FB46  0E00               	movlw	0
   744  00FB48  22F4               	addwfc	prodh,f,c
   745  00FB4A  50F3               	movf	prodl,w,c
   746  00FB4C  243A               	addwf	seven_segment_enable@seven_segment_obj,w,c
   747  00FB4E  6E30               	movwf	gpio_pin_write_logic@_pin_config,c
   748  00FB50  50F4               	movf	prodh,w,c
   749  00FB52  203B               	addwfc	seven_segment_enable@seven_segment_obj+1,w,c
   750  00FB54  6E31               	movwf	gpio_pin_write_logic@_pin_config+1,c
   751  00FB56  0E01               	movlw	1
   752  00FB58  6E32               	movwf	gpio_pin_write_logic@logic,c
   753  00FB5A  EC7C  F07F         	call	_gpio_pin_write_logic	;wreg free
   754                           
   755                           ;ecu_7_seg_prog.c: 148: Local_Status = (Std_ReturnType)0x00;
   756  00FB5E  0E00               	movlw	0
   757  00FB60  6E3D               	movwf	seven_segment_enable@Local_Status,c
   758                           
   759                           ;ecu_7_seg_prog.c: 149: } else {
   760  00FB62  0012               	return	
   761  00FB64                     l1844:
   762                           
   763                           ;ecu_7_seg_prog.c: 150: gpio_pin_write_logic(&seven_segment_obj->seven_segment_enable_bi
      +                          n[segment_Index], LOW);
   764  00FB64  503C               	movf	seven_segment_enable@segment_Index,w,c
   765  00FB66  0D02               	mullw	2
   766  00FB68  0E08               	movlw	8
   767  00FB6A  26F3               	addwf	prodl,f,c
   768  00FB6C  0E00               	movlw	0
   769  00FB6E  22F4               	addwfc	prodh,f,c
   770  00FB70  50F3               	movf	prodl,w,c
   771  00FB72  243A               	addwf	seven_segment_enable@seven_segment_obj,w,c
   772  00FB74  6E30               	movwf	gpio_pin_write_logic@_pin_config,c
   773  00FB76  50F4               	movf	prodh,w,c
   774  00FB78  203B               	addwfc	seven_segment_enable@seven_segment_obj+1,w,c
   775  00FB7A  6E31               	movwf	gpio_pin_write_logic@_pin_config+1,c
   776  00FB7C  0E00               	movlw	0
   777  00FB7E  6E32               	movwf	gpio_pin_write_logic@logic,c
   778  00FB80  EC7C  F07F         	call	_gpio_pin_write_logic	;wreg free
   779                           
   780                           ;ecu_7_seg_prog.c: 151: Local_Status = (Std_ReturnType)0x00;
   781  00FB84  0E00               	movlw	0
   782  00FB86  6E3D               	movwf	seven_segment_enable@Local_Status,c
   783  00FB88  0012               	return	
   784  00FB8A                     __end_of_seven_segment_enable:
   785                           	opt stack 0
   786                           tblptru	equ	0xFF8
   787                           tblptrh	equ	0xFF7
   788                           tblptrl	equ	0xFF6
   789                           tablat	equ	0xFF5
   790                           prodh	equ	0xFF4
   791                           prodl	equ	0xFF3
   792                           postinc0	equ	0xFEE
   793                           wreg	equ	0xFE8
   794                           postdec1	equ	0xFE5
   795                           fsr1l	equ	0xFE1
   796                           indf2	equ	0xFDF
   797                           fsr2h	equ	0xFDA
   798                           fsr2l	equ	0xFD9
   799                           status	equ	0xFD8
   800                           
   801 ;; *************** function _seven_segment_disable *****************
   802 ;; Defined at:
   803 ;;		line 164 in file "ECU_Layer/_7_Segment_Driver/ecu_7_seg_prog.c"
   804 ;; Parameters:    Size  Location     Type
   805 ;;  seven_segmen    2   10[COMRAM] PTR struct .
   806 ;;		 -> seven_seg_1(15), 
   807 ;;  segment_Inde    1   12[COMRAM] unsigned char 
   808 ;; Auto vars:     Size  Location     Type
   809 ;;  Local_Status    1   13[COMRAM] unsigned char 
   810 ;; Return value:  Size  Location     Type
   811 ;;                  1    wreg      unsigned char 
   812 ;; Registers used:
   813 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   814 ;; Tracked objects:
   815 ;;		On entry : 0/0
   816 ;;		On exit  : 0/0
   817 ;;		Unchanged: 0/0
   818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   819 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   820 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   822 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   823 ;;Total ram usage:        4 bytes
   824 ;; Hardware stack levels used:    1
   825 ;; Hardware stack levels required when called:    1
   826 ;; This function calls:
   827 ;;		_gpio_pin_write_logic
   828 ;; This function is called by:
   829 ;;		_main
   830 ;; This function uses a non-reentrant model
   831 ;;
   832                           
   833                           	psect	text3
   834  00FAA2                     __ptext3:
   835                           	opt stack 0
   836  00FAA2                     _seven_segment_disable:
   837                           	opt stack 29
   838                           
   839                           ;ecu_7_seg_prog.c: 165: Std_ReturnType Local_Status = (Std_ReturnType)0x00;
   840                           
   841                           ;incstack = 0
   842  00FAA2  0E00               	movlw	0
   843  00FAA4  6E3D               	movwf	seven_segment_disable@Local_Status,c
   844                           
   845                           ;ecu_7_seg_prog.c: 166: if (seven_segment_obj == (0) || segment_Index > 2) {
   846  00FAA6  503A               	movf	seven_segment_disable@seven_segment_obj,w,c
   847  00FAA8  103B               	iorwf	seven_segment_disable@seven_segment_obj+1,w,c
   848  00FAAA  B4D8               	btfsc	status,2,c
   849  00FAAC  D003               	goto	l1856
   850  00FAAE  0E02               	movlw	2
   851  00FAB0  643C               	cpfsgt	seven_segment_disable@segment_Index,c
   852  00FAB2  D003               	goto	l1858
   853  00FAB4                     l1856:
   854                           
   855                           ;ecu_7_seg_prog.c: 167: Local_Status = (Std_ReturnType)0x00;
   856  00FAB4  0E00               	movlw	0
   857  00FAB6  6E3D               	movwf	seven_segment_disable@Local_Status,c
   858                           
   859                           ;ecu_7_seg_prog.c: 168: } else {
   860  00FAB8  0012               	return	
   861  00FABA                     l1858:
   862                           
   863                           ;ecu_7_seg_prog.c: 169: if (seven_segment_obj->seven_segment_common_state == 0) {
   864  00FABA  EE20 F00C          	lfsr	2,12
   865  00FABE  503A               	movf	seven_segment_disable@seven_segment_obj,w,c
   866  00FAC0  26D9               	addwf	fsr2l,f,c
   867  00FAC2  503B               	movf	seven_segment_disable@seven_segment_obj+1,w,c
   868  00FAC4  22DA               	addwfc	fsr2h,f,c
   869  00FAC6  B0DF               	btfsc	indf2,0,c
   870  00FAC8  D013               	goto	l1864
   871                           
   872                           ;ecu_7_seg_prog.c: 170: gpio_pin_write_logic(&seven_segment_obj->seven_segment_enable_bi
      +                          n[segment_Index], LOW);
   873  00FACA  503C               	movf	seven_segment_disable@segment_Index,w,c
   874  00FACC  0D02               	mullw	2
   875  00FACE  0E08               	movlw	8
   876  00FAD0  26F3               	addwf	prodl,f,c
   877  00FAD2  0E00               	movlw	0
   878  00FAD4  22F4               	addwfc	prodh,f,c
   879  00FAD6  50F3               	movf	prodl,w,c
   880  00FAD8  243A               	addwf	seven_segment_disable@seven_segment_obj,w,c
   881  00FADA  6E30               	movwf	gpio_pin_write_logic@_pin_config,c
   882  00FADC  50F4               	movf	prodh,w,c
   883  00FADE  203B               	addwfc	seven_segment_disable@seven_segment_obj+1,w,c
   884  00FAE0  6E31               	movwf	gpio_pin_write_logic@_pin_config+1,c
   885  00FAE2  0E00               	movlw	0
   886  00FAE4  6E32               	movwf	gpio_pin_write_logic@logic,c
   887  00FAE6  EC7C  F07F         	call	_gpio_pin_write_logic	;wreg free
   888                           
   889                           ;ecu_7_seg_prog.c: 171: Local_Status = (Std_ReturnType)0x00;
   890  00FAEA  0E00               	movlw	0
   891  00FAEC  6E3D               	movwf	seven_segment_disable@Local_Status,c
   892                           
   893                           ;ecu_7_seg_prog.c: 172: } else {
   894  00FAEE  0012               	return	
   895  00FAF0                     l1864:
   896                           
   897                           ;ecu_7_seg_prog.c: 173: gpio_pin_write_logic(&seven_segment_obj->seven_segment_enable_bi
      +                          n[segment_Index], HIGH);
   898  00FAF0  503C               	movf	seven_segment_disable@segment_Index,w,c
   899  00FAF2  0D02               	mullw	2
   900  00FAF4  0E08               	movlw	8
   901  00FAF6  26F3               	addwf	prodl,f,c
   902  00FAF8  0E00               	movlw	0
   903  00FAFA  22F4               	addwfc	prodh,f,c
   904  00FAFC  50F3               	movf	prodl,w,c
   905  00FAFE  243A               	addwf	seven_segment_disable@seven_segment_obj,w,c
   906  00FB00  6E30               	movwf	gpio_pin_write_logic@_pin_config,c
   907  00FB02  50F4               	movf	prodh,w,c
   908  00FB04  203B               	addwfc	seven_segment_disable@seven_segment_obj+1,w,c
   909  00FB06  6E31               	movwf	gpio_pin_write_logic@_pin_config+1,c
   910  00FB08  0E01               	movlw	1
   911  00FB0A  6E32               	movwf	gpio_pin_write_logic@logic,c
   912  00FB0C  EC7C  F07F         	call	_gpio_pin_write_logic	;wreg free
   913                           
   914                           ;ecu_7_seg_prog.c: 174: Local_Status = (Std_ReturnType)0x00;
   915  00FB10  0E00               	movlw	0
   916  00FB12  6E3D               	movwf	seven_segment_disable@Local_Status,c
   917  00FB14  0012               	return	
   918  00FB16                     __end_of_seven_segment_disable:
   919                           	opt stack 0
   920                           tblptru	equ	0xFF8
   921                           tblptrh	equ	0xFF7
   922                           tblptrl	equ	0xFF6
   923                           tablat	equ	0xFF5
   924                           prodh	equ	0xFF4
   925                           prodl	equ	0xFF3
   926                           postinc0	equ	0xFEE
   927                           wreg	equ	0xFE8
   928                           postdec1	equ	0xFE5
   929                           fsr1l	equ	0xFE1
   930                           indf2	equ	0xFDF
   931                           fsr2h	equ	0xFDA
   932                           fsr2l	equ	0xFD9
   933                           status	equ	0xFD8
   934                           
   935 ;; *************** function _gpio_pin_write_logic *****************
   936 ;; Defined at:
   937 ;;		line 60 in file "MCAL_Layer/GPIO/hal_gpio.c"
   938 ;; Parameters:    Size  Location     Type
   939 ;;  _pin_config     2    0[COMRAM] PTR const struct .
   940 ;;		 -> seven_seg_1.seven_segment_enable_bin(4), seven_seg_1.seven_segment_pins(8), seven_seg_1(15), 
   941 ;;  logic           1    2[COMRAM] enum E3078
   942 ;; Auto vars:     Size  Location     Type
   943 ;;  LocalReturn     1    9[COMRAM] unsigned char 
   944 ;; Return value:  Size  Location     Type
   945 ;;                  1    wreg      unsigned char 
   946 ;; Registers used:
   947 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   948 ;; Tracked objects:
   949 ;;		On entry : 0/0
   950 ;;		On exit  : 0/0
   951 ;;		Unchanged: 0/0
   952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   953 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   954 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   955 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   956 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   957 ;;Total ram usage:       10 bytes
   958 ;; Hardware stack levels used:    1
   959 ;; This function calls:
   960 ;;		Nothing
   961 ;; This function is called by:
   962 ;;		_seven_segment_write_number
   963 ;;		_seven_segment_enable
   964 ;;		_seven_segment_disable
   965 ;;		_motor_turn_right
   966 ;;		_motor_turn_left
   967 ;;		_motor_turn_off
   968 ;;		_relay_turn_on
   969 ;;		_relay_turn_off
   970 ;;		_gpio_pin_intialize
   971 ;;		_seven_segment_clear_number
   972 ;; This function uses a non-reentrant model
   973 ;;
   974                           
   975                           	psect	text4
   976  00FEF8                     __ptext4:
   977                           	opt stack 0
   978  00FEF8                     _gpio_pin_write_logic:
   979                           	opt stack 29
   980                           
   981                           ;hal_gpio.c: 61: Std_ReturnType LocalReturn=(Std_ReturnType)0x00;
   982                           
   983                           ;incstack = 0
   984  00FEF8  0E00               	movlw	0
   985  00FEFA  6E39               	movwf	gpio_pin_write_logic@LocalReturn,c
   986                           
   987                           ;hal_gpio.c: 62: if(_pin_config==(0) || (_pin_config->port)>5 || (_pin_config->pin)>8 ||
      +                           (_pin_config->directin==INPUT)){
   988  00FEFC  5030               	movf	gpio_pin_write_logic@_pin_config,w,c
   989  00FEFE  1031               	iorwf	gpio_pin_write_logic@_pin_config+1,w,c
   990  00FF00  B4D8               	btfsc	status,2,c
   991  00FF02  D01A               	goto	l1778
   992  00FF04  C030  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
   993  00FF08  C031  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
   994  00FF0C  50DF               	movf	indf2,w,c
   995  00FF0E  0B0F               	andlw	15
   996  00FF10  6E33               	movwf	??_gpio_pin_write_logic& (0+255),c
   997  00FF12  0E06               	movlw	6
   998  00FF14  6033               	cpfslt	??_gpio_pin_write_logic,c
   999  00FF16  D010               	goto	l1778
  1000  00FF18  C030  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  1001  00FF1C  C031  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  1002  00FF20  38DF               	swapf	indf2,w,c
  1003  00FF22  0B07               	andlw	7
  1004  00FF24  6E33               	movwf	??_gpio_pin_write_logic& (0+255),c
  1005  00FF26  0E09               	movlw	9
  1006  00FF28  6033               	cpfslt	??_gpio_pin_write_logic,c
  1007  00FF2A  D006               	goto	l1778
  1008  00FF2C  C030  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  1009  00FF30  C031  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  1010  00FF34  AEDF               	btfss	indf2,7,c
  1011  00FF36  D05C               	goto	l1790
  1012  00FF38                     l1778:
  1013                           
  1014                           ;hal_gpio.c: 63: LocalReturn=(Std_ReturnType)0x00;
  1015  00FF38  0E00               	movlw	0
  1016  00FF3A  6E39               	movwf	gpio_pin_write_logic@LocalReturn,c
  1017                           
  1018                           ;hal_gpio.c: 64: }else{
  1019  00FF3C  0012               	return	
  1020  00FF3E                     l1780:
  1021                           
  1022                           ;hal_gpio.c: 67: (*lat_register[_pin_config->port] |= ((uint8)1 << _pin_config->pin));
  1023  00FF3E  C030  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  1024  00FF42  C031  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  1025  00FF46  38DF               	swapf	indf2,w,c
  1026  00FF48  0B07               	andlw	7
  1027  00FF4A  6E33               	movwf	??_gpio_pin_write_logic& (0+255),c
  1028  00FF4C  0E01               	movlw	1
  1029  00FF4E  6E34               	movwf	(??_gpio_pin_write_logic+1)& (0+255),c
  1030  00FF50  2A33               	incf	??_gpio_pin_write_logic,f,c
  1031  00FF52  D002               	goto	u1004
  1032  00FF54                     u1005:
  1033  00FF54  90D8               	bcf	status,0,c
  1034  00FF56  3634               	rlcf	??_gpio_pin_write_logic+1,f,c
  1035  00FF58                     u1004:
  1036  00FF58  2E33               	decfsz	??_gpio_pin_write_logic,f,c
  1037  00FF5A  D7FC               	goto	u1005
  1038  00FF5C  C030  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  1039  00FF60  C031  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  1040  00FF64  50DF               	movf	indf2,w,c
  1041  00FF66  0B0F               	andlw	15
  1042  00FF68  6E35               	movwf	(??_gpio_pin_write_logic+2)& (0+255),c
  1043  00FF6A  5035               	movf	??_gpio_pin_write_logic+2,w,c
  1044  00FF6C  0D02               	mullw	2
  1045  00FF6E  0E01               	movlw	low _lat_register
  1046  00FF70  24F3               	addwf	prodl,w,c
  1047  00FF72  6ED9               	movwf	fsr2l,c
  1048  00FF74  0E00               	movlw	high _lat_register
  1049  00FF76  20F4               	addwfc	prodh,w,c
  1050  00FF78  6EDA               	movwf	fsr2h,c
  1051  00FF7A  CFDE F036          	movff	postinc2,??_gpio_pin_write_logic+3
  1052  00FF7E  CFDD F037          	movff	postdec2,??_gpio_pin_write_logic+4
  1053  00FF82  C036  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  1054  00FF86  C037  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  1055  00FF8A  5034               	movf	??_gpio_pin_write_logic+1,w,c
  1056  00FF8C  12DF               	iorwf	indf2,f,c
  1057                           
  1058                           ;hal_gpio.c: 68: LocalReturn=(Std_ReturnType)0x01;
  1059  00FF8E  0E01               	movlw	1
  1060  00FF90  6E39               	movwf	gpio_pin_write_logic@LocalReturn,c
  1061                           
  1062                           ;hal_gpio.c: 69: break;
  1063  00FF92  0012               	return	
  1064  00FF94                     l1784:
  1065                           
  1066                           ;hal_gpio.c: 71: (*lat_register[_pin_config->port] &= ~((uint8)1 << _pin_config->pin));
  1067  00FF94  C030  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  1068  00FF98  C031  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  1069  00FF9C  38DF               	swapf	indf2,w,c
  1070  00FF9E  0B07               	andlw	7
  1071  00FFA0  6E33               	movwf	??_gpio_pin_write_logic& (0+255),c
  1072  00FFA2  0E01               	movlw	1
  1073  00FFA4  6E34               	movwf	(??_gpio_pin_write_logic+1)& (0+255),c
  1074  00FFA6  2A33               	incf	??_gpio_pin_write_logic,f,c
  1075  00FFA8  D002               	goto	u1014
  1076  00FFAA                     u1015:
  1077  00FFAA  90D8               	bcf	status,0,c
  1078  00FFAC  3634               	rlcf	??_gpio_pin_write_logic+1,f,c
  1079  00FFAE                     u1014:
  1080  00FFAE  2E33               	decfsz	??_gpio_pin_write_logic,f,c
  1081  00FFB0  D7FC               	goto	u1015
  1082  00FFB2  5034               	movf	??_gpio_pin_write_logic+1,w,c
  1083  00FFB4  0AFF               	xorlw	255
  1084  00FFB6  6E35               	movwf	(??_gpio_pin_write_logic+2)& (0+255),c
  1085  00FFB8  C030  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
  1086  00FFBC  C031  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
  1087  00FFC0  50DF               	movf	indf2,w,c
  1088  00FFC2  0B0F               	andlw	15
  1089  00FFC4  6E36               	movwf	(??_gpio_pin_write_logic+3)& (0+255),c
  1090  00FFC6  5036               	movf	??_gpio_pin_write_logic+3,w,c
  1091  00FFC8  0D02               	mullw	2
  1092  00FFCA  0E01               	movlw	low _lat_register
  1093  00FFCC  24F3               	addwf	prodl,w,c
  1094  00FFCE  6ED9               	movwf	fsr2l,c
  1095  00FFD0  0E00               	movlw	high _lat_register
  1096  00FFD2  20F4               	addwfc	prodh,w,c
  1097  00FFD4  6EDA               	movwf	fsr2h,c
  1098  00FFD6  CFDE F037          	movff	postinc2,??_gpio_pin_write_logic+4
  1099  00FFDA  CFDD F038          	movff	postdec2,??_gpio_pin_write_logic+5
  1100  00FFDE  C037  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  1101  00FFE2  C038  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  1102  00FFE6  5035               	movf	??_gpio_pin_write_logic+2,w,c
  1103  00FFE8  16DF               	andwf	indf2,f,c
  1104                           
  1105                           ;hal_gpio.c: 72: LocalReturn=(Std_ReturnType)0x01;
  1106  00FFEA  0E01               	movlw	1
  1107  00FFEC  6E39               	movwf	gpio_pin_write_logic@LocalReturn,c
  1108                           
  1109                           ;hal_gpio.c: 74: }
  1110                           
  1111                           ;hal_gpio.c: 73: break;
  1112  00FFEE  0012               	return	
  1113  00FFF0                     l1790:
  1114  00FFF0  5032               	movf	gpio_pin_write_logic@logic,w,c
  1115                           
  1116                           ; Switch size 1, requested type "space"
  1117                           ; Number of cases is 2, Range of values is 0 to 1
  1118                           ; switch strategies available:
  1119                           ; Name         Instructions Cycles
  1120                           ; simple_byte            7     4 (average)
  1121                           ;	Chosen strategy is simple_byte
  1122  00FFF2  0A00               	xorlw	0	; case 0
  1123  00FFF4  B4D8               	btfsc	status,2,c
  1124  00FFF6  D7CE               	goto	l1784
  1125  00FFF8  0A01               	xorlw	1	; case 1
  1126  00FFFA  A4D8               	btfss	status,2,c
  1127  00FFFC  0012               	return	
  1128  00FFFE  D79F               	goto	l1780
  1129  010000                     __end_of_gpio_pin_write_logic:
  1130                           	opt stack 0
  1131                           tblptru	equ	0xFF8
  1132                           tblptrh	equ	0xFF7
  1133                           tblptrl	equ	0xFF6
  1134                           tablat	equ	0xFF5
  1135                           prodh	equ	0xFF4
  1136                           prodl	equ	0xFF3
  1137                           postinc0	equ	0xFEE
  1138                           wreg	equ	0xFE8
  1139                           postdec1	equ	0xFE5
  1140                           fsr1l	equ	0xFE1
  1141                           indf2	equ	0xFDF
  1142                           postinc2	equ	0xFDE
  1143                           postdec2	equ	0xFDD
  1144                           fsr2h	equ	0xFDA
  1145                           fsr2l	equ	0xFD9
  1146                           status	equ	0xFD8
  1147                           
  1148 ;; *************** function _functionInitialize *****************
  1149 ;; Defined at:
  1150 ;;		line 69 in file "application.c"
  1151 ;; Parameters:    Size  Location     Type
  1152 ;;		None
  1153 ;; Auto vars:     Size  Location     Type
  1154 ;;		None
  1155 ;; Return value:  Size  Location     Type
  1156 ;;                  1    wreg      void 
  1157 ;; Registers used:
  1158 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1159 ;; Tracked objects:
  1160 ;;		On entry : 0/0
  1161 ;;		On exit  : 0/0
  1162 ;;		Unchanged: 0/0
  1163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1168 ;;Total ram usage:        0 bytes
  1169 ;; Hardware stack levels used:    1
  1170 ;; Hardware stack levels required when called:    2
  1171 ;; This function calls:
  1172 ;;		_seven_segment_initialize
  1173 ;; This function is called by:
  1174 ;;		_main
  1175 ;; This function uses a non-reentrant model
  1176 ;;
  1177                           
  1178                           	psect	text5
  1179  00F9C8                     __ptext5:
  1180                           	opt stack 0
  1181  00F9C8                     _functionInitialize:
  1182                           	opt stack 28
  1183                           
  1184                           ;application.c: 70: seven_segment_initialize(&seven_seg_1);
  1185                           
  1186                           ;incstack = 0
  1187  00F9C8  0E21               	movlw	low _seven_seg_1
  1188  00F9CA  6E39               	movwf	seven_segment_initialize@seven_segment_obj,c
  1189  00F9CC  0E00               	movlw	high _seven_seg_1
  1190  00F9CE  6E3A               	movwf	seven_segment_initialize@seven_segment_obj+1,c
  1191  00F9D0  EC45  F07E         	call	_seven_segment_initialize	;wreg free
  1192  00F9D4  0012               	return		;funcret
  1193  00F9D6                     __end_of_functionInitialize:
  1194                           	opt stack 0
  1195                           tblptru	equ	0xFF8
  1196                           tblptrh	equ	0xFF7
  1197                           tblptrl	equ	0xFF6
  1198                           tablat	equ	0xFF5
  1199                           prodh	equ	0xFF4
  1200                           prodl	equ	0xFF3
  1201                           postinc0	equ	0xFEE
  1202                           wreg	equ	0xFE8
  1203                           postdec1	equ	0xFE5
  1204                           fsr1l	equ	0xFE1
  1205                           indf2	equ	0xFDF
  1206                           postinc2	equ	0xFDE
  1207                           postdec2	equ	0xFDD
  1208                           fsr2h	equ	0xFDA
  1209                           fsr2l	equ	0xFD9
  1210                           status	equ	0xFD8
  1211                           
  1212 ;; *************** function _seven_segment_initialize *****************
  1213 ;; Defined at:
  1214 ;;		line 18 in file "ECU_Layer/_7_Segment_Driver/ecu_7_seg_prog.c"
  1215 ;; Parameters:    Size  Location     Type
  1216 ;;  seven_segmen    2    9[COMRAM] PTR struct .
  1217 ;;		 -> seven_seg_1(15), 
  1218 ;; Auto vars:     Size  Location     Type
  1219 ;;  i               2   16[COMRAM] int 
  1220 ;;  i               2   14[COMRAM] int 
  1221 ;;  Local_Status    1   13[COMRAM] unsigned char 
  1222 ;; Return value:  Size  Location     Type
  1223 ;;                  1    wreg      unsigned char 
  1224 ;; Registers used:
  1225 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1226 ;; Tracked objects:
  1227 ;;		On entry : 0/0
  1228 ;;		On exit  : 0/0
  1229 ;;		Unchanged: 0/0
  1230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1231 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1232 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1233 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1234 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1235 ;;Total ram usage:        9 bytes
  1236 ;; Hardware stack levels used:    1
  1237 ;; Hardware stack levels required when called:    1
  1238 ;; This function calls:
  1239 ;;		_gpio_pin_direction_intialize
  1240 ;; This function is called by:
  1241 ;;		_functionInitialize
  1242 ;; This function uses a non-reentrant model
  1243 ;;
  1244                           
  1245                           	psect	text6
  1246  00FC8A                     __ptext6:
  1247                           	opt stack 0
  1248  00FC8A                     _seven_segment_initialize:
  1249                           	opt stack 28
  1250                           
  1251                           ;ecu_7_seg_prog.c: 19: Std_ReturnType Local_Status = (Std_ReturnType)0x00;
  1252                           
  1253                           ;incstack = 0
  1254  00FC8A  0E00               	movlw	0
  1255  00FC8C  6E3D               	movwf	seven_segment_initialize@Local_Status,c
  1256                           
  1257                           ;ecu_7_seg_prog.c: 20: if (seven_segment_obj == (0)) {
  1258  00FC8E  5039               	movf	seven_segment_initialize@seven_segment_obj,w,c
  1259  00FC90  103A               	iorwf	seven_segment_initialize@seven_segment_obj+1,w,c
  1260  00FC92  A4D8               	btfss	status,2,c
  1261  00FC94  D003               	goto	l1798
  1262                           
  1263                           ;ecu_7_seg_prog.c: 21: Local_Status = (Std_ReturnType)0x00;
  1264  00FC96  0E00               	movlw	0
  1265  00FC98  6E3D               	movwf	seven_segment_initialize@Local_Status,c
  1266                           
  1267                           ;ecu_7_seg_prog.c: 22: } else {
  1268  00FC9A  0012               	return	
  1269  00FC9C                     l1798:
  1270                           
  1271                           ;ecu_7_seg_prog.c: 23: for (int i = 0; i < 4; i++) {
  1272  00FC9C  0E00               	movlw	0
  1273  00FC9E  6E3F               	movwf	seven_segment_initialize@i+1,c
  1274  00FCA0  0E00               	movlw	0
  1275  00FCA2  6E3E               	movwf	seven_segment_initialize@i,c
  1276  00FCA4                     l1800:
  1277  00FCA4  BE3F               	btfsc	seven_segment_initialize@i+1,7,c
  1278  00FCA6  D006               	goto	l1804
  1279  00FCA8  503F               	movf	seven_segment_initialize@i+1,w,c
  1280  00FCAA  E116               	bnz	l1810
  1281  00FCAC  0E04               	movlw	4
  1282  00FCAE  5C3E               	subwf	seven_segment_initialize@i,w,c
  1283  00FCB0  B0D8               	btfsc	status,0,c
  1284  00FCB2  D012               	goto	l1810
  1285  00FCB4                     l1804:
  1286                           
  1287                           ;ecu_7_seg_prog.c: 24: gpio_pin_direction_intialize(&seven_segment_obj->seven_segment_pi
      +                          ns[i]);
  1288  00FCB4  C03E  F03B         	movff	seven_segment_initialize@i,??_seven_segment_initialize
  1289  00FCB8  C03F  F03C         	movff	seven_segment_initialize@i+1,??_seven_segment_initialize+1
  1290  00FCBC  90D8               	bcf	status,0,c
  1291  00FCBE  363B               	rlcf	??_seven_segment_initialize,f,c
  1292  00FCC0  363C               	rlcf	??_seven_segment_initialize+1,f,c
  1293  00FCC2  503B               	movf	??_seven_segment_initialize,w,c
  1294  00FCC4  2439               	addwf	seven_segment_initialize@seven_segment_obj,w,c
  1295  00FCC6  6E30               	movwf	gpio_pin_direction_intialize@_pin_config,c
  1296  00FCC8  503C               	movf	??_seven_segment_initialize+1,w,c
  1297  00FCCA  203A               	addwfc	seven_segment_initialize@seven_segment_obj+1,w,c
  1298  00FCCC  6E31               	movwf	gpio_pin_direction_intialize@_pin_config+1,c
  1299  00FCCE  EC99  F07E         	call	_gpio_pin_direction_intialize	;wreg free
  1300  00FCD2  4A3E               	infsnz	seven_segment_initialize@i,f,c
  1301  00FCD4  2A3F               	incf	seven_segment_initialize@i+1,f,c
  1302  00FCD6  D7E6               	goto	l1800
  1303  00FCD8                     l1810:
  1304                           
  1305                           ;ecu_7_seg_prog.c: 25: }
  1306                           ;ecu_7_seg_prog.c: 26: for (int i = 0; i < 2; i++) {
  1307  00FCD8  0E00               	movlw	0
  1308  00FCDA  6E41               	movwf	seven_segment_initialize@i_559+1,c
  1309  00FCDC  0E00               	movlw	0
  1310  00FCDE  6E40               	movwf	seven_segment_initialize@i_559,c
  1311  00FCE0                     l1812:
  1312  00FCE0  BE41               	btfsc	seven_segment_initialize@i_559+1,7,c
  1313  00FCE2  D006               	goto	l1816
  1314  00FCE4  5041               	movf	seven_segment_initialize@i_559+1,w,c
  1315  00FCE6  E11A               	bnz	l1822
  1316  00FCE8  0E02               	movlw	2
  1317  00FCEA  5C40               	subwf	seven_segment_initialize@i_559,w,c
  1318  00FCEC  B0D8               	btfsc	status,0,c
  1319  00FCEE  D016               	goto	l1822
  1320  00FCF0                     l1816:
  1321                           
  1322                           ;ecu_7_seg_prog.c: 27: gpio_pin_direction_intialize(&seven_segment_obj->seven_segment_en
      +                          able_bin[i]);
  1323  00FCF0  C040  F03B         	movff	seven_segment_initialize@i_559,??_seven_segment_initialize
  1324  00FCF4  C041  F03C         	movff	seven_segment_initialize@i_559+1,??_seven_segment_initialize+1
  1325  00FCF8  90D8               	bcf	status,0,c
  1326  00FCFA  363B               	rlcf	??_seven_segment_initialize,f,c
  1327  00FCFC  363C               	rlcf	??_seven_segment_initialize+1,f,c
  1328  00FCFE  0E08               	movlw	8
  1329  00FD00  263B               	addwf	??_seven_segment_initialize,f,c
  1330  00FD02  0E00               	movlw	0
  1331  00FD04  223C               	addwfc	??_seven_segment_initialize+1,f,c
  1332  00FD06  503B               	movf	??_seven_segment_initialize,w,c
  1333  00FD08  2439               	addwf	seven_segment_initialize@seven_segment_obj,w,c
  1334  00FD0A  6E30               	movwf	gpio_pin_direction_intialize@_pin_config,c
  1335  00FD0C  503C               	movf	??_seven_segment_initialize+1,w,c
  1336  00FD0E  203A               	addwfc	seven_segment_initialize@seven_segment_obj+1,w,c
  1337  00FD10  6E31               	movwf	gpio_pin_direction_intialize@_pin_config+1,c
  1338  00FD12  EC99  F07E         	call	_gpio_pin_direction_intialize	;wreg free
  1339  00FD16  4A40               	infsnz	seven_segment_initialize@i_559,f,c
  1340  00FD18  2A41               	incf	seven_segment_initialize@i_559+1,f,c
  1341  00FD1A  D7E2               	goto	l1812
  1342  00FD1C                     l1822:
  1343                           
  1344                           ;ecu_7_seg_prog.c: 28: }
  1345                           ;ecu_7_seg_prog.c: 29: gpio_pin_direction_intialize(&seven_segment_obj->seven_segment_do
      +                          t_pin);
  1346  00FD1C  0E0D               	movlw	13
  1347  00FD1E  2439               	addwf	seven_segment_initialize@seven_segment_obj,w,c
  1348  00FD20  6E30               	movwf	gpio_pin_direction_intialize@_pin_config,c
  1349  00FD22  0E00               	movlw	0
  1350  00FD24  203A               	addwfc	seven_segment_initialize@seven_segment_obj+1,w,c
  1351  00FD26  6E31               	movwf	gpio_pin_direction_intialize@_pin_config+1,c
  1352  00FD28  EC99  F07E         	call	_gpio_pin_direction_intialize	;wreg free
  1353                           
  1354                           ;ecu_7_seg_prog.c: 30: Local_Status = (Std_ReturnType)0x01;
  1355  00FD2C  0E01               	movlw	1
  1356  00FD2E  6E3D               	movwf	seven_segment_initialize@Local_Status,c
  1357  00FD30  0012               	return	
  1358  00FD32                     __end_of_seven_segment_initialize:
  1359                           	opt stack 0
  1360                           tblptru	equ	0xFF8
  1361                           tblptrh	equ	0xFF7
  1362                           tblptrl	equ	0xFF6
  1363                           tablat	equ	0xFF5
  1364                           prodh	equ	0xFF4
  1365                           prodl	equ	0xFF3
  1366                           postinc0	equ	0xFEE
  1367                           wreg	equ	0xFE8
  1368                           postdec1	equ	0xFE5
  1369                           fsr1l	equ	0xFE1
  1370                           indf2	equ	0xFDF
  1371                           postinc2	equ	0xFDE
  1372                           postdec2	equ	0xFDD
  1373                           fsr2h	equ	0xFDA
  1374                           fsr2l	equ	0xFD9
  1375                           status	equ	0xFD8
  1376                           
  1377 ;; *************** function _gpio_pin_direction_intialize *****************
  1378 ;; Defined at:
  1379 ;;		line 16 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1380 ;; Parameters:    Size  Location     Type
  1381 ;;  _pin_config     2    0[COMRAM] PTR const struct .
  1382 ;;		 -> seven_seg_1.seven_segment_dot_pin(2), seven_seg_1.seven_segment_enable_bin(4), seven_seg_1.seven_segment_pins(8)
      +, seven_seg_1(15), 
  1383 ;; Auto vars:     Size  Location     Type
  1384 ;;  LocalReturn     1    8[COMRAM] unsigned char 
  1385 ;; Return value:  Size  Location     Type
  1386 ;;                  1    wreg      unsigned char 
  1387 ;; Registers used:
  1388 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1389 ;; Tracked objects:
  1390 ;;		On entry : 0/0
  1391 ;;		On exit  : 0/0
  1392 ;;		Unchanged: 0/0
  1393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1394 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1395 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1396 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1397 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1398 ;;Total ram usage:        9 bytes
  1399 ;; Hardware stack levels used:    1
  1400 ;; This function calls:
  1401 ;;		Nothing
  1402 ;; This function is called by:
  1403 ;;		_seven_segment_initialize
  1404 ;;		_button_initialize
  1405 ;;		_motor_initialize
  1406 ;;		_gpio_pin_intialize
  1407 ;; This function uses a non-reentrant model
  1408 ;;
  1409                           
  1410                           	psect	text7
  1411  00FD32                     __ptext7:
  1412                           	opt stack 0
  1413  00FD32                     _gpio_pin_direction_intialize:
  1414                           	opt stack 28
  1415                           
  1416                           ;hal_gpio.c: 17: Std_ReturnType LocalReturn=(Std_ReturnType)0x00;
  1417                           
  1418                           ;incstack = 0
  1419  00FD32  0E00               	movlw	0
  1420  00FD34  6E38               	movwf	gpio_pin_direction_intialize@LocalReturn,c
  1421                           
  1422                           ;hal_gpio.c: 18: if(_pin_config==(0)){
  1423  00FD36  5030               	movf	gpio_pin_direction_intialize@_pin_config,w,c
  1424  00FD38  1031               	iorwf	gpio_pin_direction_intialize@_pin_config+1,w,c
  1425  00FD3A  A4D8               	btfss	status,2,c
  1426  00FD3C  D05A               	goto	l1762
  1427                           
  1428                           ;hal_gpio.c: 19: LocalReturn=(Std_ReturnType)0x00;
  1429  00FD3E  0E00               	movlw	0
  1430  00FD40  D029               	goto	L1
  1431  00FD42                     l1752:
  1432                           
  1433                           ;hal_gpio.c: 23: (*tris_register[_pin_config->port] |= ((uint8)1 << _pin_config->pin));
  1434  00FD42  C030  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  1435  00FD46  C031  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  1436  00FD4A  38DF               	swapf	indf2,w,c
  1437  00FD4C  0B07               	andlw	7
  1438  00FD4E  6E32               	movwf	??_gpio_pin_direction_intialize& (0+255),c
  1439  00FD50  0E01               	movlw	1
  1440  00FD52  6E33               	movwf	(??_gpio_pin_direction_intialize+1)& (0+255),c
  1441  00FD54  2A32               	incf	??_gpio_pin_direction_intialize,f,c
  1442  00FD56  D002               	goto	u934
  1443  00FD58                     u935:
  1444  00FD58  90D8               	bcf	status,0,c
  1445  00FD5A  3633               	rlcf	??_gpio_pin_direction_intialize+1,f,c
  1446  00FD5C                     u934:
  1447  00FD5C  2E32               	decfsz	??_gpio_pin_direction_intialize,f,c
  1448  00FD5E  D7FC               	goto	u935
  1449  00FD60  C030  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  1450  00FD64  C031  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  1451  00FD68  50DF               	movf	indf2,w,c
  1452  00FD6A  0B0F               	andlw	15
  1453  00FD6C  6E34               	movwf	(??_gpio_pin_direction_intialize+2)& (0+255),c
  1454  00FD6E  5034               	movf	??_gpio_pin_direction_intialize+2,w,c
  1455  00FD70  0D02               	mullw	2
  1456  00FD72  0E15               	movlw	low _tris_register
  1457  00FD74  24F3               	addwf	prodl,w,c
  1458  00FD76  6ED9               	movwf	fsr2l,c
  1459  00FD78  0E00               	movlw	high _tris_register
  1460  00FD7A  20F4               	addwfc	prodh,w,c
  1461  00FD7C  6EDA               	movwf	fsr2h,c
  1462  00FD7E  CFDE F035          	movff	postinc2,??_gpio_pin_direction_intialize+3
  1463  00FD82  CFDD F036          	movff	postdec2,??_gpio_pin_direction_intialize+4
  1464  00FD86  C035  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
  1465  00FD8A  C036  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
  1466  00FD8E  5033               	movf	??_gpio_pin_direction_intialize+1,w,c
  1467  00FD90  12DF               	iorwf	indf2,f,c
  1468  00FD92  D02D               	goto	l1758
  1469  00FD94                     L1:
  1470  00FD94  6E38               	movwf	gpio_pin_direction_intialize@LocalReturn,c
  1471                           
  1472                           ;hal_gpio.c: 25: break;
  1473  00FD96  D03C               	goto	l1764
  1474  00FD98                     l1756:
  1475                           
  1476                           ;hal_gpio.c: 27: (*tris_register[_pin_config->port] &= ~((uint8)1 << _pin_config->pin));
  1477  00FD98  C030  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  1478  00FD9C  C031  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  1479  00FDA0  38DF               	swapf	indf2,w,c
  1480  00FDA2  0B07               	andlw	7
  1481  00FDA4  6E32               	movwf	??_gpio_pin_direction_intialize& (0+255),c
  1482  00FDA6  0E01               	movlw	1
  1483  00FDA8  6E33               	movwf	(??_gpio_pin_direction_intialize+1)& (0+255),c
  1484  00FDAA  2A32               	incf	??_gpio_pin_direction_intialize,f,c
  1485  00FDAC  D002               	goto	u944
  1486  00FDAE                     u945:
  1487  00FDAE  90D8               	bcf	status,0,c
  1488  00FDB0  3633               	rlcf	??_gpio_pin_direction_intialize+1,f,c
  1489  00FDB2                     u944:
  1490  00FDB2  2E32               	decfsz	??_gpio_pin_direction_intialize,f,c
  1491  00FDB4  D7FC               	goto	u945
  1492  00FDB6  5033               	movf	??_gpio_pin_direction_intialize+1,w,c
  1493  00FDB8  0AFF               	xorlw	255
  1494  00FDBA  6E34               	movwf	(??_gpio_pin_direction_intialize+2)& (0+255),c
  1495  00FDBC  C030  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  1496  00FDC0  C031  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  1497  00FDC4  50DF               	movf	indf2,w,c
  1498  00FDC6  0B0F               	andlw	15
  1499  00FDC8  6E35               	movwf	(??_gpio_pin_direction_intialize+3)& (0+255),c
  1500  00FDCA  5035               	movf	??_gpio_pin_direction_intialize+3,w,c
  1501  00FDCC  0D02               	mullw	2
  1502  00FDCE  0E15               	movlw	low _tris_register
  1503  00FDD0  24F3               	addwf	prodl,w,c
  1504  00FDD2  6ED9               	movwf	fsr2l,c
  1505  00FDD4  0E00               	movlw	high _tris_register
  1506  00FDD6  20F4               	addwfc	prodh,w,c
  1507  00FDD8  6EDA               	movwf	fsr2h,c
  1508  00FDDA  CFDE F036          	movff	postinc2,??_gpio_pin_direction_intialize+4
  1509  00FDDE  CFDD F037          	movff	postdec2,??_gpio_pin_direction_intialize+5
  1510  00FDE2  C036  FFD9         	movff	??_gpio_pin_direction_intialize+4,fsr2l
  1511  00FDE6  C037  FFDA         	movff	??_gpio_pin_direction_intialize+5,fsr2h
  1512  00FDEA  5034               	movf	??_gpio_pin_direction_intialize+2,w,c
  1513  00FDEC  16DF               	andwf	indf2,f,c
  1514  00FDEE                     l1758:
  1515                           
  1516                           ;hal_gpio.c: 28: LocalReturn=(Std_ReturnType)0x01;
  1517  00FDEE  0E01               	movlw	1
  1518  00FDF0  D7D1               	goto	L1
  1519  00FDF2                     l1762:
  1520  00FDF2  C030  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  1521  00FDF6  C031  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  1522  00FDFA  AEDF               	btfss	indf2,7,c
  1523  00FDFC  D002               	goto	u950
  1524  00FDFE  0E01               	movlw	1
  1525  00FE00  D001               	goto	u956
  1526  00FE02                     u950:
  1527  00FE02  0E00               	movlw	0
  1528  00FE04                     u956:
  1529                           
  1530                           ; Switch size 1, requested type "space"
  1531                           ; Number of cases is 2, Range of values is 0 to 1
  1532                           ; switch strategies available:
  1533                           ; Name         Instructions Cycles
  1534                           ; simple_byte            7     4 (average)
  1535                           ;	Chosen strategy is simple_byte
  1536  00FE04  0A00               	xorlw	0	; case 0
  1537  00FE06  B4D8               	btfsc	status,2,c
  1538  00FE08  D7C7               	goto	l1756
  1539  00FE0A  0A01               	xorlw	1	; case 1
  1540  00FE0C  B4D8               	btfsc	status,2,c
  1541  00FE0E  D799               	goto	l1752
  1542  00FE10                     l1764:
  1543                           
  1544                           ;hal_gpio.c: 31: }
  1545                           ;hal_gpio.c: 32: return LocalReturn;
  1546  00FE10  5038               	movf	gpio_pin_direction_intialize@LocalReturn,w,c
  1547  00FE12  0012               	return	
  1548  00FE14                     __end_of_gpio_pin_direction_intialize:
  1549                           	opt stack 0
  1550                           tblptru	equ	0xFF8
  1551                           tblptrh	equ	0xFF7
  1552                           tblptrl	equ	0xFF6
  1553                           tablat	equ	0xFF5
  1554                           prodh	equ	0xFF4
  1555                           prodl	equ	0xFF3
  1556                           postinc0	equ	0xFEE
  1557                           wreg	equ	0xFE8
  1558                           postdec1	equ	0xFE5
  1559                           fsr1l	equ	0xFE1
  1560                           indf2	equ	0xFDF
  1561                           postinc2	equ	0xFDE
  1562                           postdec2	equ	0xFDD
  1563                           fsr2h	equ	0xFDA
  1564                           fsr2l	equ	0xFD9
  1565                           status	equ	0xFD8
  1566                           
  1567 ;; *************** function ___awmod *****************
  1568 ;; Defined at:
  1569 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\awmod.c"
  1570 ;; Parameters:    Size  Location     Type
  1571 ;;  dividend        2    0[COMRAM] int 
  1572 ;;  divisor         2    2[COMRAM] int 
  1573 ;; Auto vars:     Size  Location     Type
  1574 ;;  sign            1    5[COMRAM] unsigned char 
  1575 ;;  counter         1    4[COMRAM] unsigned char 
  1576 ;; Return value:  Size  Location     Type
  1577 ;;                  2    0[COMRAM] int 
  1578 ;; Registers used:
  1579 ;;		wreg, status,2, status,0
  1580 ;; Tracked objects:
  1581 ;;		On entry : 0/0
  1582 ;;		On exit  : 0/0
  1583 ;;		Unchanged: 0/0
  1584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1585 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1586 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1588 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1589 ;;Total ram usage:        6 bytes
  1590 ;; Hardware stack levels used:    1
  1591 ;; This function calls:
  1592 ;;		Nothing
  1593 ;; This function is called by:
  1594 ;;		_main
  1595 ;; This function uses a non-reentrant model
  1596 ;;
  1597                           
  1598                           	psect	text8
  1599  00FA32                     __ptext8:
  1600                           	opt stack 0
  1601  00FA32                     ___awmod:
  1602                           	opt stack 30
  1603                           
  1604                           ;incstack = 0
  1605  00FA32  0E00               	movlw	0
  1606  00FA34  6E35               	movwf	___awmod@sign,c
  1607  00FA36  AE31               	btfss	___awmod@dividend+1,7,c
  1608  00FA38  D006               	goto	l1936
  1609  00FA3A  6C30               	negf	___awmod@dividend,c
  1610  00FA3C  1E31               	comf	___awmod@dividend+1,f,c
  1611  00FA3E  B0D8               	btfsc	status,0,c
  1612  00FA40  2A31               	incf	___awmod@dividend+1,f,c
  1613  00FA42  0E01               	movlw	1
  1614  00FA44  6E35               	movwf	___awmod@sign,c
  1615  00FA46                     l1936:
  1616  00FA46  AE33               	btfss	___awmod@divisor+1,7,c
  1617  00FA48  D004               	goto	l1940
  1618  00FA4A  6C32               	negf	___awmod@divisor,c
  1619  00FA4C  1E33               	comf	___awmod@divisor+1,f,c
  1620  00FA4E  B0D8               	btfsc	status,0,c
  1621  00FA50  2A33               	incf	___awmod@divisor+1,f,c
  1622  00FA52                     l1940:
  1623  00FA52  5032               	movf	___awmod@divisor,w,c
  1624  00FA54  1033               	iorwf	___awmod@divisor+1,w,c
  1625  00FA56  B4D8               	btfsc	status,2,c
  1626  00FA58  D018               	goto	l1956
  1627  00FA5A  0E01               	movlw	1
  1628  00FA5C  6E34               	movwf	___awmod@counter,c
  1629  00FA5E  D004               	goto	l1946
  1630  00FA60                     l1944:
  1631  00FA60  90D8               	bcf	status,0,c
  1632  00FA62  3632               	rlcf	___awmod@divisor,f,c
  1633  00FA64  3633               	rlcf	___awmod@divisor+1,f,c
  1634  00FA66  2A34               	incf	___awmod@counter,f,c
  1635  00FA68                     l1946:
  1636  00FA68  AE33               	btfss	___awmod@divisor+1,7,c
  1637  00FA6A  D7FA               	goto	l1944
  1638  00FA6C                     l1948:
  1639  00FA6C  5032               	movf	___awmod@divisor,w,c
  1640  00FA6E  5C30               	subwf	___awmod@dividend,w,c
  1641  00FA70  5033               	movf	___awmod@divisor+1,w,c
  1642  00FA72  5831               	subwfb	___awmod@dividend+1,w,c
  1643  00FA74  A0D8               	btfss	status,0,c
  1644  00FA76  D004               	goto	l1952
  1645  00FA78  5032               	movf	___awmod@divisor,w,c
  1646  00FA7A  5E30               	subwf	___awmod@dividend,f,c
  1647  00FA7C  5033               	movf	___awmod@divisor+1,w,c
  1648  00FA7E  5A31               	subwfb	___awmod@dividend+1,f,c
  1649  00FA80                     l1952:
  1650  00FA80  90D8               	bcf	status,0,c
  1651  00FA82  3233               	rrcf	___awmod@divisor+1,f,c
  1652  00FA84  3232               	rrcf	___awmod@divisor,f,c
  1653  00FA86  2E34               	decfsz	___awmod@counter,f,c
  1654  00FA88  D7F1               	goto	l1948
  1655  00FA8A                     l1956:
  1656  00FA8A  5035               	movf	___awmod@sign,w,c
  1657  00FA8C  B4D8               	btfsc	status,2,c
  1658  00FA8E  D004               	goto	l1960
  1659  00FA90  6C30               	negf	___awmod@dividend,c
  1660  00FA92  1E31               	comf	___awmod@dividend+1,f,c
  1661  00FA94  B0D8               	btfsc	status,0,c
  1662  00FA96  2A31               	incf	___awmod@dividend+1,f,c
  1663  00FA98                     l1960:
  1664  00FA98  C030  F030         	movff	___awmod@dividend,?___awmod
  1665  00FA9C  C031  F031         	movff	___awmod@dividend+1,?___awmod+1
  1666  00FAA0  0012               	return	
  1667  00FAA2                     __end_of___awmod:
  1668                           	opt stack 0
  1669                           tblptru	equ	0xFF8
  1670                           tblptrh	equ	0xFF7
  1671                           tblptrl	equ	0xFF6
  1672                           tablat	equ	0xFF5
  1673                           prodh	equ	0xFF4
  1674                           prodl	equ	0xFF3
  1675                           postinc0	equ	0xFEE
  1676                           wreg	equ	0xFE8
  1677                           postdec1	equ	0xFE5
  1678                           fsr1l	equ	0xFE1
  1679                           indf2	equ	0xFDF
  1680                           postinc2	equ	0xFDE
  1681                           postdec2	equ	0xFDD
  1682                           fsr2h	equ	0xFDA
  1683                           fsr2l	equ	0xFD9
  1684                           status	equ	0xFD8
  1685                           
  1686 ;; *************** function ___awdiv *****************
  1687 ;; Defined at:
  1688 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.41\sources\common\awdiv.c"
  1689 ;; Parameters:    Size  Location     Type
  1690 ;;  dividend        2    0[COMRAM] int 
  1691 ;;  divisor         2    2[COMRAM] int 
  1692 ;; Auto vars:     Size  Location     Type
  1693 ;;  quotient        2    6[COMRAM] int 
  1694 ;;  sign            1    5[COMRAM] unsigned char 
  1695 ;;  counter         1    4[COMRAM] unsigned char 
  1696 ;; Return value:  Size  Location     Type
  1697 ;;                  2    0[COMRAM] int 
  1698 ;; Registers used:
  1699 ;;		wreg, status,2, status,0
  1700 ;; Tracked objects:
  1701 ;;		On entry : 0/0
  1702 ;;		On exit  : 0/0
  1703 ;;		Unchanged: 0/0
  1704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1705 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1706 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1708 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1709 ;;Total ram usage:        8 bytes
  1710 ;; Hardware stack levels used:    1
  1711 ;; This function calls:
  1712 ;;		Nothing
  1713 ;; This function is called by:
  1714 ;;		_main
  1715 ;; This function uses a non-reentrant model
  1716 ;;
  1717                           
  1718                           	psect	text9
  1719  00FC06                     __ptext9:
  1720                           	opt stack 0
  1721  00FC06                     ___awdiv:
  1722                           	opt stack 30
  1723                           
  1724                           ;incstack = 0
  1725  00FC06  0E00               	movlw	0
  1726  00FC08  6E35               	movwf	___awdiv@sign,c
  1727  00FC0A  AE33               	btfss	___awdiv@divisor+1,7,c
  1728  00FC0C  D006               	goto	l1892
  1729  00FC0E  6C32               	negf	___awdiv@divisor,c
  1730  00FC10  1E33               	comf	___awdiv@divisor+1,f,c
  1731  00FC12  B0D8               	btfsc	status,0,c
  1732  00FC14  2A33               	incf	___awdiv@divisor+1,f,c
  1733  00FC16  0E01               	movlw	1
  1734  00FC18  6E35               	movwf	___awdiv@sign,c
  1735  00FC1A                     l1892:
  1736  00FC1A  AE31               	btfss	___awdiv@dividend+1,7,c
  1737  00FC1C  D006               	goto	l1898
  1738  00FC1E  6C30               	negf	___awdiv@dividend,c
  1739  00FC20  1E31               	comf	___awdiv@dividend+1,f,c
  1740  00FC22  B0D8               	btfsc	status,0,c
  1741  00FC24  2A31               	incf	___awdiv@dividend+1,f,c
  1742  00FC26  0E01               	movlw	1
  1743  00FC28  1A35               	xorwf	___awdiv@sign,f,c
  1744  00FC2A                     l1898:
  1745  00FC2A  0E00               	movlw	0
  1746  00FC2C  6E37               	movwf	___awdiv@quotient+1,c
  1747  00FC2E  0E00               	movlw	0
  1748  00FC30  6E36               	movwf	___awdiv@quotient,c
  1749  00FC32  5032               	movf	___awdiv@divisor,w,c
  1750  00FC34  1033               	iorwf	___awdiv@divisor+1,w,c
  1751  00FC36  B4D8               	btfsc	status,2,c
  1752  00FC38  D01C               	goto	l1920
  1753  00FC3A  0E01               	movlw	1
  1754  00FC3C  6E34               	movwf	___awdiv@counter,c
  1755  00FC3E  D004               	goto	l1906
  1756  00FC40                     l1904:
  1757  00FC40  90D8               	bcf	status,0,c
  1758  00FC42  3632               	rlcf	___awdiv@divisor,f,c
  1759  00FC44  3633               	rlcf	___awdiv@divisor+1,f,c
  1760  00FC46  2A34               	incf	___awdiv@counter,f,c
  1761  00FC48                     l1906:
  1762  00FC48  AE33               	btfss	___awdiv@divisor+1,7,c
  1763  00FC4A  D7FA               	goto	l1904
  1764  00FC4C                     l1908:
  1765  00FC4C  90D8               	bcf	status,0,c
  1766  00FC4E  3636               	rlcf	___awdiv@quotient,f,c
  1767  00FC50  3637               	rlcf	___awdiv@quotient+1,f,c
  1768  00FC52  5032               	movf	___awdiv@divisor,w,c
  1769  00FC54  5C30               	subwf	___awdiv@dividend,w,c
  1770  00FC56  5033               	movf	___awdiv@divisor+1,w,c
  1771  00FC58  5831               	subwfb	___awdiv@dividend+1,w,c
  1772  00FC5A  A0D8               	btfss	status,0,c
  1773  00FC5C  D005               	goto	l1916
  1774  00FC5E  5032               	movf	___awdiv@divisor,w,c
  1775  00FC60  5E30               	subwf	___awdiv@dividend,f,c
  1776  00FC62  5033               	movf	___awdiv@divisor+1,w,c
  1777  00FC64  5A31               	subwfb	___awdiv@dividend+1,f,c
  1778  00FC66  8036               	bsf	___awdiv@quotient,0,c
  1779  00FC68                     l1916:
  1780  00FC68  90D8               	bcf	status,0,c
  1781  00FC6A  3233               	rrcf	___awdiv@divisor+1,f,c
  1782  00FC6C  3232               	rrcf	___awdiv@divisor,f,c
  1783  00FC6E  2E34               	decfsz	___awdiv@counter,f,c
  1784  00FC70  D7ED               	goto	l1908
  1785  00FC72                     l1920:
  1786  00FC72  5035               	movf	___awdiv@sign,w,c
  1787  00FC74  B4D8               	btfsc	status,2,c
  1788  00FC76  D004               	goto	l1924
  1789  00FC78  6C36               	negf	___awdiv@quotient,c
  1790  00FC7A  1E37               	comf	___awdiv@quotient+1,f,c
  1791  00FC7C  B0D8               	btfsc	status,0,c
  1792  00FC7E  2A37               	incf	___awdiv@quotient+1,f,c
  1793  00FC80                     l1924:
  1794  00FC80  C036  F030         	movff	___awdiv@quotient,?___awdiv
  1795  00FC84  C037  F031         	movff	___awdiv@quotient+1,?___awdiv+1
  1796  00FC88  0012               	return	
  1797  00FC8A                     __end_of___awdiv:
  1798                           	opt stack 0
  1799  0000                     tblptru	equ	0xFF8
  1800                           tblptrh	equ	0xFF7
  1801                           tblptrl	equ	0xFF6
  1802                           tablat	equ	0xFF5
  1803                           prodh	equ	0xFF4
  1804                           prodl	equ	0xFF3
  1805                           postinc0	equ	0xFEE
  1806                           wreg	equ	0xFE8
  1807                           postdec1	equ	0xFE5
  1808                           fsr1l	equ	0xFE1
  1809                           indf2	equ	0xFDF
  1810                           postinc2	equ	0xFDE
  1811                           postdec2	equ	0xFDD
  1812                           fsr2h	equ	0xFDA
  1813                           fsr2l	equ	0xFD9
  1814                           status	equ	0xFD8
  1815                           tblptru	equ	0xFF8
  1816                           tblptrh	equ	0xFF7
  1817                           tblptrl	equ	0xFF6
  1818                           tablat	equ	0xFF5
  1819                           prodh	equ	0xFF4
  1820                           prodl	equ	0xFF3
  1821                           postinc0	equ	0xFEE
  1822                           wreg	equ	0xFE8
  1823                           postdec1	equ	0xFE5
  1824                           fsr1l	equ	0xFE1
  1825                           indf2	equ	0xFDF
  1826                           postinc2	equ	0xFDE
  1827                           postdec2	equ	0xFDD
  1828                           fsr2h	equ	0xFDA
  1829                           fsr2l	equ	0xFD9
  1830                           status	equ	0xFD8
  1831                           
  1832                           	psect	rparam
  1833  0000                     tblptru	equ	0xFF8
  1834                           tblptrh	equ	0xFF7
  1835                           tblptrl	equ	0xFF6
  1836                           tablat	equ	0xFF5
  1837                           prodh	equ	0xFF4
  1838                           prodl	equ	0xFF3
  1839                           postinc0	equ	0xFEE
  1840                           wreg	equ	0xFE8
  1841                           postdec1	equ	0xFE5
  1842                           fsr1l	equ	0xFE1
  1843                           indf2	equ	0xFDF
  1844                           postinc2	equ	0xFDE
  1845                           postdec2	equ	0xFDD
  1846                           fsr2h	equ	0xFDA
  1847                           fsr2l	equ	0xFD9
  1848                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        47
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     23      71
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    seven_segment_disable@seven_segment_obj	PTR struct . size(2) Largest target is 15
		 -> seven_seg_1(COMRAM[15]), 

    seven_segment_enable@seven_segment_obj	PTR struct . size(2) Largest target is 15
		 -> seven_seg_1(COMRAM[15]), 

    seven_segment_write_number@seven_segment_obj	PTR struct . size(2) Largest target is 15
		 -> seven_seg_1(COMRAM[15]), 

    seven_segment_initialize@seven_segment_obj	PTR struct . size(2) Largest target is 15
		 -> seven_seg_1(COMRAM[15]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(2) Largest target is 15
		 -> seven_seg_1.seven_segment_enable_bin(COMRAM[4]), seven_seg_1.seven_segment_pins(COMRAM[8]), seven_seg_1(COMRAM[15]), 

    gpio_pin_direction_intialize@_pin_config	PTR const struct . size(2) Largest target is 15
		 -> seven_seg_1.seven_segment_dot_pin(COMRAM[2]), seven_seg_1.seven_segment_enable_bin(COMRAM[4]), seven_seg_1.seven_segment_pins(COMRAM[8]), seven_seg_1(COMRAM[15]), 

    lat_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(SFR[1]), LATD(SFR[1]), LATC(SFR[1]), LATB(SFR[1]), 
		 -> LATA(SFR[1]), 

    port_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(SFR[1]), PORTD(SFR[1]), PORTC(SFR[1]), PORTB(SFR[1]), 
		 -> PORTA(SFR[1]), 

    tris_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(SFR[1]), TRISD(SFR[1]), TRISC(SFR[1]), TRISB(SFR[1]), 
		 -> TRISA(SFR[1]), 


Critical Paths under _main in COMRAM

    _seven_segment_write_number->_gpio_pin_write_logic
    _seven_segment_enable->_gpio_pin_write_logic
    _seven_segment_disable->_gpio_pin_write_logic
    _functionInitialize->_seven_segment_initialize
    _seven_segment_initialize->_gpio_pin_direction_intialize

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   13440
                                             18 COMRAM     5     5      0
                            ___awdiv
                            ___awmod
                 _functionInitialize
              _seven_segment_disable
               _seven_segment_enable
         _seven_segment_write_number
 ---------------------------------------------------------------------------------
 (1) _seven_segment_write_number                           4     1      3    3893
                                             10 COMRAM     4     1      3
                            ___awdiv (ARG)
                            ___awmod (ARG)
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _seven_segment_enable                                 4     1      3    3828
                                             10 COMRAM     4     1      3
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _seven_segment_disable                                4     1      3    3828
                                             10 COMRAM     4     1      3
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_write_logic                                10     7      3    3408
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (1) _functionInitialize                                   0     0      0     903
           _seven_segment_initialize
 ---------------------------------------------------------------------------------
 (2) _seven_segment_initialize                             9     7      2     903
                                              9 COMRAM     9     7      2
       _gpio_pin_direction_intialize
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_intialize                         9     7      2     606
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     424
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     428
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod
   _functionInitialize
     _seven_segment_initialize
       _gpio_pin_direction_intialize
   _seven_segment_disable
     _gpio_pin_write_logic
   _seven_segment_enable
     _gpio_pin_write_logic
   _seven_segment_write_number
     ___awdiv (ARG)
     ___awmod (ARG)
     _gpio_pin_write_logic (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     17      47       1       55.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      47      34        0.0%
DATA                 0      0      47       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Wed Sep 20 21:33:45 2023

                               ___awdiv@sign 0035                                  __CFG_BORV$1 000000  
                               __CFG_CP0$OFF 000000                                 __CFG_CP1$OFF 000000  
                               __CFG_CP2$OFF 000000                         _seven_segment_enable FB16  
                               __CFG_CP3$OFF 000000                                  __CFG_OSC$HS 000000  
                               __CFG_CPB$OFF 000000                                 __CFG_CPD$OFF 000000  
                                        u950 FE02                                          u934 FD5C  
                                        u935 FD58                                          u944 FDB2  
                                        u945 FDAE                                          u956 FE04  
                               ___awmod@sign 0035                                          prod 000FF3  
                                        wreg 000FE8                  ?_seven_segment_write_number 003A  
                      _seven_segment_disable FAA2                                 __CFG_LVP$OFF 000000  
           seven_segment_enable@Local_Status 003D                                 __CFG_WDT$OFF 000000  
                                       l2100 FEF2                                         l2082 FE30  
                                       l2084 FE38                                         l2076 FE18  
                                       l2078 FE20                                         l1800 FCA4  
                                       l2088 FE48                                         l1810 FCD8  
                                       l1812 FCE0                                         l1804 FCB4  
                                       l1822 FD1C                                         l1904 FC40  
                                       l1920 FC72                                         l1752 FD42  
                                       l1816 FCF0                                         l1906 FC48  
                                       l1762 FDF2                                         l1924 FC80  
                                       l1916 FC68                                         l1908 FC4C  
                                       l1940 FA52                                         l1756 FD98  
                                       l1764 FE10                                         l1780 FF3E  
                                       l1844 FB64                                         l1836 FB28  
                                       l1758 FDEE                                         l1790 FFF0  
                                       l1838 FB2E                                         l1960 FA98  
                                       l1952 FA80                                         l1944 FA60  
                                       l1936 FA46                                         l1784 FF94  
                                       l1864 FAF0                                         l1856 FAB4  
                                       l1946 FA68                                         l1778 FF38  
                                       l1858 FABA                                         l1892 FC1A  
                                       l1948 FA6C                                         l1956 FA8A  
                                       l1876 FB9C                                         l1798 FC9C  
                                       l1878 FBA2                                         l1898 FC2A  
                                       u1004 FF58                                         u1005 FF54  
                                       u1014 FFAE                                         u1015 FFAA  
                                       _LATA 000F89                                         _LATB 000F8A  
                                       _LATC 000F8B                                         _LATD 000F8C  
                                       _LATE 000F8D                                         u1447 FE92  
                                       u1457 FEE4                                         _main FE14  
                                       fsr2h 000FDA                                         indf2 000FDF  
                                       fsr1l 000FE1                                         fsr2l 000FD9  
                                       prodh 000FF4                                         prodl 000FF3  
                                       start 0000                                __CFG_IESO$OFF 000000  
                              __CFG_MCLRE$ON 000000                                 ___param_bank 000000  
                       _gpio_pin_write_logic FEF8                        ?_seven_segment_enable 003A  
                                      ?_main 0030                              __end_of___awdiv FC8A  
                            __end_of___awmod FAA2                              ___awdiv@divisor 0032  
                            ___awdiv@counter 0034                                        _PORTA 000F80  
                                      _PORTB 000F81                                        _PORTC 000F82  
                                      _PORTD 000F83                                        _PORTE 000F84  
                                      _TRISA 000F92                                        _TRISB 000F93  
                                      _TRISC 000F94                                        _TRISD 000F95  
                                      _TRISE 000F96                                __CFG_PWRT$OFF 000000  
                              __CFG_WRT0$OFF 000000                                __CFG_WRT1$OFF 000000  
                              __CFG_WRT2$OFF 000000                                __CFG_WRT3$OFF 000000  
                             __CFG_EBTR0$OFF 000000                               __CFG_FCMEN$OFF 000000  
                             __CFG_EBTR1$OFF 000000                               __CFG_EBTR2$OFF 000000  
                             __CFG_EBTR3$OFF 000000                                __CFG_WRTB$OFF 000000  
                              __CFG_WRTC$OFF 000000                                __CFG_WRTD$OFF 000000  
                             __CFG_EBTRB$OFF 000000                                        _hours 001F  
                                      main@i 0045                                        main@j 0043  
                             __CFG_BOREN$OFF 000000                                        tablat 000FF5  
                                      status 000FD8                              __initialization F9D6  
                               __end_of_main FEF8                        ?_gpio_pin_write_logic 0030  
                                     ??_main 0042                                __activetblptr 000002  
          seven_segment_enable@segment_Index 003C                       ?_seven_segment_disable 003A  
                           ___awdiv@dividend 0030  seven_segment_write_number@seven_segment_obj 003A  
                              _tris_register 0015                  __size_of_functionInitialize 000E  
                             __CFG_XINST$OFF 000000                                    ??___awdiv 0034  
                             __CFG_STVREN$ON 000000                                    ??___awmod 0034  
                     ??_seven_segment_enable 003D                             ___awdiv@quotient 0036  
                            ___awmod@divisor 0032                              ___awmod@counter 0034  
    gpio_pin_direction_intialize@_pin_config 0030                                 __pdataCOMRAM 0001  
                                     tblptrh 000FF7                                       tblptrl 000FF6  
                                     tblptru 000FF8                                   __accesstop 0080  
                    __end_of__initialization F9F8                              __CFG_PBADEN$OFF 000000  
              seven_segment_initialize@i_559 0040                                ___rparam_used 000001  
                     ??_gpio_pin_write_logic 0033                               __pcstackCOMRAM 0030  
            gpio_pin_write_logic@LocalReturn 0039                    seven_segment_initialize@i 003E  
      seven_segment_enable@seven_segment_obj 003A                     _seven_segment_initialize FC8A  
                                    __Hparam 0000                                      __Lparam 0000  
                                    ___awdiv FC06                                      ___awmod FA32  
                                    __pcinit F9D6                                      __ramtop 1000  
                                    __ptext0 FE14                                      __ptext1 FB8A  
                                    __ptext2 FB16                                      __ptext3 FAA2  
                                    __ptext4 FEF8                                      __ptext5 F9C8  
                                    __ptext6 FC8A                                      __ptext7 FD32  
                                    __ptext8 FA32                                      __ptext9 FC06  
                    ??_seven_segment_disable 003D                             ___awmod@dividend 0030  
                                    _minutes 0020                                      _seconds 0047  
                       end_of_initialization F9F8                                __Lmediumconst 0000  
                                    postdec1 000FE5                                      postdec2 000FDD  
                                    postinc0 000FEE                                      postinc2 000FDE  
       __end_of_gpio_pin_direction_intialize FE14        __size_of_gpio_pin_direction_intialize 00E2  
               _gpio_pin_direction_intialize FD32                   __end_of_functionInitialize F9D6  
                              __pidataCOMRAM FA03                __size_of_seven_segment_enable 0074  
                        start_initialization F9D6                 ??_seven_segment_write_number 003D  
              ?_gpio_pin_direction_intialize 0030                                 _lat_register 0001  
              __size_of_gpio_pin_write_logic 0108                   ??_seven_segment_initialize 003B  
                           __CFG_LPT1OSC$OFF 000000          __size_of_seven_segment_write_number 007C  
                                __pbssCOMRAM 0047                            __CFG_CCP2MX$PORTC 000000  
            gpio_pin_write_logic@_pin_config 0030                                     ?___awdiv 0030  
                                   ?___awmod 0030                    gpio_pin_write_logic@logic 0032  
             __size_of_seven_segment_disable 0074                __end_of_seven_segment_disable FB16  
             ??_gpio_pin_direction_intialize 0032                             __CFG_WDTPS$32768 000000  
     seven_segment_write_number@Local_Status 003D           __end_of_seven_segment_write_number FC06  
                 _seven_segment_write_number FB8A                                    copy_data0 F9EA  
                                   __Hrparam 0000                                     __Lrparam 0000  
           __end_of_seven_segment_initialize FD32                             __size_of___awdiv 0084  
                           __size_of___awmod 0070                           _functionInitialize F9C8  
                        ?_functionInitialize 0030      gpio_pin_direction_intialize@LocalReturn 0038  
               __end_of_seven_segment_enable FB8A                                __size_of_main 00E4  
  seven_segment_initialize@seven_segment_obj 0039                         ??_functionInitialize 0042  
           seven_segment_write_number@number 003C         seven_segment_initialize@Local_Status 003D  
               __end_of_gpio_pin_write_logic 0000            seven_segment_disable@Local_Status 003D  
                                _seven_seg_1 0021            __size_of_seven_segment_initialize 00A8  
         seven_segment_disable@segment_Index 003C                    ?_seven_segment_initialize 0039  
                              _port_register 000B       seven_segment_disable@seven_segment_obj 003A  
