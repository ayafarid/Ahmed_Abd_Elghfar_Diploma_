

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Mon Sep 18 17:34:30 2023

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18  0000                     
    19                           ; Version 1.41
    20                           ; Generated 25/01/2017 GMT
    21                           ; 
    22                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC18F4620 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     
    54                           	psect	idataCOMRAM
    55  00FCD4                     __pidataCOMRAM:
    56                           	opt stack 0
    57                           
    58                           ;initializer for _lat_register
    59  00FCD4  89                 	db	137
    60  00FCD5  0F                 	db	15
    61  00FCD6  8A                 	db	138
    62  00FCD7  0F                 	db	15
    63  00FCD8  8B                 	db	139
    64  00FCD9  0F                 	db	15
    65  00FCDA  8C                 	db	140
    66  00FCDB  0F                 	db	15
    67  00FCDC  8D                 	db	141
    68  00FCDD  0F                 	db	15
    69                           
    70                           ;initializer for _port_register
    71  00FCDE  80                 	db	128
    72  00FCDF  0F                 	db	15
    73  00FCE0  81                 	db	129
    74  00FCE1  0F                 	db	15
    75  00FCE2  82                 	db	130
    76  00FCE3  0F                 	db	15
    77  00FCE4  83                 	db	131
    78  00FCE5  0F                 	db	15
    79  00FCE6  84                 	db	132
    80  00FCE7  0F                 	db	15
    81                           
    82                           ;initializer for _tris_register
    83  00FCE8  92                 	db	146
    84  00FCE9  0F                 	db	15
    85  00FCEA  93                 	db	147
    86  00FCEB  0F                 	db	15
    87  00FCEC  94                 	db	148
    88  00FCED  0F                 	db	15
    89  00FCEE  95                 	db	149
    90  00FCEF  0F                 	db	15
    91  00FCF0  96                 	db	150
    92  00FCF1  0F                 	db	15
    93                           
    94                           ;initializer for _motorOne
    95  00FCF2  02                 	db	2
    96  00FCF3  00                 	db	0
    97  00FCF4  12                 	db	18
    98  00FCF5  01                 	db	1
    99  0000                     _LATE	set	3981
   100  0000                     _LATD	set	3980
   101  0000                     _LATC	set	3979
   102  0000                     _LATB	set	3978
   103  0000                     _LATA	set	3977
   104  0000                     _PORTE	set	3972
   105  0000                     _PORTD	set	3971
   106  0000                     _PORTC	set	3970
   107  0000                     _PORTB	set	3969
   108  0000                     _PORTA	set	3968
   109  0000                     _TRISE	set	3990
   110  0000                     _TRISD	set	3989
   111  0000                     _TRISC	set	3988
   112  0000                     _TRISB	set	3987
   113  0000                     _TRISA	set	3986
   114                           
   115                           ; #config settings
   116  0000                     
   117                           	psect	cinit
   118  00FCF6                     __pcinit:
   119                           	opt stack 0
   120  00FCF6                     start_initialization:
   121                           	opt stack 0
   122  00FCF6                     __initialization:
   123                           	opt stack 0
   124                           
   125                           ; Initialize objects allocated to COMRAM (34 bytes)
   126                           ; load TBLPTR registers with __pidataCOMRAM
   127  00FCF6  0ED4               	movlw	low __pidataCOMRAM
   128  00FCF8  6EF6               	movwf	tblptrl,c
   129  00FCFA  0EFC               	movlw	high __pidataCOMRAM
   130  00FCFC  6EF7               	movwf	tblptrh,c
   131  00FCFE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   132  00FD00  6EF8               	movwf	tblptru,c
   133  00FD02  EE00  F001         	lfsr	0,__pdataCOMRAM
   134  00FD06  EE10 F022          	lfsr	1,34
   135  00FD0A                     copy_data0:
   136  00FD0A  0009               	tblrd		*+
   137  00FD0C  CFF5 FFEE          	movff	tablat,postinc0
   138  00FD10  50E5               	movf	postdec1,w,c
   139  00FD12  50E1               	movf	fsr1l,w,c
   140  00FD14  E1FA               	bnz	copy_data0
   141  00FD16                     end_of_initialization:
   142                           	opt stack 0
   143  00FD16                     __end_of__initialization:
   144                           	opt stack 0
   145  00FD16  0E00               	movlw	low (__Lmediumconst shr (0+16))
   146  00FD18  6EF8               	movwf	tblptru,c
   147  00FD1A  0100               	movlb	0
   148  00FD1C  EFE6  F07E         	goto	_main	;jump to C main() function
   149                           tblptru	equ	0xFF8
   150                           tblptrh	equ	0xFF7
   151                           tblptrl	equ	0xFF6
   152                           tablat	equ	0xFF5
   153                           postinc0	equ	0xFEE
   154                           postdec1	equ	0xFE5
   155                           fsr1l	equ	0xFE1
   156                           
   157                           	psect	dataCOMRAM
   158  000001                     __pdataCOMRAM:
   159                           	opt stack 0
   160  000001                     _lat_register:
   161                           	opt stack 0
   162  000001                     	ds	10
   163  00000B                     _port_register:
   164                           	opt stack 0
   165  00000B                     	ds	10
   166  000015                     _tris_register:
   167                           	opt stack 0
   168  000015                     	ds	10
   169  00001F                     _motorOne:
   170                           	opt stack 0
   171  00001F                     	ds	4
   172                           tblptru	equ	0xFF8
   173                           tblptrh	equ	0xFF7
   174                           tblptrl	equ	0xFF6
   175                           tablat	equ	0xFF5
   176                           postinc0	equ	0xFEE
   177                           postdec1	equ	0xFE5
   178                           fsr1l	equ	0xFE1
   179                           
   180                           	psect	cstackCOMRAM
   181  000023                     __pcstackCOMRAM:
   182                           	opt stack 0
   183  000023                     gpio_pin_direction_intialize@_pin_config:
   184                           	opt stack 0
   185  000023                     gpio_pin_write_logic@_pin_config:
   186                           	opt stack 0
   187                           
   188                           ; 2 bytes @ 0x0
   189  000023                     	ds	2
   190  000025                     ??_gpio_pin_direction_intialize:
   191  000025                     gpio_pin_write_logic@logic:
   192                           	opt stack 0
   193                           
   194                           ; 1 bytes @ 0x2
   195  000025                     	ds	1
   196  000026                     ??_gpio_pin_write_logic:
   197                           
   198                           ; 1 bytes @ 0x3
   199  000026                     	ds	5
   200  00002B                     gpio_pin_direction_intialize@LocalReturn:
   201                           	opt stack 0
   202                           
   203                           ; 1 bytes @ 0x8
   204  00002B                     	ds	1
   205  00002C                     gpio_pin_write_logic@LocalReturn:
   206                           	opt stack 0
   207  00002C                     motor_initialize@motor_obj:
   208                           	opt stack 0
   209                           
   210                           ; 2 bytes @ 0x9
   211  00002C                     	ds	1
   212  00002D                     motor_turn_right@motor_obj:
   213                           	opt stack 0
   214  00002D                     motor_turn_left@motor_obj:
   215                           	opt stack 0
   216                           
   217                           ; 2 bytes @ 0xA
   218  00002D                     	ds	1
   219  00002E                     motor_initialize@Local_Status:
   220                           	opt stack 0
   221                           
   222                           ; 1 bytes @ 0xB
   223  00002E                     	ds	1
   224  00002F                     motor_turn_right@Local_Status:
   225                           	opt stack 0
   226  00002F                     motor_turn_left@Local_Status:
   227                           	opt stack 0
   228                           
   229                           ; 1 bytes @ 0xC
   230  00002F                     	ds	1
   231  000030                     ??_main:
   232                           
   233                           ; 1 bytes @ 0xD
   234  000030                     	ds	2
   235                           tblptru	equ	0xFF8
   236                           tblptrh	equ	0xFF7
   237                           tblptrl	equ	0xFF6
   238                           tablat	equ	0xFF5
   239                           postinc0	equ	0xFEE
   240                           postdec1	equ	0xFE5
   241                           fsr1l	equ	0xFE1
   242                           
   243 ;;
   244 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   245 ;;
   246 ;; *************** function _main *****************
   247 ;; Defined at:
   248 ;;		line 20 in file "application.c"
   249 ;; Parameters:    Size  Location     Type
   250 ;;		None
   251 ;; Auto vars:     Size  Location     Type
   252 ;;		None
   253 ;; Return value:  Size  Location     Type
   254 ;;                  2  348[None  ] int 
   255 ;; Registers used:
   256 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   257 ;; Tracked objects:
   258 ;;		On entry : 0/0
   259 ;;		On exit  : 0/0
   260 ;;		Unchanged: 0/0
   261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   264 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   265 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   266 ;;Total ram usage:        2 bytes
   267 ;; Hardware stack levels required when called:    3
   268 ;; This function calls:
   269 ;;		_functionInitialize
   270 ;;		_motor_turn_left
   271 ;;		_motor_turn_right
   272 ;; This function is called by:
   273 ;;		Startup code after reset
   274 ;; This function uses a non-reentrant model
   275 ;;
   276                           
   277                           	psect	text0
   278  00FDCC                     __ptext0:
   279                           	opt stack 0
   280  00FDCC                     _main:
   281                           	opt stack 28
   282                           
   283                           ;application.c: 21: functionInitialize();
   284                           
   285                           ;incstack = 0
   286  00FDCC  EC63  F07E         	call	_functionInitialize	;wreg free
   287  00FDD0                     l349:
   288                           
   289                           ;application.c: 23: motor_turn_right(&motorOne);
   290  00FDD0  0E1F               	movlw	low _motorOne
   291  00FDD2  6E2D               	movwf	motor_turn_right@motor_obj,c
   292  00FDD4  0E00               	movlw	high _motorOne
   293  00FDD6  6E2E               	movwf	motor_turn_right@motor_obj+1,c
   294  00FDD8  ECC8  F07E         	call	_motor_turn_right	;wreg free
   295                           
   296                           ;application.c: 24: _delay((unsigned long)((1000)*(4000000UL/4000.0)));
   297  00FDDC  0E06               	movlw	6
   298  00FDDE  6E31               	movwf	(??_main+1)& (0+255),c
   299  00FDE0  0E13               	movlw	19
   300  00FDE2  6E30               	movwf	??_main& (0+255),c
   301  00FDE4  0EAE               	movlw	174
   302  00FDE6                     u807:
   303  00FDE6  2EE8               	decfsz	wreg,f,c
   304  00FDE8  D7FE               	bra	u807
   305  00FDEA  2E30               	decfsz	??_main& (0+255),f,c
   306  00FDEC  D7FC               	bra	u807
   307  00FDEE  2E31               	decfsz	(??_main+1)& (0+255),f,c
   308  00FDF0  D7FA               	bra	u807
   309                           
   310                           ;application.c: 25: motor_turn_left(&motorOne);
   311  00FDF2  0E1F               	movlw	low _motorOne
   312  00FDF4  6E2D               	movwf	motor_turn_left@motor_obj,c
   313  00FDF6  0E00               	movlw	high _motorOne
   314  00FDF8  6E2E               	movwf	motor_turn_left@motor_obj+1,c
   315  00FDFA  ECAA  F07E         	call	_motor_turn_left	;wreg free
   316                           
   317                           ;application.c: 26: _delay((unsigned long)((1000)*(4000000UL/4000.0)));
   318  00FDFE  0E06               	movlw	6
   319  00FE00  6E31               	movwf	(??_main+1)& (0+255),c
   320  00FE02  0E13               	movlw	19
   321  00FE04  6E30               	movwf	??_main& (0+255),c
   322  00FE06  0EAE               	movlw	174
   323  00FE08                     u817:
   324  00FE08  2EE8               	decfsz	wreg,f,c
   325  00FE0A  D7FE               	bra	u817
   326  00FE0C  2E30               	decfsz	??_main& (0+255),f,c
   327  00FE0E  D7FC               	bra	u817
   328  00FE10  2E31               	decfsz	(??_main+1)& (0+255),f,c
   329  00FE12  D7FA               	bra	u817
   330  00FE14  D7DD               	goto	l349
   331  00FE16                     __end_of_main:
   332                           	opt stack 0
   333                           tblptru	equ	0xFF8
   334                           tblptrh	equ	0xFF7
   335                           tblptrl	equ	0xFF6
   336                           tablat	equ	0xFF5
   337                           postinc0	equ	0xFEE
   338                           wreg	equ	0xFE8
   339                           postdec1	equ	0xFE5
   340                           fsr1l	equ	0xFE1
   341                           
   342 ;; *************** function _motor_turn_right *****************
   343 ;; Defined at:
   344 ;;		line 34 in file "ECU_Layer/Motor_Driver/ecu_motor_prog.c"
   345 ;; Parameters:    Size  Location     Type
   346 ;;  motor_obj       2   10[COMRAM] PTR struct .
   347 ;;		 -> motorOne(4), 
   348 ;; Auto vars:     Size  Location     Type
   349 ;;  Local_Status    1   12[COMRAM] unsigned char 
   350 ;; Return value:  Size  Location     Type
   351 ;;                  1    wreg      unsigned char 
   352 ;; Registers used:
   353 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   354 ;; Tracked objects:
   355 ;;		On entry : 0/0
   356 ;;		On exit  : 0/0
   357 ;;		Unchanged: 0/0
   358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   359 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   360 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   362 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   363 ;;Total ram usage:        3 bytes
   364 ;; Hardware stack levels used:    1
   365 ;; Hardware stack levels required when called:    1
   366 ;; This function calls:
   367 ;;		_gpio_pin_write_logic
   368 ;; This function is called by:
   369 ;;		_main
   370 ;; This function uses a non-reentrant model
   371 ;;
   372                           
   373                           	psect	text1
   374  00FD90                     __ptext1:
   375                           	opt stack 0
   376  00FD90                     _motor_turn_right:
   377                           	opt stack 29
   378                           
   379                           ;ecu_motor_prog.c: 35: Std_ReturnType Local_Status=(Std_ReturnType)0x00;
   380                           
   381                           ;incstack = 0
   382  00FD90  0E00               	movlw	0
   383  00FD92  6E2F               	movwf	motor_turn_right@Local_Status,c
   384                           
   385                           ;ecu_motor_prog.c: 36: if(motor_obj==(0)){
   386  00FD94  502D               	movf	motor_turn_right@motor_obj,w,c
   387  00FD96  102E               	iorwf	motor_turn_right@motor_obj+1,w,c
   388  00FD98  A4D8               	btfss	status,2,c
   389  00FD9A  D003               	goto	l1479
   390                           
   391                           ;ecu_motor_prog.c: 37: Local_Status=(Std_ReturnType)0x00;
   392  00FD9C  0E00               	movlw	0
   393  00FD9E  6E2F               	movwf	motor_turn_right@Local_Status,c
   394                           
   395                           ;ecu_motor_prog.c: 38: }else{
   396  00FDA0  0012               	return	
   397  00FDA2                     l1479:
   398                           
   399                           ;ecu_motor_prog.c: 39: gpio_pin_write_logic(&motor_obj->pinRight,HIGH);
   400  00FDA2  C02D  F023         	movff	motor_turn_right@motor_obj,gpio_pin_write_logic@_pin_config
   401  00FDA6  C02E  F024         	movff	motor_turn_right@motor_obj+1,gpio_pin_write_logic@_pin_config+1
   402  00FDAA  0E01               	movlw	1
   403  00FDAC  6E25               	movwf	gpio_pin_write_logic@logic,c
   404  00FDAE  EC7C  F07F         	call	_gpio_pin_write_logic	;wreg free
   405                           
   406                           ;ecu_motor_prog.c: 40: gpio_pin_write_logic(&motor_obj->pinLeft,LOW);
   407  00FDB2  0E02               	movlw	2
   408  00FDB4  242D               	addwf	motor_turn_right@motor_obj,w,c
   409  00FDB6  6E23               	movwf	gpio_pin_write_logic@_pin_config,c
   410  00FDB8  0E00               	movlw	0
   411  00FDBA  202E               	addwfc	motor_turn_right@motor_obj+1,w,c
   412  00FDBC  6E24               	movwf	gpio_pin_write_logic@_pin_config+1,c
   413  00FDBE  0E00               	movlw	0
   414  00FDC0  6E25               	movwf	gpio_pin_write_logic@logic,c
   415  00FDC2  EC7C  F07F         	call	_gpio_pin_write_logic	;wreg free
   416                           
   417                           ;ecu_motor_prog.c: 41: Local_Status=(Std_ReturnType)0x01;
   418  00FDC6  0E01               	movlw	1
   419  00FDC8  6E2F               	movwf	motor_turn_right@Local_Status,c
   420  00FDCA  0012               	return	
   421  00FDCC                     __end_of_motor_turn_right:
   422                           	opt stack 0
   423                           tblptru	equ	0xFF8
   424                           tblptrh	equ	0xFF7
   425                           tblptrl	equ	0xFF6
   426                           tablat	equ	0xFF5
   427                           postinc0	equ	0xFEE
   428                           wreg	equ	0xFE8
   429                           postdec1	equ	0xFE5
   430                           fsr1l	equ	0xFE1
   431                           status	equ	0xFD8
   432                           
   433 ;; *************** function _motor_turn_left *****************
   434 ;; Defined at:
   435 ;;		line 52 in file "ECU_Layer/Motor_Driver/ecu_motor_prog.c"
   436 ;; Parameters:    Size  Location     Type
   437 ;;  motor_obj       2   10[COMRAM] PTR struct .
   438 ;;		 -> motorOne(4), 
   439 ;; Auto vars:     Size  Location     Type
   440 ;;  Local_Status    1   12[COMRAM] unsigned char 
   441 ;; Return value:  Size  Location     Type
   442 ;;                  1    wreg      unsigned char 
   443 ;; Registers used:
   444 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   445 ;; Tracked objects:
   446 ;;		On entry : 0/0
   447 ;;		On exit  : 0/0
   448 ;;		Unchanged: 0/0
   449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   450 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   451 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   453 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   454 ;;Total ram usage:        3 bytes
   455 ;; Hardware stack levels used:    1
   456 ;; Hardware stack levels required when called:    1
   457 ;; This function calls:
   458 ;;		_gpio_pin_write_logic
   459 ;; This function is called by:
   460 ;;		_main
   461 ;; This function uses a non-reentrant model
   462 ;;
   463                           
   464                           	psect	text2
   465  00FD54                     __ptext2:
   466                           	opt stack 0
   467  00FD54                     _motor_turn_left:
   468                           	opt stack 29
   469                           
   470                           ;ecu_motor_prog.c: 53: Std_ReturnType Local_Status=(Std_ReturnType)0x00;
   471                           
   472                           ;incstack = 0
   473  00FD54  0E00               	movlw	0
   474  00FD56  6E2F               	movwf	motor_turn_left@Local_Status,c
   475                           
   476                           ;ecu_motor_prog.c: 54: if(motor_obj==(0)){
   477  00FD58  502D               	movf	motor_turn_left@motor_obj,w,c
   478  00FD5A  102E               	iorwf	motor_turn_left@motor_obj+1,w,c
   479  00FD5C  A4D8               	btfss	status,2,c
   480  00FD5E  D003               	goto	l1491
   481                           
   482                           ;ecu_motor_prog.c: 55: Local_Status=(Std_ReturnType)0x00;
   483  00FD60  0E00               	movlw	0
   484  00FD62  6E2F               	movwf	motor_turn_left@Local_Status,c
   485                           
   486                           ;ecu_motor_prog.c: 56: }else{
   487  00FD64  0012               	return	
   488  00FD66                     l1491:
   489                           
   490                           ;ecu_motor_prog.c: 57: gpio_pin_write_logic(&motor_obj->pinRight,LOW);
   491  00FD66  C02D  F023         	movff	motor_turn_left@motor_obj,gpio_pin_write_logic@_pin_config
   492  00FD6A  C02E  F024         	movff	motor_turn_left@motor_obj+1,gpio_pin_write_logic@_pin_config+1
   493  00FD6E  0E00               	movlw	0
   494  00FD70  6E25               	movwf	gpio_pin_write_logic@logic,c
   495  00FD72  EC7C  F07F         	call	_gpio_pin_write_logic	;wreg free
   496                           
   497                           ;ecu_motor_prog.c: 58: gpio_pin_write_logic(&motor_obj->pinLeft,HIGH);
   498  00FD76  0E02               	movlw	2
   499  00FD78  242D               	addwf	motor_turn_left@motor_obj,w,c
   500  00FD7A  6E23               	movwf	gpio_pin_write_logic@_pin_config,c
   501  00FD7C  0E00               	movlw	0
   502  00FD7E  202E               	addwfc	motor_turn_left@motor_obj+1,w,c
   503  00FD80  6E24               	movwf	gpio_pin_write_logic@_pin_config+1,c
   504  00FD82  0E01               	movlw	1
   505  00FD84  6E25               	movwf	gpio_pin_write_logic@logic,c
   506  00FD86  EC7C  F07F         	call	_gpio_pin_write_logic	;wreg free
   507                           
   508                           ;ecu_motor_prog.c: 59: Local_Status=(Std_ReturnType)0x01;
   509  00FD8A  0E01               	movlw	1
   510  00FD8C  6E2F               	movwf	motor_turn_left@Local_Status,c
   511  00FD8E  0012               	return	
   512  00FD90                     __end_of_motor_turn_left:
   513                           	opt stack 0
   514                           tblptru	equ	0xFF8
   515                           tblptrh	equ	0xFF7
   516                           tblptrl	equ	0xFF6
   517                           tablat	equ	0xFF5
   518                           postinc0	equ	0xFEE
   519                           wreg	equ	0xFE8
   520                           postdec1	equ	0xFE5
   521                           fsr1l	equ	0xFE1
   522                           status	equ	0xFD8
   523                           
   524 ;; *************** function _gpio_pin_write_logic *****************
   525 ;; Defined at:
   526 ;;		line 60 in file "MCAL_Layer/GPIO/hal_gpio.c"
   527 ;; Parameters:    Size  Location     Type
   528 ;;  _pin_config     2    0[COMRAM] PTR const struct .
   529 ;;		 -> motorOne.pinLeft(2), motorOne.pinRight(2), motorOne(4), 
   530 ;;  logic           1    2[COMRAM] enum E3078
   531 ;; Auto vars:     Size  Location     Type
   532 ;;  LocalReturn     1    9[COMRAM] unsigned char 
   533 ;; Return value:  Size  Location     Type
   534 ;;                  1    wreg      unsigned char 
   535 ;; Registers used:
   536 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   537 ;; Tracked objects:
   538 ;;		On entry : 0/0
   539 ;;		On exit  : 0/0
   540 ;;		Unchanged: 0/0
   541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   542 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   543 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   544 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   545 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   546 ;;Total ram usage:       10 bytes
   547 ;; Hardware stack levels used:    1
   548 ;; This function calls:
   549 ;;		Nothing
   550 ;; This function is called by:
   551 ;;		_motor_turn_right
   552 ;;		_motor_turn_left
   553 ;;		_relay_turn_on
   554 ;;		_relay_turn_off
   555 ;;		_gpio_pin_intialize
   556 ;;		_motor_turn_off
   557 ;; This function uses a non-reentrant model
   558 ;;
   559                           
   560                           	psect	text3
   561  00FEF8                     __ptext3:
   562                           	opt stack 0
   563  00FEF8                     _gpio_pin_write_logic:
   564                           	opt stack 29
   565                           
   566                           ;hal_gpio.c: 61: Std_ReturnType LocalReturn=(Std_ReturnType)0x00;
   567                           
   568                           ;incstack = 0
   569  00FEF8  0E00               	movlw	0
   570  00FEFA  6E2C               	movwf	gpio_pin_write_logic@LocalReturn,c
   571                           
   572                           ;hal_gpio.c: 62: if(_pin_config==(0) || (_pin_config->port)>5 || (_pin_config->pin)>8 ||
      +                           (_pin_config->directin==INPUT)){
   573  00FEFC  5023               	movf	gpio_pin_write_logic@_pin_config,w,c
   574  00FEFE  1024               	iorwf	gpio_pin_write_logic@_pin_config+1,w,c
   575  00FF00  B4D8               	btfsc	status,2,c
   576  00FF02  D01A               	goto	l1445
   577  00FF04  C023  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
   578  00FF08  C024  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
   579  00FF0C  50DF               	movf	indf2,w,c
   580  00FF0E  0B0F               	andlw	15
   581  00FF10  6E26               	movwf	??_gpio_pin_write_logic& (0+255),c
   582  00FF12  0E06               	movlw	6
   583  00FF14  6026               	cpfslt	??_gpio_pin_write_logic,c
   584  00FF16  D010               	goto	l1445
   585  00FF18  C023  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
   586  00FF1C  C024  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
   587  00FF20  38DF               	swapf	indf2,w,c
   588  00FF22  0B07               	andlw	7
   589  00FF24  6E26               	movwf	??_gpio_pin_write_logic& (0+255),c
   590  00FF26  0E09               	movlw	9
   591  00FF28  6026               	cpfslt	??_gpio_pin_write_logic,c
   592  00FF2A  D006               	goto	l1445
   593  00FF2C  C023  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
   594  00FF30  C024  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
   595  00FF34  AEDF               	btfss	indf2,7,c
   596  00FF36  D05C               	goto	l1457
   597  00FF38                     l1445:
   598                           
   599                           ;hal_gpio.c: 63: LocalReturn=(Std_ReturnType)0x00;
   600  00FF38  0E00               	movlw	0
   601  00FF3A  6E2C               	movwf	gpio_pin_write_logic@LocalReturn,c
   602                           
   603                           ;hal_gpio.c: 64: }else{
   604  00FF3C  0012               	return	
   605  00FF3E                     l1447:
   606                           
   607                           ;hal_gpio.c: 67: (*lat_register[_pin_config->port] |= ((uint8)1 << _pin_config->pin));
   608  00FF3E  C023  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
   609  00FF42  C024  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
   610  00FF46  38DF               	swapf	indf2,w,c
   611  00FF48  0B07               	andlw	7
   612  00FF4A  6E26               	movwf	??_gpio_pin_write_logic& (0+255),c
   613  00FF4C  0E01               	movlw	1
   614  00FF4E  6E27               	movwf	(??_gpio_pin_write_logic+1)& (0+255),c
   615  00FF50  2A26               	incf	??_gpio_pin_write_logic,f,c
   616  00FF52  D002               	goto	u674
   617  00FF54                     u675:
   618  00FF54  90D8               	bcf	status,0,c
   619  00FF56  3627               	rlcf	??_gpio_pin_write_logic+1,f,c
   620  00FF58                     u674:
   621  00FF58  2E26               	decfsz	??_gpio_pin_write_logic,f,c
   622  00FF5A  D7FC               	goto	u675
   623  00FF5C  C023  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
   624  00FF60  C024  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
   625  00FF64  50DF               	movf	indf2,w,c
   626  00FF66  0B0F               	andlw	15
   627  00FF68  6E28               	movwf	(??_gpio_pin_write_logic+2)& (0+255),c
   628  00FF6A  5028               	movf	??_gpio_pin_write_logic+2,w,c
   629  00FF6C  0D02               	mullw	2
   630  00FF6E  0E01               	movlw	low _lat_register
   631  00FF70  24F3               	addwf	prodl,w,c
   632  00FF72  6ED9               	movwf	fsr2l,c
   633  00FF74  0E00               	movlw	high _lat_register
   634  00FF76  20F4               	addwfc	prodh,w,c
   635  00FF78  6EDA               	movwf	fsr2h,c
   636  00FF7A  CFDE F029          	movff	postinc2,??_gpio_pin_write_logic+3
   637  00FF7E  CFDD F02A          	movff	postdec2,??_gpio_pin_write_logic+4
   638  00FF82  C029  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
   639  00FF86  C02A  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
   640  00FF8A  5027               	movf	??_gpio_pin_write_logic+1,w,c
   641  00FF8C  12DF               	iorwf	indf2,f,c
   642                           
   643                           ;hal_gpio.c: 68: LocalReturn=(Std_ReturnType)0x01;
   644  00FF8E  0E01               	movlw	1
   645  00FF90  6E2C               	movwf	gpio_pin_write_logic@LocalReturn,c
   646                           
   647                           ;hal_gpio.c: 69: break;
   648  00FF92  0012               	return	
   649  00FF94                     l1451:
   650                           
   651                           ;hal_gpio.c: 71: (*lat_register[_pin_config->port] &= ~((uint8)1 << _pin_config->pin));
   652  00FF94  C023  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
   653  00FF98  C024  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
   654  00FF9C  38DF               	swapf	indf2,w,c
   655  00FF9E  0B07               	andlw	7
   656  00FFA0  6E26               	movwf	??_gpio_pin_write_logic& (0+255),c
   657  00FFA2  0E01               	movlw	1
   658  00FFA4  6E27               	movwf	(??_gpio_pin_write_logic+1)& (0+255),c
   659  00FFA6  2A26               	incf	??_gpio_pin_write_logic,f,c
   660  00FFA8  D002               	goto	u684
   661  00FFAA                     u685:
   662  00FFAA  90D8               	bcf	status,0,c
   663  00FFAC  3627               	rlcf	??_gpio_pin_write_logic+1,f,c
   664  00FFAE                     u684:
   665  00FFAE  2E26               	decfsz	??_gpio_pin_write_logic,f,c
   666  00FFB0  D7FC               	goto	u685
   667  00FFB2  5027               	movf	??_gpio_pin_write_logic+1,w,c
   668  00FFB4  0AFF               	xorlw	255
   669  00FFB6  6E28               	movwf	(??_gpio_pin_write_logic+2)& (0+255),c
   670  00FFB8  C023  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
   671  00FFBC  C024  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
   672  00FFC0  50DF               	movf	indf2,w,c
   673  00FFC2  0B0F               	andlw	15
   674  00FFC4  6E29               	movwf	(??_gpio_pin_write_logic+3)& (0+255),c
   675  00FFC6  5029               	movf	??_gpio_pin_write_logic+3,w,c
   676  00FFC8  0D02               	mullw	2
   677  00FFCA  0E01               	movlw	low _lat_register
   678  00FFCC  24F3               	addwf	prodl,w,c
   679  00FFCE  6ED9               	movwf	fsr2l,c
   680  00FFD0  0E00               	movlw	high _lat_register
   681  00FFD2  20F4               	addwfc	prodh,w,c
   682  00FFD4  6EDA               	movwf	fsr2h,c
   683  00FFD6  CFDE F02A          	movff	postinc2,??_gpio_pin_write_logic+4
   684  00FFDA  CFDD F02B          	movff	postdec2,??_gpio_pin_write_logic+5
   685  00FFDE  C02A  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
   686  00FFE2  C02B  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
   687  00FFE6  5028               	movf	??_gpio_pin_write_logic+2,w,c
   688  00FFE8  16DF               	andwf	indf2,f,c
   689                           
   690                           ;hal_gpio.c: 72: LocalReturn=(Std_ReturnType)0x01;
   691  00FFEA  0E01               	movlw	1
   692  00FFEC  6E2C               	movwf	gpio_pin_write_logic@LocalReturn,c
   693                           
   694                           ;hal_gpio.c: 74: }
   695                           
   696                           ;hal_gpio.c: 73: break;
   697  00FFEE  0012               	return	
   698  00FFF0                     l1457:
   699  00FFF0  5025               	movf	gpio_pin_write_logic@logic,w,c
   700                           
   701                           ; Switch size 1, requested type "space"
   702                           ; Number of cases is 2, Range of values is 0 to 1
   703                           ; switch strategies available:
   704                           ; Name         Instructions Cycles
   705                           ; simple_byte            7     4 (average)
   706                           ;	Chosen strategy is simple_byte
   707  00FFF2  0A00               	xorlw	0	; case 0
   708  00FFF4  B4D8               	btfsc	status,2,c
   709  00FFF6  D7CE               	goto	l1451
   710  00FFF8  0A01               	xorlw	1	; case 1
   711  00FFFA  A4D8               	btfss	status,2,c
   712  00FFFC  0012               	return	
   713  00FFFE  D79F               	goto	l1447
   714  010000                     __end_of_gpio_pin_write_logic:
   715                           	opt stack 0
   716                           tblptru	equ	0xFF8
   717                           tblptrh	equ	0xFF7
   718                           tblptrl	equ	0xFF6
   719                           tablat	equ	0xFF5
   720                           prodh	equ	0xFF4
   721                           prodl	equ	0xFF3
   722                           postinc0	equ	0xFEE
   723                           wreg	equ	0xFE8
   724                           postdec1	equ	0xFE5
   725                           fsr1l	equ	0xFE1
   726                           indf2	equ	0xFDF
   727                           postinc2	equ	0xFDE
   728                           postdec2	equ	0xFDD
   729                           fsr2h	equ	0xFDA
   730                           fsr2l	equ	0xFD9
   731                           status	equ	0xFD8
   732                           
   733 ;; *************** function _functionInitialize *****************
   734 ;; Defined at:
   735 ;;		line 29 in file "application.c"
   736 ;; Parameters:    Size  Location     Type
   737 ;;		None
   738 ;; Auto vars:     Size  Location     Type
   739 ;;		None
   740 ;; Return value:  Size  Location     Type
   741 ;;                  1    wreg      void 
   742 ;; Registers used:
   743 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   744 ;; Tracked objects:
   745 ;;		On entry : 0/0
   746 ;;		On exit  : 0/0
   747 ;;		Unchanged: 0/0
   748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   753 ;;Total ram usage:        0 bytes
   754 ;; Hardware stack levels used:    1
   755 ;; Hardware stack levels required when called:    2
   756 ;; This function calls:
   757 ;;		_motor_initialize
   758 ;; This function is called by:
   759 ;;		_main
   760 ;; This function uses a non-reentrant model
   761 ;;
   762                           
   763                           	psect	text4
   764  00FCC6                     __ptext4:
   765                           	opt stack 0
   766  00FCC6                     _functionInitialize:
   767                           	opt stack 28
   768                           
   769                           ;application.c: 30: motor_initialize(&motorOne);
   770                           
   771                           ;incstack = 0
   772  00FCC6  0E1F               	movlw	low _motorOne
   773  00FCC8  6E2C               	movwf	motor_initialize@motor_obj,c
   774  00FCCA  0E00               	movlw	high _motorOne
   775  00FCCC  6E2D               	movwf	motor_initialize@motor_obj+1,c
   776  00FCCE  EC90  F07E         	call	_motor_initialize	;wreg free
   777  00FCD2  0012               	return		;funcret
   778  00FCD4                     __end_of_functionInitialize:
   779                           	opt stack 0
   780                           tblptru	equ	0xFF8
   781                           tblptrh	equ	0xFF7
   782                           tblptrl	equ	0xFF6
   783                           tablat	equ	0xFF5
   784                           prodh	equ	0xFF4
   785                           prodl	equ	0xFF3
   786                           postinc0	equ	0xFEE
   787                           wreg	equ	0xFE8
   788                           postdec1	equ	0xFE5
   789                           fsr1l	equ	0xFE1
   790                           indf2	equ	0xFDF
   791                           postinc2	equ	0xFDE
   792                           postdec2	equ	0xFDD
   793                           fsr2h	equ	0xFDA
   794                           fsr2l	equ	0xFD9
   795                           status	equ	0xFD8
   796                           
   797 ;; *************** function _motor_initialize *****************
   798 ;; Defined at:
   799 ;;		line 16 in file "ECU_Layer/Motor_Driver/ecu_motor_prog.c"
   800 ;; Parameters:    Size  Location     Type
   801 ;;  motor_obj       2    9[COMRAM] PTR struct .
   802 ;;		 -> motorOne(4), 
   803 ;; Auto vars:     Size  Location     Type
   804 ;;  Local_Status    1   11[COMRAM] unsigned char 
   805 ;; Return value:  Size  Location     Type
   806 ;;                  1    wreg      unsigned char 
   807 ;; Registers used:
   808 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   809 ;; Tracked objects:
   810 ;;		On entry : 0/0
   811 ;;		On exit  : 0/0
   812 ;;		Unchanged: 0/0
   813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   814 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   815 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   817 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   818 ;;Total ram usage:        3 bytes
   819 ;; Hardware stack levels used:    1
   820 ;; Hardware stack levels required when called:    1
   821 ;; This function calls:
   822 ;;		_gpio_pin_direction_intialize
   823 ;; This function is called by:
   824 ;;		_functionInitialize
   825 ;; This function uses a non-reentrant model
   826 ;;
   827                           
   828                           	psect	text5
   829  00FD20                     __ptext5:
   830                           	opt stack 0
   831  00FD20                     _motor_initialize:
   832                           	opt stack 28
   833                           
   834                           ;ecu_motor_prog.c: 17: Std_ReturnType Local_Status=(Std_ReturnType)0x00;
   835                           
   836                           ;incstack = 0
   837  00FD20  0E00               	movlw	0
   838  00FD22  6E2E               	movwf	motor_initialize@Local_Status,c
   839                           
   840                           ;ecu_motor_prog.c: 18: if(motor_obj==(0)){
   841  00FD24  502C               	movf	motor_initialize@motor_obj,w,c
   842  00FD26  102D               	iorwf	motor_initialize@motor_obj+1,w,c
   843  00FD28  A4D8               	btfss	status,2,c
   844  00FD2A  D003               	goto	l1465
   845                           
   846                           ;ecu_motor_prog.c: 19: Local_Status=(Std_ReturnType)0x00;
   847  00FD2C  0E00               	movlw	0
   848  00FD2E  6E2E               	movwf	motor_initialize@Local_Status,c
   849                           
   850                           ;ecu_motor_prog.c: 20: }else{
   851  00FD30  0012               	return	
   852  00FD32                     l1465:
   853                           
   854                           ;ecu_motor_prog.c: 21: gpio_pin_direction_intialize(&motor_obj->pinLeft);
   855  00FD32  0E02               	movlw	2
   856  00FD34  242C               	addwf	motor_initialize@motor_obj,w,c
   857  00FD36  6E23               	movwf	gpio_pin_direction_intialize@_pin_config,c
   858  00FD38  0E00               	movlw	0
   859  00FD3A  202D               	addwfc	motor_initialize@motor_obj+1,w,c
   860  00FD3C  6E24               	movwf	gpio_pin_direction_intialize@_pin_config+1,c
   861  00FD3E  EC0B  F07F         	call	_gpio_pin_direction_intialize	;wreg free
   862                           
   863                           ;ecu_motor_prog.c: 22: gpio_pin_direction_intialize(&motor_obj->pinRight);
   864  00FD42  C02C  F023         	movff	motor_initialize@motor_obj,gpio_pin_direction_intialize@_pin_config
   865  00FD46  C02D  F024         	movff	motor_initialize@motor_obj+1,gpio_pin_direction_intialize@_pin_config+1
   866  00FD4A  EC0B  F07F         	call	_gpio_pin_direction_intialize	;wreg free
   867                           
   868                           ;ecu_motor_prog.c: 23: Local_Status=(Std_ReturnType)0x01;
   869  00FD4E  0E01               	movlw	1
   870  00FD50  6E2E               	movwf	motor_initialize@Local_Status,c
   871  00FD52  0012               	return	
   872  00FD54                     __end_of_motor_initialize:
   873                           	opt stack 0
   874                           tblptru	equ	0xFF8
   875                           tblptrh	equ	0xFF7
   876                           tblptrl	equ	0xFF6
   877                           tablat	equ	0xFF5
   878                           prodh	equ	0xFF4
   879                           prodl	equ	0xFF3
   880                           postinc0	equ	0xFEE
   881                           wreg	equ	0xFE8
   882                           postdec1	equ	0xFE5
   883                           fsr1l	equ	0xFE1
   884                           indf2	equ	0xFDF
   885                           postinc2	equ	0xFDE
   886                           postdec2	equ	0xFDD
   887                           fsr2h	equ	0xFDA
   888                           fsr2l	equ	0xFD9
   889                           status	equ	0xFD8
   890                           
   891 ;; *************** function _gpio_pin_direction_intialize *****************
   892 ;; Defined at:
   893 ;;		line 16 in file "MCAL_Layer/GPIO/hal_gpio.c"
   894 ;; Parameters:    Size  Location     Type
   895 ;;  _pin_config     2    0[COMRAM] PTR const struct .
   896 ;;		 -> motorOne.pinLeft(2), motorOne.pinRight(2), motorOne(4), 
   897 ;; Auto vars:     Size  Location     Type
   898 ;;  LocalReturn     1    8[COMRAM] unsigned char 
   899 ;; Return value:  Size  Location     Type
   900 ;;                  1    wreg      unsigned char 
   901 ;; Registers used:
   902 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   903 ;; Tracked objects:
   904 ;;		On entry : 0/0
   905 ;;		On exit  : 0/0
   906 ;;		Unchanged: 0/0
   907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   908 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   909 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   910 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   911 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   912 ;;Total ram usage:        9 bytes
   913 ;; Hardware stack levels used:    1
   914 ;; This function calls:
   915 ;;		Nothing
   916 ;; This function is called by:
   917 ;;		_motor_initialize
   918 ;;		_button_initialize
   919 ;;		_gpio_pin_intialize
   920 ;; This function uses a non-reentrant model
   921 ;;
   922                           
   923                           	psect	text6
   924  00FE16                     __ptext6:
   925                           	opt stack 0
   926  00FE16                     _gpio_pin_direction_intialize:
   927                           	opt stack 28
   928                           
   929                           ;hal_gpio.c: 17: Std_ReturnType LocalReturn=(Std_ReturnType)0x00;
   930                           
   931                           ;incstack = 0
   932  00FE16  0E00               	movlw	0
   933  00FE18  6E2B               	movwf	gpio_pin_direction_intialize@LocalReturn,c
   934                           
   935                           ;hal_gpio.c: 18: if(_pin_config==(0)){
   936  00FE1A  5023               	movf	gpio_pin_direction_intialize@_pin_config,w,c
   937  00FE1C  1024               	iorwf	gpio_pin_direction_intialize@_pin_config+1,w,c
   938  00FE1E  A4D8               	btfss	status,2,c
   939  00FE20  D05A               	goto	l1429
   940                           
   941                           ;hal_gpio.c: 19: LocalReturn=(Std_ReturnType)0x00;
   942  00FE22  0E00               	movlw	0
   943  00FE24  D029               	goto	L1
   944  00FE26                     l1419:
   945                           
   946                           ;hal_gpio.c: 23: (*tris_register[_pin_config->port] |= ((uint8)1 << _pin_config->pin));
   947  00FE26  C023  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
   948  00FE2A  C024  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
   949  00FE2E  38DF               	swapf	indf2,w,c
   950  00FE30  0B07               	andlw	7
   951  00FE32  6E25               	movwf	??_gpio_pin_direction_intialize& (0+255),c
   952  00FE34  0E01               	movlw	1
   953  00FE36  6E26               	movwf	(??_gpio_pin_direction_intialize+1)& (0+255),c
   954  00FE38  2A25               	incf	??_gpio_pin_direction_intialize,f,c
   955  00FE3A  D002               	goto	u604
   956  00FE3C                     u605:
   957  00FE3C  90D8               	bcf	status,0,c
   958  00FE3E  3626               	rlcf	??_gpio_pin_direction_intialize+1,f,c
   959  00FE40                     u604:
   960  00FE40  2E25               	decfsz	??_gpio_pin_direction_intialize,f,c
   961  00FE42  D7FC               	goto	u605
   962  00FE44  C023  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
   963  00FE48  C024  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
   964  00FE4C  50DF               	movf	indf2,w,c
   965  00FE4E  0B0F               	andlw	15
   966  00FE50  6E27               	movwf	(??_gpio_pin_direction_intialize+2)& (0+255),c
   967  00FE52  5027               	movf	??_gpio_pin_direction_intialize+2,w,c
   968  00FE54  0D02               	mullw	2
   969  00FE56  0E15               	movlw	low _tris_register
   970  00FE58  24F3               	addwf	prodl,w,c
   971  00FE5A  6ED9               	movwf	fsr2l,c
   972  00FE5C  0E00               	movlw	high _tris_register
   973  00FE5E  20F4               	addwfc	prodh,w,c
   974  00FE60  6EDA               	movwf	fsr2h,c
   975  00FE62  CFDE F028          	movff	postinc2,??_gpio_pin_direction_intialize+3
   976  00FE66  CFDD F029          	movff	postdec2,??_gpio_pin_direction_intialize+4
   977  00FE6A  C028  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
   978  00FE6E  C029  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
   979  00FE72  5026               	movf	??_gpio_pin_direction_intialize+1,w,c
   980  00FE74  12DF               	iorwf	indf2,f,c
   981  00FE76  D02D               	goto	l1425
   982  00FE78                     L1:
   983  00FE78  6E2B               	movwf	gpio_pin_direction_intialize@LocalReturn,c
   984                           
   985                           ;hal_gpio.c: 25: break;
   986  00FE7A  D03C               	goto	l1431
   987  00FE7C                     l1423:
   988                           
   989                           ;hal_gpio.c: 27: (*tris_register[_pin_config->port] &= ~((uint8)1 << _pin_config->pin));
   990  00FE7C  C023  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
   991  00FE80  C024  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
   992  00FE84  38DF               	swapf	indf2,w,c
   993  00FE86  0B07               	andlw	7
   994  00FE88  6E25               	movwf	??_gpio_pin_direction_intialize& (0+255),c
   995  00FE8A  0E01               	movlw	1
   996  00FE8C  6E26               	movwf	(??_gpio_pin_direction_intialize+1)& (0+255),c
   997  00FE8E  2A25               	incf	??_gpio_pin_direction_intialize,f,c
   998  00FE90  D002               	goto	u614
   999  00FE92                     u615:
  1000  00FE92  90D8               	bcf	status,0,c
  1001  00FE94  3626               	rlcf	??_gpio_pin_direction_intialize+1,f,c
  1002  00FE96                     u614:
  1003  00FE96  2E25               	decfsz	??_gpio_pin_direction_intialize,f,c
  1004  00FE98  D7FC               	goto	u615
  1005  00FE9A  5026               	movf	??_gpio_pin_direction_intialize+1,w,c
  1006  00FE9C  0AFF               	xorlw	255
  1007  00FE9E  6E27               	movwf	(??_gpio_pin_direction_intialize+2)& (0+255),c
  1008  00FEA0  C023  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  1009  00FEA4  C024  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  1010  00FEA8  50DF               	movf	indf2,w,c
  1011  00FEAA  0B0F               	andlw	15
  1012  00FEAC  6E28               	movwf	(??_gpio_pin_direction_intialize+3)& (0+255),c
  1013  00FEAE  5028               	movf	??_gpio_pin_direction_intialize+3,w,c
  1014  00FEB0  0D02               	mullw	2
  1015  00FEB2  0E15               	movlw	low _tris_register
  1016  00FEB4  24F3               	addwf	prodl,w,c
  1017  00FEB6  6ED9               	movwf	fsr2l,c
  1018  00FEB8  0E00               	movlw	high _tris_register
  1019  00FEBA  20F4               	addwfc	prodh,w,c
  1020  00FEBC  6EDA               	movwf	fsr2h,c
  1021  00FEBE  CFDE F029          	movff	postinc2,??_gpio_pin_direction_intialize+4
  1022  00FEC2  CFDD F02A          	movff	postdec2,??_gpio_pin_direction_intialize+5
  1023  00FEC6  C029  FFD9         	movff	??_gpio_pin_direction_intialize+4,fsr2l
  1024  00FECA  C02A  FFDA         	movff	??_gpio_pin_direction_intialize+5,fsr2h
  1025  00FECE  5027               	movf	??_gpio_pin_direction_intialize+2,w,c
  1026  00FED0  16DF               	andwf	indf2,f,c
  1027  00FED2                     l1425:
  1028                           
  1029                           ;hal_gpio.c: 28: LocalReturn=(Std_ReturnType)0x01;
  1030  00FED2  0E01               	movlw	1
  1031  00FED4  D7D1               	goto	L1
  1032  00FED6                     l1429:
  1033  00FED6  C023  FFD9         	movff	gpio_pin_direction_intialize@_pin_config,fsr2l
  1034  00FEDA  C024  FFDA         	movff	gpio_pin_direction_intialize@_pin_config+1,fsr2h
  1035  00FEDE  AEDF               	btfss	indf2,7,c
  1036  00FEE0  D002               	goto	u620
  1037  00FEE2  0E01               	movlw	1
  1038  00FEE4  D001               	goto	u626
  1039  00FEE6                     u620:
  1040  00FEE6  0E00               	movlw	0
  1041  00FEE8                     u626:
  1042                           
  1043                           ; Switch size 1, requested type "space"
  1044                           ; Number of cases is 2, Range of values is 0 to 1
  1045                           ; switch strategies available:
  1046                           ; Name         Instructions Cycles
  1047                           ; simple_byte            7     4 (average)
  1048                           ;	Chosen strategy is simple_byte
  1049  00FEE8  0A00               	xorlw	0	; case 0
  1050  00FEEA  B4D8               	btfsc	status,2,c
  1051  00FEEC  D7C7               	goto	l1423
  1052  00FEEE  0A01               	xorlw	1	; case 1
  1053  00FEF0  B4D8               	btfsc	status,2,c
  1054  00FEF2  D799               	goto	l1419
  1055  00FEF4                     l1431:
  1056                           
  1057                           ;hal_gpio.c: 31: }
  1058                           ;hal_gpio.c: 32: return LocalReturn;
  1059  00FEF4  502B               	movf	gpio_pin_direction_intialize@LocalReturn,w,c
  1060  00FEF6  0012               	return	
  1061  00FEF8                     __end_of_gpio_pin_direction_intialize:
  1062                           	opt stack 0
  1063  0000                     tblptru	equ	0xFF8
  1064                           tblptrh	equ	0xFF7
  1065                           tblptrl	equ	0xFF6
  1066                           tablat	equ	0xFF5
  1067                           prodh	equ	0xFF4
  1068                           prodl	equ	0xFF3
  1069                           postinc0	equ	0xFEE
  1070                           wreg	equ	0xFE8
  1071                           postdec1	equ	0xFE5
  1072                           fsr1l	equ	0xFE1
  1073                           indf2	equ	0xFDF
  1074                           postinc2	equ	0xFDE
  1075                           postdec2	equ	0xFDD
  1076                           fsr2h	equ	0xFDA
  1077                           fsr2l	equ	0xFD9
  1078                           status	equ	0xFD8
  1079                           tblptru	equ	0xFF8
  1080                           tblptrh	equ	0xFF7
  1081                           tblptrl	equ	0xFF6
  1082                           tablat	equ	0xFF5
  1083                           prodh	equ	0xFF4
  1084                           prodl	equ	0xFF3
  1085                           postinc0	equ	0xFEE
  1086                           wreg	equ	0xFE8
  1087                           postdec1	equ	0xFE5
  1088                           fsr1l	equ	0xFE1
  1089                           indf2	equ	0xFDF
  1090                           postinc2	equ	0xFDE
  1091                           postdec2	equ	0xFDD
  1092                           fsr2h	equ	0xFDA
  1093                           fsr2l	equ	0xFD9
  1094                           status	equ	0xFD8
  1095                           
  1096                           	psect	rparam
  1097  0000                     tblptru	equ	0xFF8
  1098                           tblptrh	equ	0xFF7
  1099                           tblptrl	equ	0xFF6
  1100                           tablat	equ	0xFF5
  1101                           prodh	equ	0xFF4
  1102                           prodl	equ	0xFF3
  1103                           postinc0	equ	0xFEE
  1104                           wreg	equ	0xFE8
  1105                           postdec1	equ	0xFE5
  1106                           fsr1l	equ	0xFE1
  1107                           indf2	equ	0xFDF
  1108                           postinc2	equ	0xFDE
  1109                           postdec2	equ	0xFDD
  1110                           fsr2h	equ	0xFDA
  1111                           fsr2l	equ	0xFD9
  1112                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        34
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     15      49
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    motor_turn_left@motor_obj	PTR struct . size(2) Largest target is 4
		 -> motorOne(COMRAM[4]), 

    motor_turn_right@motor_obj	PTR struct . size(2) Largest target is 4
		 -> motorOne(COMRAM[4]), 

    motor_initialize@motor_obj	PTR struct . size(2) Largest target is 4
		 -> motorOne(COMRAM[4]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(2) Largest target is 4
		 -> motorOne.pinLeft(COMRAM[2]), motorOne.pinRight(COMRAM[2]), motorOne(COMRAM[4]), 

    gpio_pin_direction_intialize@_pin_config	PTR const struct . size(2) Largest target is 4
		 -> motorOne.pinLeft(COMRAM[2]), motorOne.pinRight(COMRAM[2]), motorOne(COMRAM[4]), 

    lat_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(SFR[1]), LATD(SFR[1]), LATC(SFR[1]), LATB(SFR[1]), 
		 -> LATA(SFR[1]), 

    port_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(SFR[1]), PORTD(SFR[1]), PORTC(SFR[1]), PORTB(SFR[1]), 
		 -> PORTA(SFR[1]), 

    tris_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(SFR[1]), TRISD(SFR[1]), TRISC(SFR[1]), TRISB(SFR[1]), 
		 -> TRISA(SFR[1]), 


Critical Paths under _main in COMRAM

    _main->_motor_turn_left
    _main->_motor_turn_right
    _motor_turn_right->_gpio_pin_write_logic
    _motor_turn_left->_gpio_pin_write_logic
    _functionInitialize->_motor_initialize
    _motor_initialize->_gpio_pin_direction_intialize

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3551
                                             13 COMRAM     2     2      0
                 _functionInitialize
                    _motor_turn_left
                   _motor_turn_right
 ---------------------------------------------------------------------------------
 (1) _motor_turn_right                                     3     1      2    1499
                                             10 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _motor_turn_left                                      3     1      2    1499
                                             10 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_write_logic                                10     7      3    1360
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (1) _functionInitialize                                   0     0      0     553
                   _motor_initialize
 ---------------------------------------------------------------------------------
 (2) _motor_initialize                                     3     1      2     553
                                              9 COMRAM     3     1      2
       _gpio_pin_direction_intialize
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_intialize                         9     7      2     414
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _functionInitialize
     _motor_initialize
       _gpio_pin_direction_intialize
   _motor_turn_left
     _gpio_pin_write_logic
   _motor_turn_right
     _gpio_pin_write_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      F      31       1       38.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      31      34        0.0%
DATA                 0      0      31       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Mon Sep 18 17:34:30 2023

                            __CFG_BORV$1 000000                             __CFG_CP0$OFF 000000  
                           __CFG_CP1$OFF 000000                             __CFG_CP2$OFF 000000  
                           __CFG_CP3$OFF 000000                              __CFG_OSC$HS 000000  
                                    l349 FDD0                             __CFG_CPB$OFF 000000  
                           __CFG_CPD$OFF 000000                                      u620 FEE6  
                                    u604 FE40                                      u605 FE3C  
                                    u614 FE96                                      u615 FE92  
                                    u626 FEE8                                      u807 FDE6  
                                    u817 FE08                                      u674 FF58  
                                    u675 FF54                                      u684 FFAE  
                                    u685 FFAA                                      prod 000FF3  
                                    wreg 000FE8                        ?_motor_initialize 002C  
                           __CFG_LVP$OFF 000000                       ??_motor_initialize 002E  
                           __CFG_WDT$OFF 000000                                     l1423 FE7C  
                                   l1431 FEF4                                     l1425 FED2  
                                   l1419 FE26                                     l1451 FF94  
                                   l1429 FED6                                     l1445 FF38  
                                   l1447 FF3E                                     l1465 FD32  
                                   l1457 FFF0                                     l1491 FD66  
                                   l1479 FDA2                                     _LATA 000F89  
                                   _LATB 000F8A                                     _LATC 000F8B  
                                   _LATD 000F8C                                     _LATE 000F8D  
                                   _main FDCC                                     fsr2h 000FDA  
                                   indf2 000FDF                                     fsr1l 000FE1  
                                   fsr2l 000FD9                                     prodl 000FF3  
                                   start 0000                            __CFG_IESO$OFF 000000  
                          __CFG_MCLRE$ON 000000                             ___param_bank 000000  
                   _gpio_pin_write_logic FEF8                        ??_motor_turn_left 002F  
                                  ?_main 0023                                    _PORTA 000F80  
                                  _PORTB 000F81                                    _PORTC 000F82  
                                  _PORTD 000F83                                    _PORTE 000F84  
                                  _TRISA 000F92                                    _TRISB 000F93  
                                  _TRISC 000F94                                    _TRISD 000F95  
                                  _TRISE 000F96                            __CFG_PWRT$OFF 000000  
                          __CFG_WRT0$OFF 000000                            __CFG_WRT1$OFF 000000  
                          __CFG_WRT2$OFF 000000                            __CFG_WRT3$OFF 000000  
                         __CFG_EBTR0$OFF 000000                           __CFG_FCMEN$OFF 000000  
                         __CFG_EBTR1$OFF 000000                           __CFG_EBTR2$OFF 000000  
                         __CFG_EBTR3$OFF 000000                            __CFG_WRTB$OFF 000000  
                          __CFG_WRTC$OFF 000000                            __CFG_WRTD$OFF 000000  
                         __CFG_EBTRB$OFF 000000                           __CFG_BOREN$OFF 000000  
                                  tablat 000FF5                                    status 000FD8  
                        __initialization FCF6                             __end_of_main FE16  
                  ?_gpio_pin_write_logic 0023                                   ??_main 0030  
                          __activetblptr 000002                        ?_motor_turn_right 002D  
                     ??_motor_turn_right 002F                            _tris_register 0015  
            __size_of_functionInitialize 000E                           __CFG_XINST$OFF 000000  
                         __CFG_STVREN$ON 000000  gpio_pin_direction_intialize@_pin_config 0023  
                           __pdataCOMRAM 0001                                   tblptrh 000FF7  
                                 tblptrl 000FF6                                   tblptru 000FF8  
           motor_turn_right@Local_Status 002F                               __accesstop 0080  
                __end_of__initialization FD16                          __CFG_PBADEN$OFF 000000  
                          ___rparam_used 000001                   ??_gpio_pin_write_logic 0026  
                         __pcstackCOMRAM 0023          gpio_pin_write_logic@LocalReturn 002C  
              __size_of_motor_initialize 0034                          _motor_turn_left FD54  
                                __Hparam 0000                                  __Lparam 0000  
                                __pcinit FCF6                                  __ramtop 1000  
                                __ptext0 FDCC                                  __ptext1 FD90  
                                __ptext2 FD54                                  __ptext3 FEF8  
                                __ptext4 FCC6                                  __ptext5 FD20  
                                __ptext6 FE16                     end_of_initialization FD16  
                __end_of_motor_turn_left FD90                            __Lmediumconst 0000  
               motor_turn_left@motor_obj 002D                __size_of_motor_turn_right 003C  
                                postdec1 000FE5                                  postdec2 000FDD  
                                postinc0 000FEE                                  postinc2 000FDE  
   __end_of_gpio_pin_direction_intialize FEF8    __size_of_gpio_pin_direction_intialize 00E2  
           _gpio_pin_direction_intialize FE16               __end_of_functionInitialize FCD4  
                       _motor_initialize FD20                            __pidataCOMRAM FCD4  
           motor_initialize@Local_Status 002E                      start_initialization FCF6  
          ?_gpio_pin_direction_intialize 0023                             _lat_register 0001  
                       ?_motor_turn_left 002D            __size_of_gpio_pin_write_logic 0108  
                       __CFG_LPT1OSC$OFF 000000                         _motor_turn_right FD90  
                      __CFG_CCP2MX$PORTC 000000          gpio_pin_write_logic@_pin_config 0023  
              gpio_pin_write_logic@logic 0025           ??_gpio_pin_direction_intialize 0025  
                       __CFG_WDTPS$32768 000000                 __end_of_motor_initialize FD54  
                              copy_data0 FD0A                                 __Hrparam 0000  
                               __Lrparam 0000                       _functionInitialize FCC6  
              motor_turn_right@motor_obj 002D                      ?_functionInitialize 0023  
gpio_pin_direction_intialize@LocalReturn 002B                            __size_of_main 004A  
                   ??_functionInitialize 002F                                 _motorOne 001F  
              motor_initialize@motor_obj 002C              motor_turn_left@Local_Status 002F  
               __end_of_motor_turn_right FDCC             __end_of_gpio_pin_write_logic 0000  
               __size_of_motor_turn_left 003C                            _port_register 000B  
